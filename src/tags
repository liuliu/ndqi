!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(apr_status_t) frl_slab_block_create(frl_slab_block_t** newblock, frl_slab_pool_t* pool, apr_size_t capacity)$/;"	f
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(apr_status_t) frl_slab_block_destory(frl_slab_block_t* block)$/;"	f
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(apr_status_t) frl_slab_pool_create(frl_slab_pool_t** newpool, apr_pool_t *mempool, apr_uint32_t capacity, apr_uint32_t per_size, frl_lock_u lock)$/;"	f
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(apr_status_t) frl_slab_pool_destroy(frl_slab_pool_t* pool)$/;"	f
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(apr_status_t) frl_slab_pool_safe(frl_slab_pool_t* pool)$/;"	f
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(frl_mem_stat_t) frl_slab_pool_stat(frl_slab_pool_t* pool)$/;"	f
AllSomeAnyOptList	parser/gram.y	/^AllSomeAnyOptList:	ALL { $$.ival = NQSQRYALL; } |$/;"	l
BINDIR	swig/makefile	/^BINDIR=\/usr\/local\/bin$/;"	m
BUF_PTR_CPY	nqbwdb.c	847;"	d	file:
BUF_PTR_CPY	nqbwdb.c	973;"	d	file:
BUF_PTR_CPY	nqfdb.c	581;"	d	file:
BUF_PTR_CPY	nqfdb.c	691;"	d	file:
BUF_PTR_VAL	nqbwdb.c	846;"	d	file:
BUF_PTR_VAL	nqbwdb.c	972;"	d	file:
BUF_PTR_VAL	nqfdb.c	580;"	d	file:
BUF_PTR_VAL	nqfdb.c	690;"	d	file:
BetweenStmt	parser/gram.y	/^BetweenStmt:	ColumnStmt BETWEEN ScalarExp AND ScalarExp$/;"	l
COL_NAME_KEYWORD	parser/keywords.h	5;"	d
COMPFLAG	test/makefile	/^COMPFLAG=-O3$/;"	m
CV_TYPE_NAME_ML_APCLUSTER	lib/mlapcluster.h	6;"	d
CXXFLAGS	net/makefile	/^CXXFLAGS = -I"\/opt\/apr\/include" -I"\/opt\/apr-util\/include" -I"$(OPENCV)\/include\/opencv"$/;"	m
CXXFLAGS	parser/makefile	/^CXXFLAGS = -I"\/opt\/apr\/include" -I"\/opt\/apr-util\/include" -I"$(OPENCV)\/include\/opencv"$/;"	m
CXXFLAGS	swig/makefile	/^CXXFLAGS=-I"\/opt\/apr\/include" -I"\/opt\/apr-util\/include" -I"$(OPENCV)\/include\/opencv" -I"\/usr\/include\/python2.6" -fPIC$/;"	m
CXXFLAGS	test/makefile	/^CXXFLAGS=-I"\/opt\/apr\/include" -I"\/opt\/apr-util\/include" -I"$(OPENCV)\/include\/opencv"$/;"	m
CXXFLAGS	tool/makefile	/^CXXFLAGS = -I"\/opt\/apr\/include" -I"\/opt\/apr-util\/include" -I"$(OPENCV)\/include\/opencv"$/;"	m
ColumnListStmt	parser/gram.y	/^ColumnListStmt:	ColumnStmt |$/;"	l
ColumnOptListStmt	parser/gram.y	/^ColumnOptListStmt:	\/* empty value *\/ |$/;"	l
ColumnStmt	parser/gram.y	/^ColumnStmt:	UUID { $$ = $1; } |$/;"	l
CommandStmt	parser/gram.y	/^CommandStmt:	SYNCHRONIZE DISK$/;"	l
ComparisonStmt	parser/gram.y	/^ComparisonStmt:	ColumnStmt NUMGT ScalarExp$/;"	l
CondStmt	parser/gram.y	/^CondStmt:	CondStmt OR CondStmt$/;"	l
CvAPCParams	lib/mlapcluster.h	/^	CvAPCParams( int _maxiteration, int _stopcriterion, double _lambda )$/;"	f	struct:CvAPCParams	access:public	signature:( int _maxiteration, int _stopcriterion, double _lambda )
CvAPCParams	lib/mlapcluster.h	/^	CvAPCParams()$/;"	f	struct:CvAPCParams	access:public	signature:()
CvAPCParams	lib/mlapcluster.h	/^struct CV_EXPORTS CvAPCParams$/;"	s
CvAPCParams::CvAPCParams	lib/mlapcluster.h	/^	CvAPCParams( int _maxiteration, int _stopcriterion, double _lambda )$/;"	f	struct:CvAPCParams	access:public	signature:( int _maxiteration, int _stopcriterion, double _lambda )
CvAPCParams::CvAPCParams	lib/mlapcluster.h	/^	CvAPCParams()$/;"	f	struct:CvAPCParams	access:public	signature:()
CvAPCParams::lambda	lib/mlapcluster.h	/^	double lambda;$/;"	m	struct:CvAPCParams	access:public
CvAPCParams::maxiteration	lib/mlapcluster.h	/^	int maxiteration;$/;"	m	struct:CvAPCParams	access:public
CvAPCParams::stopcriterion	lib/mlapcluster.h	/^	int stopcriterion;$/;"	m	struct:CvAPCParams	access:public
CvAPCluster	lib/mlapcluster.cpp	/^CvAPCluster::CvAPCluster( CvAPCParams _params )$/;"	f	class:CvAPCluster	signature:( CvAPCParams _params )
CvAPCluster	lib/mlapcluster.h	/^		CvAPCluster( CvAPCParams _params );$/;"	p	class:CvAPCluster	access:public	signature:( CvAPCParams _params )
CvAPCluster	lib/mlapcluster.h	/^class CV_EXPORTS CvAPCluster : public CvStatModel$/;"	c	inherits:CvStatModel
CvAPCluster::CvAPCluster	lib/mlapcluster.cpp	/^CvAPCluster::CvAPCluster( CvAPCParams _params )$/;"	f	class:CvAPCluster	signature:( CvAPCParams _params )
CvAPCluster::CvAPCluster	lib/mlapcluster.h	/^		CvAPCluster( CvAPCParams _params );$/;"	p	class:CvAPCluster	access:public	signature:( CvAPCParams _params )
CvAPCluster::clear	lib/mlapcluster.cpp	/^CvAPCluster::clear()$/;"	f	class:CvAPCluster	signature:()
CvAPCluster::clear	lib/mlapcluster.h	/^		virtual void clear();$/;"	p	class:CvAPCluster	access:public	signature:()
CvAPCluster::params	lib/mlapcluster.h	/^		CvAPCParams params;$/;"	m	class:CvAPCluster	access:private
CvAPCluster::read	lib/mlapcluster.cpp	/^CvAPCluster::read( CvFileStorage* fs,$/;"	f	class:CvAPCluster	signature:( CvFileStorage* fs, CvFileNode* root_node )
CvAPCluster::read	lib/mlapcluster.h	/^		virtual void read( CvFileStorage* fs, CvFileNode* root_node );$/;"	p	class:CvAPCluster	access:public	signature:( CvFileStorage* fs, CvFileNode* root_node )
CvAPCluster::train	lib/mlapcluster.cpp	/^CvAPCluster::train( const CvSparseMat* similarity,$/;"	f	class:CvAPCluster	signature:( const CvSparseMat* similarity, const CvMat* labels )
CvAPCluster::train	lib/mlapcluster.cpp	/^bool CvAPCluster::train( const CvMat* similarity,$/;"	f	class:CvAPCluster	signature:( const CvMat* similarity, const CvMat* labels )
CvAPCluster::train	lib/mlapcluster.h	/^		virtual bool train( const CvMat* _train_data, const CvMat* _response );$/;"	p	class:CvAPCluster	access:public	signature:( const CvMat* _train_data, const CvMat* _response )
CvAPCluster::train	lib/mlapcluster.h	/^		virtual bool train( const CvSparseMat* _train_data, const CvMat* _response );$/;"	p	class:CvAPCluster	access:public	signature:( const CvSparseMat* _train_data, const CvMat* _response )
CvAPCluster::write	lib/mlapcluster.cpp	/^CvAPCluster::write( CvFileStorage* fs,$/;"	f	class:CvAPCluster	signature:( CvFileStorage* fs, const char* name )
CvAPCluster::write	lib/mlapcluster.h	/^		virtual void write( CvFileStorage* fs, const char* name );$/;"	p	class:CvAPCluster	access:public	signature:( CvFileStorage* fs, const char* name )
CvAPCluster::~CvAPCluster	lib/mlapcluster.cpp	/^CvAPCluster::~CvAPCluster()$/;"	f	class:CvAPCluster	signature:()
CvAPCluster::~CvAPCluster	lib/mlapcluster.h	/^		virtual ~CvAPCluster();$/;"	p	class:CvAPCluster	access:public	signature:()
CvGaborFilter	lib/cvgist.h	/^struct CvGaborFilter$/;"	s
CvGaborFilter::conv_img	lib/cvgist.h	/^	CvMat* conv_img;$/;"	m	struct:CvGaborFilter	access:public
CvGaborFilter::conv_real	lib/cvgist.h	/^	CvMat* conv_real;$/;"	m	struct:CvGaborFilter	access:public
CvGaborFilter::orientation	lib/cvgist.h	/^	int orientation;$/;"	m	struct:CvGaborFilter	access:public
CvGaborFilter::scale	lib/cvgist.h	/^	int scale;$/;"	m	struct:CvGaborFilter	access:public
CvGaborFilter::size	lib/cvgist.h	/^	int size;$/;"	m	struct:CvGaborFilter	access:public
CvSparseNode2D	lib/mlapcluster.cpp	/^struct CvSparseNode2D$/;"	s	file:
CvSparseNode2D::i	lib/mlapcluster.cpp	/^	int i;$/;"	m	struct:CvSparseNode2D	file:	access:public
CvSparseNode2D::k	lib/mlapcluster.cpp	/^	int k;$/;"	m	struct:CvSparseNode2D	file:	access:public
CvSparseNode2D::val	lib/mlapcluster.cpp	/^	double val;$/;"	m	struct:CvSparseNode2D	file:	access:public
DCAS_BUSY_VAL	lib/frl_slab_pool.c	54;"	d	file:
DIST_PACKAGE	swig/makefile	/^DIST_PACKAGE = \/usr\/lib\/python2.6\/dist-packages$/;"	m
DeleteStmt	parser/gram.y	/^DeleteStmt:	DELETE UUIDENT$/;"	l
FLOG	lib/frl_logging.h	7;"	d
FLOG_IF	lib/frl_logging.h	20;"	d
FLOG_IF_RUN	lib/frl_logging.h	25;"	d
FRL_INSERT_AFTER	lib/frl_base.h	/^	FRL_INSERT_AFTER$/;"	e	enum:frl_insert_u
FRL_INSERT_BEFORE	lib/frl_base.h	/^	FRL_INSERT_BEFORE,$/;"	e	enum:frl_insert_u
FRL_LEVEL_ERROR	lib/frl_base.h	/^	FRL_LEVEL_ERROR,$/;"	e	enum:frl_level_u
FRL_LEVEL_INFO	lib/frl_base.h	/^	FRL_LEVEL_INFO$/;"	e	enum:frl_level_u
FRL_LEVEL_WARNING	lib/frl_base.h	/^	FRL_LEVEL_WARNING,$/;"	e	enum:frl_level_u
FRL_LOCK_FREE	lib/frl_base.h	/^	FRL_LOCK_FREE$/;"	e	enum:frl_lock_u
FRL_LOCK_WITH	lib/frl_base.h	/^	FRL_LOCK_WITH,$/;"	e	enum:frl_lock_u
FRL_MEMLEAK	lib/frl_slab_pool.h	13;"	d
FRL_MEMORY_GLOBAL	lib/frl_base.h	/^	FRL_MEMORY_GLOBAL$/;"	e	enum:frl_memory_u
FRL_MEMORY_SELF	lib/frl_base.h	/^	FRL_MEMORY_SELF,$/;"	e	enum:frl_memory_u
FRL_PROGRESS_COMLETE	lib/frl_base.h	14;"	d
FRL_PROGRESS_CONTINUE	lib/frl_base.h	16;"	d
FRL_PROGRESS_INTERRUPT	lib/frl_base.h	13;"	d
FRL_PROGRESS_IS_COMLETE	lib/frl_base.h	19;"	d
FRL_PROGRESS_IS_CONTINUE	lib/frl_base.h	21;"	d
FRL_PROGRESS_IS_INTERRUPT	lib/frl_base.h	18;"	d
FRL_PROGRESS_IS_RESTART	lib/frl_base.h	22;"	d
FRL_PROGRESS_IS_WAIT_SIGNAL	lib/frl_base.h	20;"	d
FRL_PROGRESS_RESTART	lib/frl_base.h	17;"	d
FRL_PROGRESS_WAIT_SIGNAL	lib/frl_base.h	15;"	d
FRL_STACKBUSY	lib/frl_slab_pool.h	15;"	d
FRL_STACKERR	lib/frl_slab_pool.h	14;"	d
FRL_THREAD_CONSUMER_PRODUCER	lib/frl_base.h	/^	FRL_THREAD_CONSUMER_PRODUCER$/;"	e	enum:frl_thread_model_u
FRL_THREAD_LEADER_FOLLOWER	lib/frl_base.h	/^	FRL_THREAD_LEADER_FOLLOWER,$/;"	e	enum:frl_thread_model_u
F_ERROR	lib/frl_logging.h	31;"	d
F_ERROR_IF	lib/frl_logging.h	34;"	d
F_ERROR_IF_RUN	lib/frl_logging.h	37;"	d
F_INFO	lib/frl_logging.h	49;"	d
F_INFO_IF	lib/frl_logging.h	52;"	d
F_INFO_IF_RUN	lib/frl_logging.h	55;"	d
F_WARNING	lib/frl_logging.h	40;"	d
F_WARNING_IF	lib/frl_logging.h	43;"	d
F_WARNING_IF_RUN	lib/frl_logging.h	46;"	d
GCC_HASCLASSVISIBILITY	swig/ndqi_wrap.cxx	103;"	d	file:
GOLDEN	lib/cvlocalhist.cpp	8;"	d	file:
GROUP	swig/makefile	/^GROUP=bin$/;"	m
GUARD_cvgist_h	lib/cvgist.h	9;"	d
GUARD_cvlocalhist_h	lib/cvlocalhist.h	2;"	d
GUARD_frl_base_h	lib/frl_base.h	2;"	d
GUARD_frl_logging_h	lib/frl_logging.h	2;"	d
GUARD_frl_managed_mem_h	lib/frl_managed_mem.h	2;"	d
GUARD_frl_slab_pool_h	lib/frl_slab_pool.h	8;"	d
GUARD_frl_util_md5_h	lib/frl_util_md5.h	2;"	d
GUARD_frog_uuid_h	lib/uuid.h	2;"	d
GUARD_mlapcluster_h	lib/mlapcluster.h	2;"	d
INSTALL	swig/makefile	/^INSTALL=\/usr\/bin\/install$/;"	m
InStmt	parser/gram.y	/^InStmt:	ScalarExp IN SubQueryStmt;$/;"	l
InsertStmt	parser/gram.y	/^InsertStmt:	INSERT UUIDENT$/;"	l
LEX	net/makefile	/^LEX = flex -8$/;"	m
LEX	parser/makefile	/^LEX = flex -8$/;"	m
LEX	tool/makefile	/^LEX = flex -8$/;"	m
LINKFLAG	net/makefile	/^LINKFLAG=-ldl -lpthread -lrt -lapr-1 -laprutil-1 -lcv -lhighgui -ltokyocabinet -ltokyodystopia -lexif -levent$/;"	m
LINKFLAG	parser/makefile	/^LINKFLAG=-ldl -lpthread -lrt -lapr-1 -laprutil-1 -lcxcore -lcv -lhighgui -ltokyocabinet -ltokyodystopia -lexif$/;"	m
LINKFLAG	swig/makefile	/^LINKFLAG=-ldl -lpthread -lrt -lapr-1 -laprutil-1 -lcv -ltokyocabinet -ltokyodystopia -lexif$/;"	m
LINKFLAG	test/makefile	/^LINKFLAG=-ldl -lpthread -lrt -lapr-1 -laprutil-1 -lcxcore -lcv -lhighgui -ltokyocabinet -ltokyodystopia -lexif$/;"	m
LINKFLAG	tool/makefile	/^LINKFLAG=-ldl -lpthread -lrt -lapr-1 -laprutil-1 -lcxcore -lcv -lhighgui$/;"	m
LINKLIB	swig/makefile	/^LINKLIB=-L"$(OPENCV)\/lib"$/;"	m
LINKLIB	test/makefile	/^LINKLIB=-L"$(OPENCV)\/lib"$/;"	m
LastScanDatabase	config/databases.c	/^ScanDatabase* LastScanDatabase = ScanDatabases + sizeof(ScanDatabases) \/ sizeof(ScanDatabase);$/;"	v
LastScanKeyword	parser/keywords.c	/^const ScanKeyword* LastScanKeyword = ScanKeywords + sizeof(ScanKeywords) \/ sizeof(ScanKeyword);$/;"	v
LikeCfdStmt	parser/gram.y	/^LikeCfdStmt:	LikeThrStmt |$/;"	l
LikeStmt	parser/gram.y	/^LikeStmt:	ColumnStmt EXACT LIKE UUIDENT$/;"	l
LikeThrStmt	parser/gram.y	/^LikeThrStmt:	LikeStmt |$/;"	l
ListStmt	parser/gram.y	/^ListStmt:	Stmt { YY_RESULT = $$.result = $1.result; } |$/;"	l
NAMEDATALEN	config/databases.h	4;"	d
NAMEDATALEN	parser/keywords.h	9;"	d
NQBWDB	nqbwdb.h	/^} NQBWDB;$/;"	t	typeref:struct:__anon10
NQBWDBDATUM	nqbwdb.h	/^} NQBWDBDATUM;$/;"	t	typeref:struct:__anon9
NQBWDBDATUM_MAGIC_VAL	nqbwdb.h	/^const short int NQBWDBDATUM_MAGIC_VAL = 0x7643;$/;"	v
NQBWDBIDX	nqbwdb.h	/^typedef struct NQBWDBIDX {$/;"	s
NQBWDBIDX	nqbwdb.h	/^} NQBWDBIDX;$/;"	t	typeref:struct:NQBWDBIDX
NQBWDBIDX::inum	nqbwdb.h	/^	uint32_t inum;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::kstr	nqbwdb.h	/^	char** kstr;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::match	nqbwdb.h	/^	double match;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::next	nqbwdb.h	/^	struct NQBWDBIDX* next;$/;"	m	struct:NQBWDBIDX	typeref:struct:NQBWDBIDX::NQBWDBIDX	access:public
NQBWDBIDX::prev	nqbwdb.h	/^	struct NQBWDBIDX* prev;$/;"	m	struct:NQBWDBIDX	typeref:struct:NQBWDBIDX::NQBWDBIDX	access:public
NQBWDBIDX::rnum	nqbwdb.h	/^	uint32_t rnum;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::smft	nqbwdb.h	/^	CvFeatureTree* smft;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::smmat	nqbwdb.h	/^	CvMat* smmat;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::stem	nqbwdb.h	/^	NQBWDBSTEM* stem;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX_MAGIC_VAL	nqbwdb.h	/^const short int NQBWDBIDX_MAGIC_VAL = 0x8239;$/;"	v
NQBWDBSTEM	nqbwdb.h	/^} NQBWDBSTEM;$/;"	t	typeref:struct:__anon8
NQBWDBUNIDX	nqbwdb.h	/^typedef struct NQBWDBUNIDX {$/;"	s
NQBWDBUNIDX	nqbwdb.h	/^} NQBWDBUNIDX;$/;"	t	typeref:struct:NQBWDBUNIDX
NQBWDBUNIDX::datum	nqbwdb.h	/^	NQBWDBDATUM* datum;$/;"	m	struct:NQBWDBUNIDX	access:public
NQBWDBUNIDX::kstr	nqbwdb.h	/^	char* kstr;$/;"	m	struct:NQBWDBUNIDX	access:public
NQBWDBUNIDX::next	nqbwdb.h	/^	struct NQBWDBUNIDX* next;$/;"	m	struct:NQBWDBUNIDX	typeref:struct:NQBWDBUNIDX::NQBWDBUNIDX	access:public
NQBWDBUNIDX::prev	nqbwdb.h	/^	struct NQBWDBUNIDX* prev;$/;"	m	struct:NQBWDBUNIDX	typeref:struct:NQBWDBUNIDX::NQBWDBUNIDX	access:public
NQBWDBUNIDX_MAGIC_VAL	nqbwdb.h	/^const short int NQBWDBUNIDX_MAGIC_VAL = 0x1839;$/;"	v
NQBWDB_MAGIC_VAL	nqbwdb.h	/^const short int NQBWDB_MAGIC_VAL = 0x9304;$/;"	v
NQBWPAIR	nqbwdb.c	/^} NQBWPAIR;$/;"	t	typeref:struct:__anon6	file:
NQBWUSERDATA	nqbwdb.c	/^} NQBWUSERDATA;$/;"	t	typeref:struct:__anon7	file:
NQBW_LIKE_BEST_MATCH_COUNT	nqbwdb.h	12;"	d
NQBW_LIKE_BEST_MATCH_SCORE	nqbwdb.h	13;"	d
NQCMDIDX	parser/nqparser.h	/^    NQCMDIDX      = 0x4,$/;"	e	enum:__anon20
NQCMDMGIDX	parser/nqparser.h	/^    NQCMDMGIDX    = 0x3,$/;"	e	enum:__anon20
NQCMDREIDX	parser/nqparser.h	/^    NQCMDREIDX    = 0x5,$/;"	e	enum:__anon20
NQCMDSYNCDISK	parser/nqparser.h	/^    NQCMDSYNCDISK = 0x1,$/;"	e	enum:__anon20
NQCMDSYNCMEM	parser/nqparser.h	/^    NQCMDSYNCMEM  = 0x2,$/;"	e	enum:__anon20
NQCOMMAND	parser/nqparser.h	/^} NQCOMMAND;$/;"	t	typeref:struct:__anon17
NQCOMMANDPARAM	parser/nqparser.h	/^} NQCOMMANDPARAM;$/;"	t	typeref:union:__anon16
NQCTAND	nqqry.h	/^	NQCTAND   = 0x01,	\/* and conjunction         *\/$/;"	e	enum:__anon30
NQCTOR	nqqry.h	/^	NQCTOR    = 0x02,	\/* or conjunction          *\/$/;"	e	enum:__anon30
NQFDB	nqfdb.h	/^} NQFDB;$/;"	t	typeref:struct:__anon25
NQFDBDATUM	nqfdb.h	/^} NQFDBDATUM;$/;"	t	typeref:struct:__anon24
NQFDBDATUM_MAGIC_VAL	nqfdb.h	/^const short int NQFDBDATUM_MAGIC_VAL = 0x2487;$/;"	v
NQFDBIDX	nqfdb.h	/^typedef struct NQFDBIDX {$/;"	s
NQFDBIDX	nqfdb.h	/^} NQFDBIDX;$/;"	t	typeref:struct:NQFDBIDX
NQFDBIDX::data	nqfdb.h	/^	NQFDBDATUM** data;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::f	nqfdb.h	/^	CvMat* f;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::ft	nqfdb.h	/^	CvFeatureTree* ft;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::inum	nqfdb.h	/^	uint32_t inum;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::kstr	nqfdb.h	/^	char** kstr;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::naive	nqfdb.h	/^	int naive;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::next	nqfdb.h	/^	struct NQFDBIDX* next;$/;"	m	struct:NQFDBIDX	typeref:struct:NQFDBIDX::NQFDBIDX	access:public
NQFDBIDX::p	nqfdb.h	/^	CvMat* p;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::prev	nqfdb.h	/^	struct NQFDBIDX* prev;$/;"	m	struct:NQFDBIDX	typeref:struct:NQFDBIDX::NQFDBIDX	access:public
NQFDBIDX::rho	nqfdb.h	/^	double rho;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::tau	nqfdb.h	/^	double tau;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX_MAGIC_VAL	nqfdb.h	/^const short int NQFDBIDX_MAGIC_VAL = 0x9837;$/;"	v
NQFDBUNIDX	nqfdb.h	/^typedef struct NQFDBUNIDX {$/;"	s
NQFDBUNIDX	nqfdb.h	/^} NQFDBUNIDX;$/;"	t	typeref:struct:NQFDBUNIDX
NQFDBUNIDX::datum	nqfdb.h	/^	NQFDBDATUM* datum;$/;"	m	struct:NQFDBUNIDX	access:public
NQFDBUNIDX::kstr	nqfdb.h	/^	char* kstr;$/;"	m	struct:NQFDBUNIDX	access:public
NQFDBUNIDX::next	nqfdb.h	/^	struct NQFDBUNIDX* next;$/;"	m	struct:NQFDBUNIDX	typeref:struct:NQFDBUNIDX::NQFDBUNIDX	access:public
NQFDBUNIDX::prev	nqfdb.h	/^	struct NQFDBUNIDX* prev;$/;"	m	struct:NQFDBUNIDX	typeref:struct:NQFDBUNIDX::NQFDBUNIDX	access:public
NQFDBUNIDX_MAGIC_VAL	nqfdb.h	/^const short int NQFDBUNIDX_MAGIC_VAL = 0x8393;$/;"	v
NQFDB_MAGIC_VAL	nqfdb.h	/^const short int NQFDB_MAGIC_VAL = 0x2F28;$/;"	v
NQFOREACH	nqutil.h	/^typedef void (*NQFOREACH) (char*, void*, void*);$/;"	t
NQFPAIR	nqfdb.c	/^} NQFPAIR;$/;"	t	typeref:struct:__anon22	file:
NQFUSERDATA	nqfdb.c	/^} NQFUSERDATA;$/;"	t	typeref:struct:__anon23	file:
NQMANIPULATE	parser/nqparser.h	/^} NQMANIPULATE;$/;"	t	typeref:struct:__anon14
NQMPSIMPLE	parser/nqparser.h	/^	NQMPSIMPLE  = 0x1,$/;"	e	enum:__anon19
NQMPUUIDENT	parser/nqparser.h	/^	NQMPUUIDENT = 0x2,$/;"	e	enum:__anon19
NQMPWHERE	parser/nqparser.h	/^	NQMPWHERE   = 0x3,$/;"	e	enum:__anon19
NQOPELIKE	nqqry.h	/^	NQOPELIKE = 0x09,	\/* object is exact like (exhausted search) *\/$/;"	e	enum:__anon31
NQOPLIKE	nqqry.h	/^	NQOPLIKE  = 0x08,	\/* object is like (index search)           *\/$/;"	e	enum:__anon31
NQOPNOT	nqqry.h	/^	NQOPNOT   = 0x10	\/* not operator                            *\/$/;"	e	enum:__anon31
NQOPNULL	nqqry.h	/^	NQOPNULL  = 0x0A,	\/* object is null                          *\/$/;"	e	enum:__anon31
NQOPNUMBT	nqqry.h	/^	NQOPNUMBT = 0x07,	\/* between two numbers                     *\/$/;"	e	enum:__anon31
NQOPNUMEQ	nqqry.h	/^	NQOPNUMEQ = 0x02,	\/* number is equal to                      *\/$/;"	e	enum:__anon31
NQOPNUMGE	nqqry.h	/^	NQOPNUMGE = 0x04,	\/* number is greater than or equal to      *\/$/;"	e	enum:__anon31
NQOPNUMGT	nqqry.h	/^	NQOPNUMGT = 0x03,	\/* number is greater than                  *\/$/;"	e	enum:__anon31
NQOPNUMLE	nqqry.h	/^	NQOPNUMLE = 0x06,	\/* number is less than or equal to         *\/$/;"	e	enum:__anon31
NQOPNUMLT	nqqry.h	/^	NQOPNUMLT = 0x05,	\/* number is less than                     *\/$/;"	e	enum:__anon31
NQOPSTREQ	nqqry.h	/^	NQOPSTREQ = 0x01,	\/* string is equal to                      *\/$/;"	e	enum:__anon31
NQPARSERESULT	parser/nqparser.h	/^} NQPARSERESULT;$/;"	t	typeref:struct:__anon13
NQPLAN	net/nqplan.h	/^} NQPLAN;$/;"	t	typeref:struct:__anon2
NQPLANITER	net/nqplan.h	/^typedef struct NQPLANITER {$/;"	s
NQPLANITER	net/nqplan.h	/^} NQPLANITER;$/;"	t	typeref:struct:NQPLANITER
NQPLANITER::dbname	net/nqplan.h	/^	const char* dbname;$/;"	m	struct:NQPLANITER	access:public
NQPLANITER::postqry	net/nqplan.h	/^	NQQRY* postqry;$/;"	m	struct:NQPLANITER	access:public
NQPLANITER::prev	net/nqplan.h	/^	NQPLANITER* prev;$/;"	m	struct:NQPLANITER	access:public
NQPLANITER::qry	net/nqplan.h	/^	NQQRY* qry;$/;"	m	struct:NQPLANITER	access:public
NQPLANITER::type	net/nqplan.h	/^	int type;$/;"	m	struct:NQPLANITER	access:public
NQPREQRY	nqpreqry.h	/^typedef struct NQPREQRY {$/;"	s
NQPREQRY	nqpreqry.h	/^} NQPREQRY;$/;"	t	typeref:struct:NQPREQRY
NQPREQRY::__anon11::str	nqpreqry.h	/^		char* str;$/;"	m	union:NQPREQRY::__anon11	access:public
NQPREQRY::__anon11::subqry	nqpreqry.h	/^		struct NQPREQRY* subqry;$/;"	m	union:NQPREQRY::__anon11	typeref:struct:NQPREQRY::__anon11::NQPREQRY	access:public
NQPREQRY::cfd	nqpreqry.h	/^	float cfd;$/;"	m	struct:NQPREQRY	access:public
NQPREQRY::cnum	nqpreqry.h	/^	int cnum;$/;"	m	struct:NQPREQRY	access:public
NQPREQRY::col	nqpreqry.h	/^	char* col;$/;"	m	struct:NQPREQRY	access:public
NQPREQRY::conds	nqpreqry.h	/^	struct NQPREQRY** conds;$/;"	m	struct:NQPREQRY	typeref:struct:NQPREQRY::NQPREQRY	access:public
NQPREQRY::db	nqpreqry.h	/^	const char* db;$/;"	m	struct:NQPREQRY	access:public
NQPREQRY::lmt	nqpreqry.h	/^	int lmt;$/;"	m	struct:NQPREQRY	access:public
NQPREQRY::op	nqpreqry.h	/^	int op;$/;"	m	struct:NQPREQRY	access:public
NQPREQRY::order	nqpreqry.h	/^	int order;$/;"	m	struct:NQPREQRY	access:public
NQPREQRY::orderby	nqpreqry.h	/^	char* orderby;$/;"	m	struct:NQPREQRY	access:public
NQPREQRY::result	nqpreqry.h	/^	NQRDB* result;$/;"	m	struct:NQPREQRY	access:public
NQPREQRY::sbj	nqpreqry.h	/^	} sbj;$/;"	m	struct:NQPREQRY	typeref:union:NQPREQRY::__anon11	access:public
NQPREQRY::thr	nqpreqry.h	/^	float thr;$/;"	m	struct:NQPREQRY	access:public
NQPREQRY::type	nqpreqry.h	/^	int type;$/;"	m	struct:NQPREQRY	access:public
NQQRY	nqqry.h	/^typedef struct NQQRY {$/;"	s
NQQRY	nqqry.h	/^} NQQRY;$/;"	t	typeref:struct:NQQRY
NQQRY::__anon29::desc	nqqry.h	/^		CvMat* desc;$/;"	m	union:NQQRY::__anon29	access:public
NQQRY::__anon29::str	nqqry.h	/^		char* str;$/;"	m	union:NQQRY::__anon29	access:public
NQQRY::cfd	nqqry.h	/^	float cfd;$/;"	m	struct:NQQRY	access:public
NQQRY::cnum	nqqry.h	/^	int cnum;$/;"	m	struct:NQQRY	access:public
NQQRY::col	nqqry.h	/^	void* col;$/;"	m	struct:NQQRY	access:public
NQQRY::conds	nqqry.h	/^	struct NQQRY** conds;$/;"	m	struct:NQQRY	typeref:struct:NQQRY::NQQRY	access:public
NQQRY::db	nqqry.h	/^	void* db;$/;"	m	struct:NQQRY	access:public
NQQRY::lmt	nqqry.h	/^	int lmt;$/;"	m	struct:NQQRY	access:public
NQQRY::mode	nqqry.h	/^	int mode;$/;"	m	struct:NQQRY	access:public
NQQRY::op	nqqry.h	/^	int op;$/;"	m	struct:NQQRY	access:public
NQQRY::order	nqqry.h	/^	int order;$/;"	m	struct:NQQRY	access:public
NQQRY::result	nqqry.h	/^	NQRDB* result;$/;"	m	struct:NQQRY	access:public
NQQRY::sbj	nqqry.h	/^	} sbj;$/;"	m	struct:NQQRY	typeref:union:NQQRY::__anon29	access:public
NQQRY::thr	nqqry.h	/^	float thr;$/;"	m	struct:NQQRY	access:public
NQQRY::type	nqqry.h	/^	int type;$/;"	m	struct:NQQRY	access:public
NQQRYPAIR	nqqry.c	/^} NQQRYPAIR;$/;"	t	typeref:struct:__anon27	file:
NQQRYUSERDATA	nqqry.c	/^} NQQRYUSERDATA;$/;"	t	typeref:struct:__anon28	file:
NQRDB	nqrdb.h	/^} NQRDB;$/;"	t	typeref:struct:__anon26
NQRDBDATUM	nqrdb.h	/^typedef struct NQRDBDATUM {$/;"	s
NQRDBDATUM	nqrdb.h	/^} NQRDBDATUM;$/;"	t	typeref:struct:NQRDBDATUM
NQRDBDATUM::chd	nqrdb.h	/^	NQRDBDATUM** chd;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::dirty	nqrdb.h	/^	bool dirty;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::ht	nqrdb.h	/^	uint8_t ht;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::kint	nqrdb.h	/^	uint32_t kint[4];$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::max	nqrdb.h	/^	uint32_t max;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::next	nqrdb.h	/^	NQRDBDATUM* next;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::pr	nqrdb.h	/^	NQRDBDATUM* pr;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::prev	nqrdb.h	/^	NQRDBDATUM* prev;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::rnum	nqrdb.h	/^	uint32_t rnum;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::vbuf	nqrdb.h	/^	void* vbuf;$/;"	m	struct:NQRDBDATUM	access:public
NQRTCOMMAND	parser/nqparser.h	/^    NQRTCOMMAND = 0x5,$/;"	e	enum:__anon18
NQRTDELETE	parser/nqparser.h	/^	NQRTDELETE  = 0x4,$/;"	e	enum:__anon18
NQRTINSERT	parser/nqparser.h	/^	NQRTINSERT  = 0x2,$/;"	e	enum:__anon18
NQRTSELECT	parser/nqparser.h	/^	NQRTSELECT  = 0x1,$/;"	e	enum:__anon18
NQRTUPDATE	parser/nqparser.h	/^	NQRTUPDATE  = 0x3,$/;"	e	enum:__anon18
NQSQRYALL	nqqry.h	/^	NQSQRYALL = 0x50 	\/* sub-query for all       *\/$/;"	e	enum:__anon30
NQSQRYANY	nqqry.h	/^	NQSQRYANY = 0x30,	\/* sub-query for any       *\/$/;"	e	enum:__anon30
NQSUBQRY	nqqry.h	/^	NQSUBQRY  = 0x10,	\/* sub-query               *\/$/;"	e	enum:__anon30
NQTBWDB	nqqry.h	/^	NQTBWDB   = 0x04,	\/* bwdb type               *\/$/;"	e	enum:__anon30
NQTDB	nqtdb.h	/^} NQTDB;$/;"	t	typeref:struct:__anon32
NQTDBMAXSIZ	nqtdb.h	15;"	d
NQTFDB	nqqry.h	/^	NQTFDB    = 0x05,	\/* fdb type                *\/$/;"	e	enum:__anon30
NQTRDB	nqqry.h	/^	NQTRDB    = 0x03,	\/* rdb type                *\/$/;"	e	enum:__anon30
NQTSPHINX	nqqry.h	/^	NQTSPHINX = 0x08,	\/* sphinx full-text search *\/$/;"	e	enum:__anon30
NQTTCTDB	nqqry.h	/^	NQTTCTDB  = 0x07,	\/* tokyo-cabinet table db  *\/$/;"	e	enum:__anon30
NQTTDB	nqqry.h	/^	NQTTDB    = 0x06,	\/* tdb type (tag db)       *\/$/;"	e	enum:__anon30
NQ_DATABASE	config/databases.c	5;"	d	file:
NQ_DIRECTORY	net/nqclient.c	215;"	d	file:
NQ_DIRECTORY	net/nqclient.c	217;"	d	file:
NQ_KEYWORD	parser/keywords.c	4;"	d	file:
OPENCV	net/makefile	/^OPENCV = \/opt\/opencv$/;"	m
OPENCV	parser/makefile	/^OPENCV = \/opt\/opencv$/;"	m
OPENCV	swig/makefile	/^OPENCV=\/opt\/opencv$/;"	m
OPENCV	test/makefile	/^OPENCV=\/opt\/opencv$/;"	m
OPENCV	tool/makefile	/^OPENCV = \/opt\/opencv$/;"	m
OUTDIR	test/makefile	/^OUTDIR=..\/..\/build$/;"	m
OWNER	swig/makefile	/^OWNER=bin$/;"	m
PY_SSIZE_T_MAX	swig/ndqi_wrap.cxx	819;"	d	file:
PY_SSIZE_T_MIN	swig/ndqi_wrap.cxx	820;"	d	file:
PredicateStmt	parser/gram.y	/^PredicateStmt:	ComparisonStmt { $$ = $1; } |$/;"	l
PyBool_FromLong	swig/ndqi_wrap.cxx	/^PyObject *PyBool_FromLong(long ok)$/;"	f	file:	signature:(long ok)
PyExc_StopIteration	swig/ndqi_wrap.cxx	774;"	d	file:
PyModule_AddObject	swig/ndqi_wrap.cxx	/^PyModule_AddObject(PyObject *m, char *name, PyObject *o)$/;"	f	signature:(PyObject *m, char *name, PyObject *o)
PyOS_snprintf	swig/ndqi_wrap.cxx	738;"	d	file:
PyOS_snprintf	swig/ndqi_wrap.cxx	740;"	d	file:
PyObject_DEL	swig/ndqi_wrap.cxx	768;"	d	file:
PyObject_Del	swig/ndqi_wrap.cxx	765;"	d	file:
PyObject_GenericGetAttr	swig/ndqi_wrap.cxx	777;"	d	file:
PyObject_ptr	swig/ndqi_wrap.cxx	/^    PyObject_ptr() :_obj(0)$/;"	f	class:swig::PyObject_ptr	access:public	signature:()
PyObject_ptr	swig/ndqi_wrap.cxx	/^    PyObject_ptr(PyObject *obj, bool initial_ref = true) :_obj(obj)$/;"	f	class:swig::PyObject_ptr	access:public	signature:(PyObject *obj, bool initial_ref = true)
PyObject_ptr	swig/ndqi_wrap.cxx	/^    PyObject_ptr(const PyObject_ptr& item) : _obj(item._obj)$/;"	f	class:swig::PyObject_ptr	access:public	signature:(const PyObject_ptr& item)
PyObject_ptr	swig/ndqi_wrap.cxx	/^  class PyObject_ptr {$/;"	c	namespace:swig	file:
PyObject_var	swig/ndqi_wrap.cxx	/^    PyObject_var(PyObject* obj = 0) : PyObject_ptr(obj, false) { }$/;"	f	struct:swig::PyObject_var	access:public	signature:(PyObject* obj = 0)
PyObject_var	swig/ndqi_wrap.cxx	/^  struct PyObject_var : PyObject_ptr {$/;"	s	namespace:swig	file:	inherits:PyObject_ptr
PySequence_Size	swig/ndqi_wrap.cxx	798;"	d	file:
PyString_AsStringAndSize	swig/ndqi_wrap.cxx	791;"	d	file:
PyString_FromFormat	swig/ndqi_wrap.cxx	/^PyString_FromFormat(const char *fmt, ...) {$/;"	f	file:	signature:(const char *fmt, ...)
PySwigClientData	swig/ndqi_wrap.cxx	/^} PySwigClientData;$/;"	t	typeref:struct:__anon3	file:
PySwigClientData_Del	swig/ndqi_wrap.cxx	/^PySwigClientData_Del(PySwigClientData* data)$/;"	f	signature:(PySwigClientData* data)
PySwigClientData_New	swig/ndqi_wrap.cxx	/^PySwigClientData_New(PyObject* obj)$/;"	f	signature:(PyObject* obj)
PySwigObject	swig/ndqi_wrap.cxx	/^} PySwigObject;$/;"	t	typeref:struct:__anon4	file:
PySwigObject_Check	swig/ndqi_wrap.cxx	/^PySwigObject_Check(PyObject *op) {$/;"	f	signature:(PyObject *op)
PySwigObject_GetDesc	swig/ndqi_wrap.cxx	/^PySwigObject_GetDesc(PyObject *self)$/;"	f	signature:(PyObject *self)
PySwigObject_New	swig/ndqi_wrap.cxx	/^PySwigObject_New(void *ptr, swig_type_info *ty, int own)$/;"	f	signature:(void *ptr, swig_type_info *ty, int own)
PySwigObject_New	swig/ndqi_wrap.cxx	/^PySwigObject_New(void *ptr, swig_type_info *ty, int own);$/;"	p	file:	signature:(void *ptr, swig_type_info *ty, int own)
PySwigObject_acquire	swig/ndqi_wrap.cxx	/^PySwigObject_acquire(PyObject *v)$/;"	f	signature:(PyObject *v)
PySwigObject_append	swig/ndqi_wrap.cxx	/^PySwigObject_append(PyObject* v, PyObject* next)$/;"	f	signature:(PyObject* v, PyObject* next)
PySwigObject_compare	swig/ndqi_wrap.cxx	/^PySwigObject_compare(PySwigObject *v, PySwigObject *w)$/;"	f	signature:(PySwigObject *v, PySwigObject *w)
PySwigObject_dealloc	swig/ndqi_wrap.cxx	/^PySwigObject_dealloc(PyObject *v)$/;"	f	signature:(PyObject *v)
PySwigObject_disown	swig/ndqi_wrap.cxx	/^PySwigObject_disown(PyObject *v)$/;"	f	signature:(PyObject *v)
PySwigObject_format	swig/ndqi_wrap.cxx	/^PySwigObject_format(const char* fmt, PySwigObject *v)$/;"	f	signature:(const char* fmt, PySwigObject *v)
PySwigObject_getattr	swig/ndqi_wrap.cxx	/^PySwigObject_getattr(PySwigObject *sobj,char *name)$/;"	f	signature:(PySwigObject *sobj,char *name)
PySwigObject_hex	swig/ndqi_wrap.cxx	/^PySwigObject_hex(PySwigObject *v)$/;"	f	signature:(PySwigObject *v)
PySwigObject_long	swig/ndqi_wrap.cxx	/^PySwigObject_long(PySwigObject *v)$/;"	f	signature:(PySwigObject *v)
PySwigObject_next	swig/ndqi_wrap.cxx	/^PySwigObject_next(PyObject* v)$/;"	f	signature:(PyObject* v)
PySwigObject_oct	swig/ndqi_wrap.cxx	/^PySwigObject_oct(PySwigObject *v)$/;"	f	signature:(PySwigObject *v)
PySwigObject_own	swig/ndqi_wrap.cxx	/^PySwigObject_own(PyObject *v, PyObject *args)$/;"	f	signature:(PyObject *v, PyObject *args)
PySwigObject_print	swig/ndqi_wrap.cxx	/^PySwigObject_print(PySwigObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))$/;"	f	signature:(PySwigObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
PySwigObject_repr	swig/ndqi_wrap.cxx	/^PySwigObject_repr(PySwigObject *v)$/;"	f	signature:(PySwigObject *v)
PySwigObject_str	swig/ndqi_wrap.cxx	/^PySwigObject_str(PySwigObject *v)$/;"	f	signature:(PySwigObject *v)
PySwigObject_type	swig/ndqi_wrap.cxx	/^PySwigObject_type(void) {$/;"	f	signature:(void)
PySwigPacked	swig/ndqi_wrap.cxx	/^} PySwigPacked;$/;"	t	typeref:struct:__anon5	file:
PySwigPacked_Check	swig/ndqi_wrap.cxx	/^PySwigPacked_Check(PyObject *op) {$/;"	f	signature:(PyObject *op)
PySwigPacked_New	swig/ndqi_wrap.cxx	/^PySwigPacked_New(void *ptr, size_t size, swig_type_info *ty)$/;"	f	signature:(void *ptr, size_t size, swig_type_info *ty)
PySwigPacked_UnpackData	swig/ndqi_wrap.cxx	/^PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)$/;"	f	signature:(PyObject *obj, void *ptr, size_t size)
PySwigPacked_compare	swig/ndqi_wrap.cxx	/^PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)$/;"	f	signature:(PySwigPacked *v, PySwigPacked *w)
PySwigPacked_dealloc	swig/ndqi_wrap.cxx	/^PySwigPacked_dealloc(PyObject *v)$/;"	f	signature:(PyObject *v)
PySwigPacked_print	swig/ndqi_wrap.cxx	/^PySwigPacked_print(PySwigPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))$/;"	f	signature:(PySwigPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
PySwigPacked_repr	swig/ndqi_wrap.cxx	/^PySwigPacked_repr(PySwigPacked *v)$/;"	f	signature:(PySwigPacked *v)
PySwigPacked_str	swig/ndqi_wrap.cxx	/^PySwigPacked_str(PySwigPacked *v)$/;"	f	signature:(PySwigPacked *v)
PySwigPacked_type	swig/ndqi_wrap.cxx	/^PySwigPacked_type(void) {$/;"	f	signature:(void)
Py_None	swig/ndqi_wrap.cxx	1209;"	d	file:
Py_None	swig/ndqi_wrap.cxx	1210;"	d	file:
Py_NotImplemented	swig/ndqi_wrap.cxx	783;"	d	file:
Py_ssize_t	swig/ndqi_wrap.cxx	/^typedef int Py_ssize_t;$/;"	t	file:
Q	swig/client.py	/^def Q(server, str):$/;"	f	access:public
QRY_MAX_LMT	nqqry.h	12;"	d
RESERVED_KEYWORD	parser/keywords.h	7;"	d
SIZEOF_APR_UINT32_T	lib/frl_base.h	/^const apr_uint32_t SIZEOF_APR_UINT32_T = sizeof(apr_uint32_t);$/;"	v
SIZEOF_FRL_MD5	lib/frl_util_md5.h	/^const unsigned int SIZEOF_FRL_MD5 = sizeof(frl_md5);$/;"	v
SIZEOF_FRL_MEM_SAFE_T	lib/frl_slab_pool.h	/^const apr_uint32_t SIZEOF_FRL_MEM_SAFE_T = sizeof(frl_mem_safe_t);$/;"	v
SIZEOF_FRL_MEM_STAT_T	lib/frl_slab_pool.h	/^const apr_uint32_t SIZEOF_FRL_MEM_STAT_T = sizeof(frl_mem_stat_t);$/;"	v
SIZEOF_FRL_MEM_T	lib/frl_slab_pool.h	/^const apr_uint32_t SIZEOF_FRL_MEM_T = sizeof(frl_mem_t);$/;"	v
SIZEOF_FRL_SLAB_BLOCK_T	lib/frl_slab_pool.h	/^const apr_uint32_t SIZEOF_FRL_SLAB_BLOCK_T = sizeof(frl_slab_block_t);$/;"	v
SIZEOF_FRL_SLAB_POOL_T	lib/frl_slab_pool.h	/^const apr_uint32_t SIZEOF_FRL_SLAB_POOL_T = sizeof(frl_slab_pool_t);$/;"	v
SIZEOF_POINTER	lib/frl_base.h	/^const apr_uint32_t SIZEOF_POINTER = sizeof(void*);$/;"	v
SWIGEXPORT	swig/ndqi_wrap.cxx	110;"	d	file:
SWIGEXPORT	swig/ndqi_wrap.cxx	112;"	d	file:
SWIGEXPORT	swig/ndqi_wrap.cxx	116;"	d	file:
SWIGEXPORT	swig/ndqi_wrap.cxx	118;"	d	file:
SWIGINLINE	swig/ndqi_wrap.cxx	55;"	d	file:
SWIGINLINE	swig/ndqi_wrap.cxx	57;"	d	file:
SWIGINTERN	swig/ndqi_wrap.cxx	92;"	d	file:
SWIGINTERNINLINE	swig/ndqi_wrap.cxx	97;"	d	file:
SWIGPYTHON	swig/ndqi_wrap.cxx	11;"	d	file:
SWIGRUNTIME	swig/ndqi_wrap.cxx	177;"	d	file:
SWIGRUNTIMEINLINE	swig/ndqi_wrap.cxx	181;"	d	file:
SWIGSTDCALL	swig/ndqi_wrap.cxx	126;"	d	file:
SWIGSTDCALL	swig/ndqi_wrap.cxx	128;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	swig/ndqi_wrap.cxx	42;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	swig/ndqi_wrap.cxx	46;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	swig/ndqi_wrap.cxx	48;"	d	file:
SWIGTYPE_p_char	swig/ndqi_wrap.cxx	2504;"	d	file:
SWIGUNUSED	swig/ndqi_wrap.cxx	65;"	d	file:
SWIGUNUSED	swig/ndqi_wrap.cxx	67;"	d	file:
SWIGUNUSED	swig/ndqi_wrap.cxx	70;"	d	file:
SWIGUNUSED	swig/ndqi_wrap.cxx	72;"	d	file:
SWIGUNUSEDPARM	swig/ndqi_wrap.cxx	/^  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {$/;"	f	signature:(v)
SWIGUNUSEDPARM	swig/ndqi_wrap.cxx	/^SWIGINTERN PyObject *_wrap_nqmetanew(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {$/;"	p	file:	signature:(self)
SWIGUNUSEDPARM	swig/ndqi_wrap.cxx	84;"	d	file:
SWIGUNUSEDPARM	swig/ndqi_wrap.cxx	86;"	d	file:
SWIGVERSION	swig/ndqi_wrap.cxx	2525;"	d	file:
SWIG_AcquirePtr	swig/ndqi_wrap.cxx	1017;"	d	file:
SWIG_AddCast	swig/ndqi_wrap.cxx	/^SWIGINTERNINLINE int SWIG_AddCast(int r) { $/;"	f	signature:(int r)
SWIG_AddCast	swig/ndqi_wrap.cxx	319;"	d	file:
SWIG_AddNewMask	swig/ndqi_wrap.cxx	294;"	d	file:
SWIG_AddTmpMask	swig/ndqi_wrap.cxx	297;"	d	file:
SWIG_ArgError	swig/ndqi_wrap.cxx	280;"	d	file:
SWIG_AsCharPtrAndSize	swig/ndqi_wrap.cxx	/^SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)$/;"	f	signature:(PyObject *obj, char** cptr, size_t* psize, int *alloc)
SWIG_AttributeError	swig/ndqi_wrap.cxx	728;"	d	file:
SWIG_BADOBJ	swig/ndqi_wrap.cxx	289;"	d	file:
SWIG_BUFFER_SIZE	swig/ndqi_wrap.cxx	186;"	d	file:
SWIG_CASTRANKLIMIT	swig/ndqi_wrap.cxx	283;"	d	file:
SWIG_CASTRANKMASK	swig/ndqi_wrap.cxx	310;"	d	file:
SWIG_CAST_NEW_MEMORY	swig/ndqi_wrap.cxx	191;"	d	file:
SWIG_CastRank	swig/ndqi_wrap.cxx	311;"	d	file:
SWIG_CheckImplicit	swig/ndqi_wrap.cxx	1016;"	d	file:
SWIG_CheckState	swig/ndqi_wrap.cxx	/^SWIGINTERNINLINE int SWIG_CheckState(int r) { $/;"	f	signature:(int r)
SWIG_CheckState	swig/ndqi_wrap.cxx	320;"	d	file:
SWIG_ConvertFunctionPtr	swig/ndqi_wrap.cxx	1029;"	d	file:
SWIG_ConvertInstance	swig/ndqi_wrap.cxx	1025;"	d	file:
SWIG_ConvertMember	swig/ndqi_wrap.cxx	1033;"	d	file:
SWIG_ConvertPacked	swig/ndqi_wrap.cxx	1021;"	d	file:
SWIG_ConvertPtr	swig/ndqi_wrap.cxx	1013;"	d	file:
SWIG_ConvertPtrAndOwn	swig/ndqi_wrap.cxx	1014;"	d	file:
SWIG_DelNewMask	swig/ndqi_wrap.cxx	295;"	d	file:
SWIG_DelTmpMask	swig/ndqi_wrap.cxx	298;"	d	file:
SWIG_DivisionByZero	swig/ndqi_wrap.cxx	723;"	d	file:
SWIG_ERROR	swig/ndqi_wrap.cxx	278;"	d	file:
SWIG_EXPAND_AND_QUOTE_STRING	swig/ndqi_wrap.cxx	161;"	d	file:
SWIG_Error	swig/ndqi_wrap.cxx	1046;"	d	file:
SWIG_ErrorType	swig/ndqi_wrap.cxx	1045;"	d	file:
SWIG_FILE_WITH_INIT	swig/ndqi_wrap.cxx	2598;"	d	file:
SWIG_GetModule	swig/ndqi_wrap.cxx	1039;"	d	file:
SWIG_IOError	swig/ndqi_wrap.cxx	719;"	d	file:
SWIG_IndexError	swig/ndqi_wrap.cxx	721;"	d	file:
SWIG_InitializeModule	swig/ndqi_wrap.cxx	/^SWIG_InitializeModule(void *clientdata) {$/;"	f	signature:(void *clientdata)
SWIG_InstallConstants	swig/ndqi_wrap.cxx	2995;"	d	file:
SWIG_IsNewObj	swig/ndqi_wrap.cxx	296;"	d	file:
SWIG_IsOK	swig/ndqi_wrap.cxx	279;"	d	file:
SWIG_IsTmpObj	swig/ndqi_wrap.cxx	299;"	d	file:
SWIG_MAXCASTRANK	swig/ndqi_wrap.cxx	308;"	d	file:
SWIG_MangledTypeQuery	swig/ndqi_wrap.cxx	2508;"	d	file:
SWIG_MangledTypeQueryModule	swig/ndqi_wrap.cxx	/^SWIG_MangledTypeQueryModule(swig_module_info *start, $/;"	f	signature:(swig_module_info *start, swig_module_info *end, const char *name)
SWIG_MemoryError	swig/ndqi_wrap.cxx	729;"	d	file:
SWIG_MustGetPtr	swig/ndqi_wrap.cxx	2387;"	d	file:
SWIG_NEWOBJ	swig/ndqi_wrap.cxx	291;"	d	file:
SWIG_NEWOBJMASK	swig/ndqi_wrap.cxx	285;"	d	file:
SWIG_NewClientData	swig/ndqi_wrap.cxx	1041;"	d	file:
SWIG_NewFunctionPtrObj	swig/ndqi_wrap.cxx	1030;"	d	file:
SWIG_NewInstanceObj	swig/ndqi_wrap.cxx	1026;"	d	file:
SWIG_NewMemberObj	swig/ndqi_wrap.cxx	1034;"	d	file:
SWIG_NewPackedObj	swig/ndqi_wrap.cxx	1022;"	d	file:
SWIG_NewPointerObj	swig/ndqi_wrap.cxx	1015;"	d	file:
SWIG_NullReferenceError	swig/ndqi_wrap.cxx	730;"	d	file:
SWIG_OK	swig/ndqi_wrap.cxx	277;"	d	file:
SWIG_OLDOBJ	swig/ndqi_wrap.cxx	290;"	d	file:
SWIG_OverflowError	swig/ndqi_wrap.cxx	724;"	d	file:
SWIG_POINTER_DISOWN	swig/ndqi_wrap.cxx	190;"	d	file:
SWIG_POINTER_EXCEPTION	swig/ndqi_wrap.cxx	2385;"	d	file:
SWIG_POINTER_IMPLICIT_CONV	swig/ndqi_wrap.cxx	1189;"	d	file:
SWIG_POINTER_NEW	swig/ndqi_wrap.cxx	1187;"	d	file:
SWIG_POINTER_NOSHADOW	swig/ndqi_wrap.cxx	1186;"	d	file:
SWIG_POINTER_OWN	swig/ndqi_wrap.cxx	194;"	d	file:
SWIG_PYBUFFER_SIZE	swig/ndqi_wrap.cxx	748;"	d	file:
SWIG_PYTHON_BUILD_NONE	swig/ndqi_wrap.cxx	1202;"	d	file:
SWIG_PYTHON_DIRECTOR_NO_VTABLE	swig/ndqi_wrap.cxx	12;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	swig/ndqi_wrap.cxx	906;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	swig/ndqi_wrap.cxx	937;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	swig/ndqi_wrap.cxx	953;"	d	file:
SWIG_PYTHON_THREADS	swig/ndqi_wrap.cxx	895;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	swig/ndqi_wrap.cxx	927;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	swig/ndqi_wrap.cxx	932;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	swig/ndqi_wrap.cxx	946;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	swig/ndqi_wrap.cxx	956;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	swig/ndqi_wrap.cxx	925;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	swig/ndqi_wrap.cxx	930;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	swig/ndqi_wrap.cxx	940;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	swig/ndqi_wrap.cxx	954;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	swig/ndqi_wrap.cxx	928;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	swig/ndqi_wrap.cxx	933;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	swig/ndqi_wrap.cxx	949;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	swig/ndqi_wrap.cxx	957;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	swig/ndqi_wrap.cxx	926;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	swig/ndqi_wrap.cxx	931;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	swig/ndqi_wrap.cxx	943;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	swig/ndqi_wrap.cxx	955;"	d	file:
SWIG_PYTHON_USE_GIL	swig/ndqi_wrap.cxx	901;"	d	file:
SWIG_PY_BINARY	swig/ndqi_wrap.cxx	977;"	d	file:
SWIG_PY_POINTER	swig/ndqi_wrap.cxx	976;"	d	file:
SWIG_PackData	swig/ndqi_wrap.cxx	/^SWIG_PackData(char *c, void *ptr, size_t sz) {$/;"	f	signature:(char *c, void *ptr, size_t sz)
SWIG_PackDataName	swig/ndqi_wrap.cxx	/^SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {$/;"	f	signature:(char *buff, void *ptr, size_t sz, const char *name, size_t bsz)
SWIG_PackVoidPtr	swig/ndqi_wrap.cxx	/^SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {$/;"	f	signature:(char *buff, void *ptr, const char *name, size_t bsz)
SWIG_PropagateClientData	swig/ndqi_wrap.cxx	/^SWIG_PropagateClientData(void) {$/;"	f	signature:(void)
SWIG_Py_None	swig/ndqi_wrap.cxx	/^SWIG_Py_None(void)$/;"	f	signature:(void)
SWIG_Py_Void	swig/ndqi_wrap.cxx	/^SWIG_Py_Void(void)$/;"	f	signature:(void)
SWIG_Python_AcquirePtr	swig/ndqi_wrap.cxx	/^SWIG_Python_AcquirePtr(PyObject *obj, int own) {$/;"	f	signature:(PyObject *obj, int own)
SWIG_Python_AddErrMesg	swig/ndqi_wrap.cxx	/^SWIG_Python_AddErrMesg(const char* mesg, int infront)$/;"	f	signature:(const char* mesg, int infront)
SWIG_Python_AddErrorMsg	swig/ndqi_wrap.cxx	/^SWIG_Python_AddErrorMsg(const char* mesg)$/;"	f	signature:(const char* mesg)
SWIG_Python_AppendOutput	swig/ndqi_wrap.cxx	/^SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {$/;"	f	signature:(PyObject* result, PyObject* obj)
SWIG_Python_ArgFail	swig/ndqi_wrap.cxx	/^SWIG_Python_ArgFail(int argnum)$/;"	f	signature:(int argnum)
SWIG_Python_CallFunctor	swig/ndqi_wrap.cxx	1166;"	d	file:
SWIG_Python_CallFunctor	swig/ndqi_wrap.cxx	1168;"	d	file:
SWIG_Python_CheckImplicit	swig/ndqi_wrap.cxx	/^SWIG_Python_CheckImplicit(swig_type_info *ty)$/;"	f	signature:(swig_type_info *ty)
SWIG_Python_ConvertFunctionPtr	swig/ndqi_wrap.cxx	/^SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {$/;"	f	signature:(PyObject *obj, void **ptr, swig_type_info *ty)
SWIG_Python_ConvertPacked	swig/ndqi_wrap.cxx	/^SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {$/;"	f	signature:(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty)
SWIG_Python_ConvertPtr	swig/ndqi_wrap.cxx	1012;"	d	file:
SWIG_Python_ConvertPtrAndOwn	swig/ndqi_wrap.cxx	/^SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {$/;"	f	signature:(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own)
SWIG_Python_DestroyModule	swig/ndqi_wrap.cxx	/^SWIG_Python_DestroyModule(void *vptr)$/;"	f	signature:(void *vptr)
SWIG_Python_ErrorType	swig/ndqi_wrap.cxx	/^SWIG_Python_ErrorType(int code) {$/;"	f	signature:(int code)
SWIG_Python_ExceptionType	swig/ndqi_wrap.cxx	/^SWIG_Python_ExceptionType(swig_type_info *desc) {$/;"	f	signature:(swig_type_info *desc)
SWIG_Python_FixMethods	swig/ndqi_wrap.cxx	/^  SWIG_Python_FixMethods(PyMethodDef *methods,$/;"	f	signature:(PyMethodDef *methods, swig_const_info *const_table, swig_type_info **types, swig_type_info **types_initial)
SWIG_Python_GetModule	swig/ndqi_wrap.cxx	/^SWIG_Python_GetModule(void) {$/;"	f	signature:(void)
SWIG_Python_GetSwigThis	swig/ndqi_wrap.cxx	/^SWIG_Python_GetSwigThis(PyObject *pyobj) $/;"	f	signature:(PyObject *pyobj)
SWIG_Python_InitShadowInstance	swig/ndqi_wrap.cxx	/^SWIG_Python_InitShadowInstance(PyObject *args) {$/;"	f	signature:(PyObject *args)
SWIG_Python_InstallConstants	swig/ndqi_wrap.cxx	/^  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {$/;"	f	signature:(PyObject *d, swig_const_info constants[])
SWIG_Python_MustGetPtr	swig/ndqi_wrap.cxx	/^SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {$/;"	f	signature:(PyObject *obj, swig_type_info *ty, int argnum, int flags)
SWIG_Python_NewPackedObj	swig/ndqi_wrap.cxx	/^SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {$/;"	f	signature:(void *ptr, size_t sz, swig_type_info *type)
SWIG_Python_NewPointerObj	swig/ndqi_wrap.cxx	/^SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {$/;"	f	signature:(void *ptr, swig_type_info *type, int flags)
SWIG_Python_NewShadowInstance	swig/ndqi_wrap.cxx	/^SWIG_Python_NewShadowInstance(PySwigClientData *data, PyObject *swig_this)$/;"	f	signature:(PySwigClientData *data, PyObject *swig_this)
SWIG_Python_Raise	swig/ndqi_wrap.cxx	1069;"	d	file:
SWIG_Python_SetConstant	swig/ndqi_wrap.cxx	/^SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   $/;"	f	signature:(PyObject *d, const char *name, PyObject *obj)
SWIG_Python_SetErrorMsg	swig/ndqi_wrap.cxx	/^SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {$/;"	f	signature:(PyObject *errtype, const char *msg)
SWIG_Python_SetErrorObj	swig/ndqi_wrap.cxx	/^SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {$/;"	f	signature:(PyObject *errtype, PyObject *obj)
SWIG_Python_SetModule	swig/ndqi_wrap.cxx	/^SWIG_Python_SetModule(swig_module_info *swig_module) {$/;"	f	signature:(swig_module_info *swig_module)
SWIG_Python_SetSwigThis	swig/ndqi_wrap.cxx	/^SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)$/;"	f	signature:(PyObject *inst, PyObject *swig_this)
SWIG_Python_Thread_Allow	swig/ndqi_wrap.cxx	/^         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}$/;"	f	class:SWIG_Python_Thread_Allow	access:public	signature:()
SWIG_Python_Thread_Allow	swig/ndqi_wrap.cxx	/^       class SWIG_Python_Thread_Allow {$/;"	c	file:
SWIG_Python_Thread_Allow::SWIG_Python_Thread_Allow	swig/ndqi_wrap.cxx	/^         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}$/;"	f	class:SWIG_Python_Thread_Allow	access:public	signature:()
SWIG_Python_Thread_Allow::end	swig/ndqi_wrap.cxx	/^         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}$/;"	f	class:SWIG_Python_Thread_Allow	access:public	signature:()
SWIG_Python_Thread_Allow::save	swig/ndqi_wrap.cxx	/^         PyThreadState *save;$/;"	m	class:SWIG_Python_Thread_Allow	file:	access:private
SWIG_Python_Thread_Allow::status	swig/ndqi_wrap.cxx	/^         bool status;$/;"	m	class:SWIG_Python_Thread_Allow	file:	access:private
SWIG_Python_Thread_Allow::~SWIG_Python_Thread_Allow	swig/ndqi_wrap.cxx	/^         ~SWIG_Python_Thread_Allow() { end(); }$/;"	f	class:SWIG_Python_Thread_Allow	access:public	signature:()
SWIG_Python_Thread_Block	swig/ndqi_wrap.cxx	/^         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}$/;"	f	class:SWIG_Python_Thread_Block	access:public	signature:()
SWIG_Python_Thread_Block	swig/ndqi_wrap.cxx	/^       class SWIG_Python_Thread_Block {$/;"	c	file:
SWIG_Python_Thread_Block::SWIG_Python_Thread_Block	swig/ndqi_wrap.cxx	/^         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}$/;"	f	class:SWIG_Python_Thread_Block	access:public	signature:()
SWIG_Python_Thread_Block::end	swig/ndqi_wrap.cxx	/^         void end() { if (status) { PyGILState_Release(state); status = false;} }$/;"	f	class:SWIG_Python_Thread_Block	access:public	signature:()
SWIG_Python_Thread_Block::state	swig/ndqi_wrap.cxx	/^         PyGILState_STATE state;$/;"	m	class:SWIG_Python_Thread_Block	file:	access:private
SWIG_Python_Thread_Block::status	swig/ndqi_wrap.cxx	/^         bool status;$/;"	m	class:SWIG_Python_Thread_Block	file:	access:private
SWIG_Python_Thread_Block::~SWIG_Python_Thread_Block	swig/ndqi_wrap.cxx	/^         ~SWIG_Python_Thread_Block() { end(); }$/;"	f	class:SWIG_Python_Thread_Block	access:public	signature:()
SWIG_Python_TypeCache	swig/ndqi_wrap.cxx	/^SWIG_Python_TypeCache(void) {$/;"	f	signature:(void)
SWIG_Python_TypeError	swig/ndqi_wrap.cxx	/^SWIG_Python_TypeError(const char *type, PyObject *obj)$/;"	f	signature:(const char *type, PyObject *obj)
SWIG_Python_TypeQuery	swig/ndqi_wrap.cxx	/^SWIG_Python_TypeQuery(const char *type)$/;"	f	signature:(const char *type)
SWIG_Python_UnpackTuple	swig/ndqi_wrap.cxx	/^SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)$/;"	f	signature:(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
SWIG_Python_addvarlink	swig/ndqi_wrap.cxx	/^  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {$/;"	f	signature:(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p))
SWIG_Python_newvarlink	swig/ndqi_wrap.cxx	/^  SWIG_Python_newvarlink(void) {$/;"	f	signature:(void)
SWIG_QUOTE_STRING	swig/ndqi_wrap.cxx	160;"	d	file:
SWIG_RUNTIME_VERSION	swig/ndqi_wrap.cxx	156;"	d	file:
SWIG_ReturnGlobalTypeList	swig/ndqi_wrap.cxx	/^void *SWIG_ReturnGlobalTypeList(void *);$/;"	p	file:	signature:(void *)
SWIG_RuntimeError	swig/ndqi_wrap.cxx	720;"	d	file:
SWIG_STATIC_POINTER	swig/ndqi_wrap.cxx	1176;"	d	file:
SWIG_STATIC_POINTER	swig/ndqi_wrap.cxx	1178;"	d	file:
SWIG_SetErrorMsg	swig/ndqi_wrap.cxx	1044;"	d	file:
SWIG_SetErrorObj	swig/ndqi_wrap.cxx	1043;"	d	file:
SWIG_SetModule	swig/ndqi_wrap.cxx	1040;"	d	file:
SWIG_SyntaxError	swig/ndqi_wrap.cxx	725;"	d	file:
SWIG_SystemError	swig/ndqi_wrap.cxx	727;"	d	file:
SWIG_TMPOBJ	swig/ndqi_wrap.cxx	292;"	d	file:
SWIG_TMPOBJMASK	swig/ndqi_wrap.cxx	287;"	d	file:
SWIG_TYPE_TABLE_NAME	swig/ndqi_wrap.cxx	162;"	d	file:
SWIG_TYPE_TABLE_NAME	swig/ndqi_wrap.cxx	164;"	d	file:
SWIG_This	swig/ndqi_wrap.cxx	/^SWIG_This(void)$/;"	f	signature:(void)
SWIG_TypeCast	swig/ndqi_wrap.cxx	/^SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {$/;"	f	signature:(swig_cast_info *ty, void *ptr, int *newmemory)
SWIG_TypeCheck	swig/ndqi_wrap.cxx	/^SWIG_TypeCheck(const char *c, swig_type_info *ty) {$/;"	f	signature:(const char *c, swig_type_info *ty)
SWIG_TypeCheckStruct	swig/ndqi_wrap.cxx	/^SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {$/;"	f	signature:(swig_type_info *from, swig_type_info *into)
SWIG_TypeCheck_Template	swig/ndqi_wrap.cxx	423;"	d	file:
SWIG_TypeClientData	swig/ndqi_wrap.cxx	/^SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {$/;"	f	signature:(swig_type_info *ti, void *clientdata)
SWIG_TypeCompare	swig/ndqi_wrap.cxx	/^SWIG_TypeCompare(const char *nb, const char *tb) {$/;"	f	signature:(const char *nb, const char *tb)
SWIG_TypeDynamicCast	swig/ndqi_wrap.cxx	/^SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {$/;"	f	signature:(swig_type_info *ty, void **ptr)
SWIG_TypeEquiv	swig/ndqi_wrap.cxx	/^SWIG_TypeEquiv(const char *nb, const char *tb) {$/;"	f	signature:(const char *nb, const char *tb)
SWIG_TypeError	swig/ndqi_wrap.cxx	722;"	d	file:
SWIG_TypeName	swig/ndqi_wrap.cxx	/^SWIG_TypeName(const swig_type_info *ty) {$/;"	f	signature:(const swig_type_info *ty)
SWIG_TypeNameComp	swig/ndqi_wrap.cxx	/^SWIG_TypeNameComp(const char *f1, const char *l1,$/;"	f	signature:(const char *f1, const char *l1, const char *f2, const char *l2)
SWIG_TypeNewClientData	swig/ndqi_wrap.cxx	/^SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {$/;"	f	signature:(swig_type_info *ti, void *clientdata)
SWIG_TypePrettyName	swig/ndqi_wrap.cxx	/^SWIG_TypePrettyName(const swig_type_info *type) {$/;"	f	signature:(const swig_type_info *type)
SWIG_TypeQuery	swig/ndqi_wrap.cxx	2507;"	d	file:
SWIG_TypeQueryModule	swig/ndqi_wrap.cxx	/^SWIG_TypeQueryModule(swig_module_info *start, $/;"	f	signature:(swig_module_info *start, swig_module_info *end, const char *name)
SWIG_TypeRank	swig/ndqi_wrap.cxx	305;"	d	file:
SWIG_UnknownError	swig/ndqi_wrap.cxx	718;"	d	file:
SWIG_UnpackData	swig/ndqi_wrap.cxx	/^SWIG_UnpackData(const char *c, void *ptr, size_t sz) {$/;"	f	signature:(const char *c, void *ptr, size_t sz)
SWIG_UnpackDataName	swig/ndqi_wrap.cxx	/^SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {$/;"	f	signature:(const char *c, void *ptr, size_t sz, const char *name)
SWIG_UnpackVoidPtr	swig/ndqi_wrap.cxx	/^SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {$/;"	f	signature:(const char *c, void **ptr, const char *name)
SWIG_VERSION	swig/ndqi_wrap.cxx	2526;"	d	file:
SWIG_ValueError	swig/ndqi_wrap.cxx	726;"	d	file:
SWIG_addvarlink	swig/ndqi_wrap.cxx	2994;"	d	file:
SWIG_arg_fail	swig/ndqi_wrap.cxx	2386;"	d	file:
SWIG_as_voidptr	swig/ndqi_wrap.cxx	2529;"	d	file:
SWIG_as_voidptrptr	swig/ndqi_wrap.cxx	2530;"	d	file:
SWIG_contract_assert	swig/ndqi_wrap.cxx	2498;"	d	file:
SWIG_exception_fail	swig/ndqi_wrap.cxx	2496;"	d	file:
SWIG_fail	swig/ndqi_wrap.cxx	1047;"	d	file:
SWIG_globals	swig/ndqi_wrap.cxx	/^  SWIG_globals(void) {$/;"	f	signature:(void)
SWIG_init	swig/ndqi_wrap.cxx	/^SWIGEXPORT void SWIG_init(void) {$/;"	f	signature:(void)
SWIG_init	swig/ndqi_wrap.cxx	2521;"	d	file:
SWIG_name	swig/ndqi_wrap.cxx	2523;"	d	file:
SWIG_newvarlink	swig/ndqi_wrap.cxx	2993;"	d	file:
SWIG_pchar_descriptor	swig/ndqi_wrap.cxx	/^SWIG_pchar_descriptor(void)$/;"	f	signature:(void)
ScalarExp	parser/gram.y	/^ScalarExp:	ICONST { $$ = $1; } |$/;"	l
ScanDatabase	config/databases.h	/^} ScanDatabase;$/;"	t	typeref:struct:__anon12
ScanDatabaseLookup	config/databases.c	/^const ScanDatabase* ScanDatabaseLookup(const char *text)$/;"	f	signature:(const char *text)
ScanDatabaseLookup	config/databases.h	/^extern const ScanDatabase* ScanDatabaseLookup(const char* text);$/;"	p	signature:(const char* text)
ScanDatabases	config/databases.c	/^ScanDatabase ScanDatabases[] = {$/;"	v
ScanKeyword	parser/keywords.h	/^} ScanKeyword;$/;"	t	typeref:struct:__anon21
ScanKeywordLookup	parser/keywords.c	/^const ScanKeyword* ScanKeywordLookup(const char *text)$/;"	f	signature:(const char *text)
ScanKeywordLookup	parser/keywords.h	/^extern const ScanKeyword* ScanKeywordLookup(const char* text);$/;"	p	signature:(const char* text)
ScanKeywords	parser/keywords.c	/^const ScanKeyword ScanKeywords[] = {$/;"	v
SelectStmt	parser/gram.y	/^SelectStmt:	SELECT ColumnOptListStmt WHERE CondStmt$/;"	l
Stmt	parser/gram.y	/^Stmt:	CommandStmt	{ $$ = $1; } |$/;"	l
SubQueryStmt	parser/gram.y	/^SubQueryStmt: '(' SelectStmt ')' { $$ = $2; }$/;"	l
SwigMethods	swig/ndqi_wrap.cxx	/^static PyMethodDef SwigMethods[] = {$/;"	v	file:
SwigValueInit	swig/ndqi_wrap.cxx	/^template <typename T> T SwigValueInit() {$/;"	f	signature:()
SwigValueWrapper	swig/ndqi_wrap.cxx	/^    SwigValueWrapper() : tt(0) { }$/;"	f	class:SwigValueWrapper	access:public	signature:()
SwigValueWrapper	swig/ndqi_wrap.cxx	/^    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }$/;"	f	class:SwigValueWrapper	access:public	signature:(const SwigValueWrapper<T>& rhs)
SwigValueWrapper	swig/ndqi_wrap.cxx	/^    SwigValueWrapper(const T& t) : tt(new T(t)) { }$/;"	f	class:SwigValueWrapper	access:public	signature:(const T& t)
SwigValueWrapper	swig/ndqi_wrap.cxx	/^template<typename T> class SwigValueWrapper {$/;"	c	file:
SwigValueWrapper::SwigValueWrapper	swig/ndqi_wrap.cxx	/^    SwigValueWrapper() : tt(0) { }$/;"	f	class:SwigValueWrapper	access:public	signature:()
SwigValueWrapper::SwigValueWrapper	swig/ndqi_wrap.cxx	/^    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }$/;"	f	class:SwigValueWrapper	access:public	signature:(const SwigValueWrapper<T>& rhs)
SwigValueWrapper::SwigValueWrapper	swig/ndqi_wrap.cxx	/^    SwigValueWrapper(const T& t) : tt(new T(t)) { }$/;"	f	class:SwigValueWrapper	access:public	signature:(const T& t)
SwigValueWrapper::operator &	swig/ndqi_wrap.cxx	/^    T *operator&() { return tt; }$/;"	f	class:SwigValueWrapper	access:public	signature:()
SwigValueWrapper::operator =	swig/ndqi_wrap.cxx	/^    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);$/;"	p	class:SwigValueWrapper	file:	access:private	signature:(const SwigValueWrapper<T>& rhs)
SwigValueWrapper::operator =	swig/ndqi_wrap.cxx	/^    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }$/;"	f	class:SwigValueWrapper	access:public	signature:(const T& t)
SwigValueWrapper::operator T&	swig/ndqi_wrap.cxx	/^    operator T&() const { return *tt; }$/;"	f	class:SwigValueWrapper	access:public	signature:() const
SwigValueWrapper::tt	swig/ndqi_wrap.cxx	/^    T *tt;$/;"	m	class:SwigValueWrapper	file:	access:private
SwigValueWrapper::~SwigValueWrapper	swig/ndqi_wrap.cxx	/^    ~SwigValueWrapper() { delete tt; } $/;"	f	class:SwigValueWrapper	access:public	signature:()
TYPE_FUNC_NAME_KEYWORD	parser/keywords.h	6;"	d
UNRESERVED_KEYWORD	parser/keywords.h	4;"	d
YACC	net/makefile	/^YACC = byacc -dv$/;"	m
YACC	parser/makefile	/^YACC = byacc -dv$/;"	m
YACC	tool/makefile	/^YACC = byacc -dv$/;"	m
_CRT_SECURE_NO_DEPRECATE	swig/ndqi_wrap.cxx	134;"	d	file:
_GUARD_DATABASES_	config/databases.h	2;"	d
_GUARD_KEYWORDS_	parser/keywords.h	2;"	d
_GUARD_NQAUTOTAG_	nqauto.h	7;"	d
_GUARD_NQBWDB_	nqbwdb.h	7;"	d
_GUARD_NQCLIENT_	net/nqclient.h	2;"	d
_GUARD_NQDP_	nqdp.h	7;"	d
_GUARD_NQFDB_	nqfdb.h	7;"	d
_GUARD_NQGS_	nqgs.h	7;"	d
_GUARD_NQIR_	nqir.h	7;"	d
_GUARD_NQLH_	nqlh.h	7;"	d
_GUARD_NQMETA_	nqmeta.h	7;"	d
_GUARD_NQPARSER_	parser/nqparser.h	2;"	d
_GUARD_NQPLAN_	net/nqplan.h	2;"	d
_GUARD_NQPREQRY_	nqpreqry.h	7;"	d
_GUARD_NQQRY_	nqqry.h	7;"	d
_GUARD_NQRDB_	nqrdb.h	7;"	d
_GUARD_NQTDB_	nqtdb.h	7;"	d
_GUARD_NQUTIL_	nqutil.h	2;"	d
_GUARD__PARSER_	parser/_parser.h	2;"	d
_PySwigObject_type	swig/ndqi_wrap.cxx	/^SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);$/;"	p	file:	signature:(void)
_PySwigObject_type	swig/ndqi_wrap.cxx	/^_PySwigObject_type(void) {$/;"	f	signature:(void)
_PySwigPacked_type	swig/ndqi_wrap.cxx	/^SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);$/;"	p	file:	signature:(void)
_PySwigPacked_type	swig/ndqi_wrap.cxx	/^_PySwigPacked_type(void) {$/;"	f	signature:(void)
_SCL_SECURE_NO_DEPRECATE	swig/ndqi_wrap.cxx	139;"	d	file:
_SWIG_Py_None	swig/ndqi_wrap.cxx	/^_SWIG_Py_None(void)$/;"	f	signature:(void)
_SWIG_This	swig/ndqi_wrap.cxx	/^_SWIG_This(void)$/;"	f	signature:(void)
__anon10::emax	nqbwdb.h	/^	uint32_t emax;$/;"	m	struct:__anon10	access:public
__anon10::idx	nqbwdb.h	/^	NQBWDBIDX* idx;$/;"	m	struct:__anon10	access:public
__anon10::inum	nqbwdb.h	/^	uint32_t inum;$/;"	m	struct:__anon10	access:public
__anon10::rdb	nqbwdb.h	/^	NQRDB* rdb;$/;"	m	struct:__anon10	access:public
__anon10::rwidxlock	nqbwdb.h	/^	apr_thread_rwlock_t* rwidxlock;$/;"	m	struct:__anon10	access:public
__anon10::rwunidxlock	nqbwdb.h	/^	apr_thread_rwlock_t* rwunidxlock;$/;"	m	struct:__anon10	access:public
__anon10::shallow	nqbwdb.h	/^	bool shallow;$/;"	m	struct:__anon10	access:public
__anon10::unidx	nqbwdb.h	/^	NQBWDBUNIDX* unidx;$/;"	m	struct:__anon10	access:public
__anon10::unum	nqbwdb.h	/^	uint32_t unum;$/;"	m	struct:__anon10	access:public
__anon10::wnum	nqbwdb.h	/^	uint32_t wnum;$/;"	m	struct:__anon10	access:public
__anon12::hpr	config/databases.h	/^	void* hpr;$/;"	m	struct:__anon12	access:public
__anon12::hprloc	config/databases.h	/^    const char* hprloc;$/;"	m	struct:__anon12	access:public
__anon12::mode	config/databases.h	/^	int mode;$/;"	m	struct:__anon12	access:public
__anon12::name	config/databases.h	/^	const char* name;$/;"	m	struct:__anon12	access:public
__anon12::ref	config/databases.h	/^    void* ref;$/;"	m	struct:__anon12	access:public
__anon12::refloc	config/databases.h	/^	const char* refloc;$/;"	m	struct:__anon12	access:public
__anon12::type	config/databases.h	/^	int type;$/;"	m	struct:__anon12	access:public
__anon13::result	parser/nqparser.h	/^	void* result;$/;"	m	struct:__anon13	access:public
__anon13::type	parser/nqparser.h	/^	int type;$/;"	m	struct:__anon13	access:public
__anon14::__anon15::qry	parser/nqparser.h	/^		struct NQPREQRY* qry;$/;"	m	union:__anon14::__anon15	typeref:struct:__anon14::__anon15::NQPREQRY	access:public
__anon14::__anon15::str	parser/nqparser.h	/^		char* str;$/;"	m	union:__anon14::__anon15	access:public
__anon14::col	parser/nqparser.h	/^	char* col;$/;"	m	struct:__anon14	access:public
__anon14::db	parser/nqparser.h	/^	const char* db;$/;"	m	struct:__anon14	access:public
__anon14::dbtype	parser/nqparser.h	/^	int dbtype;$/;"	m	struct:__anon14	access:public
__anon14::sbj	parser/nqparser.h	/^	} sbj;$/;"	m	struct:__anon14	typeref:union:__anon14::__anon15	access:public
__anon14::type	parser/nqparser.h	/^	int type;$/;"	m	struct:__anon14	access:public
__anon14::val	parser/nqparser.h	/^	char* val;$/;"	m	struct:__anon14	access:public
__anon16::fl	parser/nqparser.h	/^    float fl;$/;"	m	union:__anon16	access:public
__anon16::i	parser/nqparser.h	/^    int i;$/;"	m	union:__anon16	access:public
__anon16::ptr	parser/nqparser.h	/^    void* ptr;$/;"	m	union:__anon16	access:public
__anon16::str	parser/nqparser.h	/^    const char* str;$/;"	m	union:__anon16	access:public
__anon17::cmd	parser/nqparser.h	/^    int cmd;$/;"	m	struct:__anon17	access:public
__anon17::params	parser/nqparser.h	/^    NQCOMMANDPARAM params[3];$/;"	m	struct:__anon17	access:public
__anon21::category	parser/keywords.h	/^	short int category;$/;"	m	struct:__anon21	access:public
__anon21::name	parser/keywords.h	/^	const char* name;$/;"	m	struct:__anon21	access:public
__anon21::value	parser/keywords.h	/^	short int value;$/;"	m	struct:__anon21	access:public
__anon22::kstr	nqfdb.c	/^	char* kstr;$/;"	m	struct:__anon22	file:	access:public
__anon22::likeness	nqfdb.c	/^	float likeness;$/;"	m	struct:__anon22	file:	access:public
__anon23::data	nqfdb.c	/^	NQFPAIR data[0];$/;"	m	struct:__anon23	file:	access:public
__anon23::fm	nqfdb.c	/^	CvMat* fm;$/;"	m	struct:__anon23	file:	access:public
__anon23::siz	nqfdb.c	/^	uint32_t siz;$/;"	m	struct:__anon23	file:	access:public
__anon24::f	nqfdb.h	/^	CvMat* f;$/;"	m	struct:__anon24	access:public
__anon25::idx	nqfdb.h	/^	NQFDBIDX* idx;$/;"	m	struct:__anon25	access:public
__anon25::inum	nqfdb.h	/^	uint32_t inum;$/;"	m	struct:__anon25	access:public
__anon25::rdb	nqfdb.h	/^	NQRDB* rdb;$/;"	m	struct:__anon25	access:public
__anon25::rwidxlock	nqfdb.h	/^	apr_thread_rwlock_t* rwidxlock;$/;"	m	struct:__anon25	access:public
__anon25::rwunidxlock	nqfdb.h	/^	apr_thread_rwlock_t* rwunidxlock;$/;"	m	struct:__anon25	access:public
__anon25::shallow	nqfdb.h	/^	bool shallow;$/;"	m	struct:__anon25	access:public
__anon25::unidx	nqfdb.h	/^	NQFDBUNIDX* unidx;$/;"	m	struct:__anon25	access:public
__anon25::unum	nqfdb.h	/^	uint32_t unum;$/;"	m	struct:__anon25	access:public
__anon26::head	nqrdb.h	/^	NQRDBDATUM* head;$/;"	m	struct:__anon26	access:public
__anon26::rnum	nqrdb.h	/^	uint64_t rnum;$/;"	m	struct:__anon26	access:public
__anon26::rwlock	nqrdb.h	/^	apr_thread_rwlock_t* rwlock;$/;"	m	struct:__anon26	access:public
__anon27::kstr	nqqry.c	/^	char* kstr;$/;"	m	struct:__anon27	file:	access:public
__anon27::likeness	nqqry.c	/^	float likeness;$/;"	m	struct:__anon27	file:	access:public
__anon28::data	nqqry.c	/^	NQQRYPAIR data[0];$/;"	m	struct:__anon28	file:	access:public
__anon28::siz	nqqry.c	/^	uint32_t siz;$/;"	m	struct:__anon28	file:	access:public
__anon2::cnum	net/nqplan.h	/^	int cnum;$/;"	m	struct:__anon2	access:public
__anon2::head	net/nqplan.h	/^	NQPLANITER* head;$/;"	m	struct:__anon2	access:public
__anon2::tail	net/nqplan.h	/^	NQPLANITER* tail;$/;"	m	struct:__anon2	access:public
__anon32::dups	nqtdb.h	/^	TCMAP* dups;$/;"	m	struct:__anon32	access:public
__anon32::idx	nqtdb.h	/^	TCHDB* idx;$/;"	m	struct:__anon32	access:public
__anon32::tokens	nqtdb.h	/^	TCMAP* tokens;$/;"	m	struct:__anon32	access:public
__anon3::delargs	swig/ndqi_wrap.cxx	/^  int delargs;$/;"	m	struct:__anon3	file:	access:public
__anon3::destroy	swig/ndqi_wrap.cxx	/^  PyObject *destroy;$/;"	m	struct:__anon3	file:	access:public
__anon3::implicitconv	swig/ndqi_wrap.cxx	/^  int implicitconv;$/;"	m	struct:__anon3	file:	access:public
__anon3::klass	swig/ndqi_wrap.cxx	/^  PyObject *klass;$/;"	m	struct:__anon3	file:	access:public
__anon3::newargs	swig/ndqi_wrap.cxx	/^  PyObject *newargs;$/;"	m	struct:__anon3	file:	access:public
__anon3::newraw	swig/ndqi_wrap.cxx	/^  PyObject *newraw;$/;"	m	struct:__anon3	file:	access:public
__anon4::next	swig/ndqi_wrap.cxx	/^  PyObject *next;$/;"	m	struct:__anon4	file:	access:public
__anon4::own	swig/ndqi_wrap.cxx	/^  int own;$/;"	m	struct:__anon4	file:	access:public
__anon4::ptr	swig/ndqi_wrap.cxx	/^  void *ptr;$/;"	m	struct:__anon4	file:	access:public
__anon4::ty	swig/ndqi_wrap.cxx	/^  swig_type_info *ty;$/;"	m	struct:__anon4	file:	access:public
__anon5::pack	swig/ndqi_wrap.cxx	/^  void *pack;$/;"	m	struct:__anon5	file:	access:public
__anon5::size	swig/ndqi_wrap.cxx	/^  size_t size;$/;"	m	struct:__anon5	file:	access:public
__anon5::ty	swig/ndqi_wrap.cxx	/^  swig_type_info *ty;$/;"	m	struct:__anon5	file:	access:public
__anon6::kstr	nqbwdb.c	/^	char* kstr;$/;"	m	struct:__anon6	file:	access:public
__anon6::likeness	nqbwdb.c	/^	float likeness;$/;"	m	struct:__anon6	file:	access:public
__anon7::bwdb	nqbwdb.c	/^	NQBWDB* bwdb;$/;"	m	struct:__anon7	file:	access:public
__anon7::bwm	nqbwdb.c	/^	CvMat* bwm;$/;"	m	struct:__anon7	file:	access:public
__anon7::data	nqbwdb.c	/^	NQBWPAIR data[0];$/;"	m	struct:__anon7	file:	access:public
__anon7::dist	nqbwdb.c	/^	CvMat* dist;$/;"	m	struct:__anon7	file:	access:public
__anon7::emax	nqbwdb.c	/^	uint32_t emax;$/;"	m	struct:__anon7	file:	access:public
__anon7::idx	nqbwdb.c	/^	CvMat* idx;$/;"	m	struct:__anon7	file:	access:public
__anon7::match	nqbwdb.c	/^	double match;$/;"	m	struct:__anon7	file:	access:public
__anon7::siz	nqbwdb.c	/^	uint32_t siz;$/;"	m	struct:__anon7	file:	access:public
__anon8::desc	nqbwdb.h	/^	CvMat desc;$/;"	m	struct:__anon8	access:public
__anon8::idf	nqbwdb.h	/^	float idf;$/;"	m	struct:__anon8	access:public
__anon8::kstr	nqbwdb.h	/^	char** kstr;$/;"	m	struct:__anon8	access:public
__anon8::rnum	nqbwdb.h	/^	uint32_t rnum;$/;"	m	struct:__anon8	access:public
__anon9::bw	nqbwdb.h	/^	CvMat* bw;$/;"	m	struct:__anon9	access:public
__anon9::bwft	nqbwdb.h	/^	CvFeatureTree* bwft;$/;"	m	struct:__anon9	access:public
_dispatch_mat_ptr	nqutil.c	4;"	d	file:
_obj	swig/ndqi_wrap.cxx	/^    PyObject *_obj;$/;"	m	class:swig::PyObject_ptr	file:	access:protected
_object	swig/ndqi.py	/^    class _object : pass$/;"	c	function:_swig_repr	inherits:
_swig_getattr	swig/ndqi.py	/^def _swig_getattr(self,class_type,name):$/;"	f	access:public
_swig_repr	swig/ndqi.py	/^def _swig_repr(self):$/;"	f	access:public
_swig_setattr	swig/ndqi.py	/^def _swig_setattr(self,class_type,name,value):$/;"	f	access:public
_swig_setattr_nondynamic	swig/ndqi.py	/^def _swig_setattr_nondynamic(self,class_type,name,value,static=1):$/;"	f	access:public
_swigc__p_char	swig/ndqi_wrap.cxx	/^static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigt__p_char	swig/ndqi_wrap.cxx	/^static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};$/;"	v	file:
_type	swig/ndqi.py	/^    method = class_type.__swig_getmethods__.get(name,None)$/;"	c	function:_swig_getattr	inherits:
_type	swig/ndqi.py	/^    method = class_type.__swig_setmethods__.get(name,None)$/;"	c	function:_swig_setattr_nondynamic	inherits:
_type	swig/ndqi.py	/^    return _swig_setattr_nondynamic(self,class_type,name,value,0)$/;"	c	function:_swig_setattr	inherits:
arena	lib/frl_slab_pool.h	/^	apr_byte_t* arena;$/;"	m	struct:frl_slab_block_t	access:public
b16_pool	nqrdb.c	/^static frl_slab_pool_t* b16_pool = 0;$/;"	v	file:
b2_pool	nqrdb.c	/^static frl_slab_pool_t* b2_pool = 0;$/;"	v	file:
b6_pool	nqrdb.c	/^static frl_slab_pool_t* b6_pool = 0;$/;"	v	file:
base64_decode	lib/frl_util_md5.cpp	/^int frl_md5::base64_decode(const apr_byte_t* x)$/;"	f	class:frl_md5	signature:(const apr_byte_t* x)
base64_decode	lib/frl_util_md5.h	/^		int base64_decode(const apr_byte_t* x);$/;"	p	class:frl_md5	access:public	signature:(const apr_byte_t* x)
base64_encode	lib/frl_util_md5.cpp	/^int frl_md5::base64_encode(apr_byte_t* q)$/;"	f	class:frl_md5	signature:(apr_byte_t* q)
base64_encode	lib/frl_util_md5.h	/^		int base64_encode(apr_byte_t* q);$/;"	p	class:frl_md5	access:public	signature:(apr_byte_t* q)
base64_index	lib/frl_util_md5.cpp	/^inline unsigned long long base64_index(const apr_byte_t& x)$/;"	f	signature:(const apr_byte_t& x)
base64table	lib/frl_util_md5.cpp	/^const apr_byte_t base64table[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";$/;"	v
block	lib/frl_slab_pool.h	/^	frl_slab_block_t* block;$/;"	m	struct:frl_mem_t	access:public
block	lib/frl_slab_pool.h	/^	frl_slab_block_t* block;$/;"	m	struct:frl_slab_pool_t	access:public
block_size	lib/frl_slab_pool.h	/^	apr_uint32_t block_size;$/;"	m	struct:frl_mem_stat_t	access:public
bw	nqbwdb.h	/^	CvMat* bw;$/;"	m	struct:__anon9	access:public
bwdb	nqbwdb.c	/^	NQBWDB* bwdb;$/;"	m	struct:__anon7	file:	access:public
bwft	nqbwdb.h	/^	CvFeatureTree* bwft;$/;"	m	struct:__anon9	access:public
bwm	nqbwdb.c	/^	CvMat* bwm;$/;"	m	struct:__anon7	file:	access:public
capacity	lib/frl_slab_pool.h	/^	apr_uint32_t capacity;$/;"	m	struct:frl_mem_stat_t	access:public
capacity	lib/frl_slab_pool.h	/^	apr_uint32_t capacity;$/;"	m	struct:frl_slab_block_t	access:public
cast	swig/ndqi_wrap.cxx	/^  struct swig_cast_info  *cast;			\/* linked list of types that can cast into this type *\/$/;"	m	struct:swig_type_info	typeref:struct:swig_type_info::swig_cast_info	file:	access:public
cast_initial	swig/ndqi_wrap.cxx	/^  swig_cast_info         **cast_initial;	\/* Array of initially generated casting structures *\/$/;"	m	struct:swig_module_info	file:	access:public
category	parser/keywords.h	/^	short int category;$/;"	m	struct:__anon21	access:public
cfd	nqpreqry.h	/^	float cfd;$/;"	m	struct:NQPREQRY	access:public
cfd	nqqry.h	/^	float cfd;$/;"	m	struct:NQQRY	access:public
chd	nqrdb.h	/^	NQRDBDATUM** chd;$/;"	m	struct:NQRDBDATUM	access:public
clear	lib/mlapcluster.cpp	/^CvAPCluster::clear()$/;"	f	class:CvAPCluster	signature:()
clear	lib/mlapcluster.h	/^		virtual void clear();$/;"	p	class:CvAPCluster	access:public	signature:()
clientdata	swig/ndqi_wrap.cxx	/^  void                    *clientdata;		\/* Language specific module data *\/$/;"	m	struct:swig_module_info	file:	access:public
clientdata	swig/ndqi_wrap.cxx	/^  void                   *clientdata;		\/* language specific type data *\/$/;"	m	struct:swig_type_info	file:	access:public
cmd	parser/nqparser.h	/^    int cmd;$/;"	m	struct:__anon17	access:public
cnum	net/nqplan.h	/^	int cnum;$/;"	m	struct:__anon2	access:public
cnum	nqpreqry.h	/^	int cnum;$/;"	m	struct:NQPREQRY	access:public
cnum	nqqry.h	/^	int cnum;$/;"	m	struct:NQQRY	access:public
col	nqpreqry.h	/^	char* col;$/;"	m	struct:NQPREQRY	access:public
col	nqqry.h	/^	void* col;$/;"	m	struct:NQQRY	access:public
col	parser/nqparser.h	/^	char* col;$/;"	m	struct:__anon14	access:public
conds	nqpreqry.h	/^	struct NQPREQRY** conds;$/;"	m	struct:NQPREQRY	typeref:struct:NQPREQRY::NQPREQRY	access:public
conds	nqqry.h	/^	struct NQQRY** conds;$/;"	m	struct:NQQRY	typeref:struct:NQQRY::NQQRY	access:public
conv_img	lib/cvgist.h	/^	CvMat* conv_img;$/;"	m	struct:CvGaborFilter	access:public
conv_real	lib/cvgist.h	/^	CvMat* conv_real;$/;"	m	struct:CvGaborFilter	access:public
converter	swig/ndqi_wrap.cxx	/^  swig_converter_func     converter;		\/* function to cast the void pointers *\/$/;"	m	struct:swig_cast_info	file:	access:public
cvCalcGist	lib/cvgist.cpp	/^cvCalcGist( float* gist,$/;"	f	signature:( float* gist, const CvArr* _img, CvGaborFilter* gabors, int gabor_n )
cvCalcGist	lib/cvgist.h	/^void cvCalcGist( float* gist, const CvArr* _img, CvGaborFilter* gabors, int gabor_n );$/;"	p	signature:( float* gist, const CvArr* _img, CvGaborFilter* gabors, int gabor_n )
cvCalcLocalHist	lib/cvlocalhist.cpp	/^cvCalcLocalHist( CvArr* _img,$/;"	f	signature:( CvArr* _img, int* hists, const int bins )
cvCalcLocalHist	lib/cvlocalhist.h	/^void cvCalcLocalHist(CvArr* _img, int* hists, const int bins);$/;"	p	signature:(CvArr* _img, int* hists, const int bins)
cvCompareGist	lib/cvgist.cpp	/^cvCompareGist( float* gist_a,$/;"	f	signature:( float* gist_a, float* gist_b, int length )
cvCompareGist	lib/cvgist.h	/^float cvCompareGist( float* gist_a, float* gist_b, int length );$/;"	p	signature:( float* gist_a, float* gist_b, int length )
cvCompareLocalHist	lib/cvlocalhist.cpp	/^cvCompareLocalHist( int* hist_a,$/;"	f	signature:( int* hist_a, int* hist_b, int length )
cvCompareLocalHist	lib/cvlocalhist.h	/^float cvCompareLocalHist(int* hist_a, int* hist_b, int length);$/;"	p	signature:(int* hist_a, int* hist_b, int length)
cvCreateGaborFilters	lib/cvgist.cpp	/^cvCreateGaborFilters( int orientations,$/;"	f	signature:( int orientations, int scales, int size )
cvCreateGaborFilters	lib/cvgist.h	/^CvGaborFilter* cvCreateGaborFilters( int orientations, int scales, int size );$/;"	p	signature:( int orientations, int scales, int size )
cvReleaseGaborFilters	lib/cvgist.cpp	/^cvReleaseGaborFilters( CvGaborFilter** gabors,$/;"	f	signature:( CvGaborFilter** gabors, int gabor_n )
cvReleaseGaborFilters	lib/cvgist.h	/^void cvReleaseGaborFilters( CvGaborFilter** gabors, int gabor_n );$/;"	p	signature:( CvGaborFilter** gabors, int gabor_n )
cvUUIDCreate	lib/uuid.cpp	/^char* cvUUIDCreate( CvMat* img )$/;"	f	signature:( CvMat* img )
cvUUIDCreate	lib/uuid.h	/^char* cvUUIDCreate( CvMat* img );$/;"	p	signature:( CvMat* img )
data	nqbwdb.c	/^	NQBWPAIR data[0];$/;"	m	struct:__anon7	file:	access:public
data	nqfdb.c	/^	NQFPAIR data[0];$/;"	m	struct:__anon23	file:	access:public
data	nqfdb.h	/^	NQFDBDATUM** data;$/;"	m	struct:NQFDBIDX	access:public
data	nqqry.c	/^	NQQRYPAIR data[0];$/;"	m	struct:__anon28	file:	access:public
datum	nqbwdb.h	/^	NQBWDBDATUM* datum;$/;"	m	struct:NQBWDBUNIDX	access:public
datum	nqfdb.h	/^	NQFDBDATUM* datum;$/;"	m	struct:NQFDBUNIDX	access:public
db	nqpreqry.h	/^	const char* db;$/;"	m	struct:NQPREQRY	access:public
db	nqqry.h	/^	void* db;$/;"	m	struct:NQQRY	access:public
db	parser/nqparser.h	/^	const char* db;$/;"	m	struct:__anon14	access:public
db_pool	nqbwdb.c	/^static frl_slab_pool_t* db_pool = 0;$/;"	v	file:
db_pool	nqfdb.c	/^static frl_slab_pool_t* db_pool = 0;$/;"	v	file:
db_pool	nqrdb.c	/^static frl_slab_pool_t* db_pool = 0;$/;"	v	file:
dbname	net/nqplan.h	/^	const char* dbname;$/;"	m	struct:NQPLANITER	access:public
dbtype	parser/nqparser.h	/^	int dbtype;$/;"	m	struct:__anon14	access:public
dcast	swig/ndqi_wrap.cxx	/^  swig_dycast_func        dcast;		\/* dynamic cast function down a hierarchy *\/$/;"	m	struct:swig_type_info	file:	access:public
delargs	swig/ndqi_wrap.cxx	/^  int delargs;$/;"	m	struct:__anon3	file:	access:public
desc	nqbwdb.h	/^	CvMat desc;$/;"	m	struct:__anon8	access:public
desc	nqqry.h	/^		CvMat* desc;$/;"	m	union:NQQRY::__anon29	access:public
destroy	swig/ndqi_wrap.cxx	/^  PyObject *destroy;$/;"	m	struct:__anon3	file:	access:public
digest	lib/frl_util_md5.h	/^			apr_byte_t digest[16];$/;"	m	union:frl_md5::__anon1	access:public
dirty	nqrdb.h	/^	bool dirty;$/;"	m	struct:NQRDBDATUM	access:public
dist	nqbwdb.c	/^	CvMat* dist;$/;"	m	struct:__anon7	file:	access:public
dt_pool	nqbwdb.c	/^static frl_slab_pool_t* dt_pool = 0;$/;"	v	file:
dt_pool	nqfdb.c	/^static frl_slab_pool_t* dt_pool = 0;$/;"	v	file:
dups	nqtdb.h	/^	TCMAP* dups;$/;"	m	struct:__anon32	access:public
dvalue	swig/ndqi_wrap.cxx	/^  double dvalue;$/;"	m	struct:swig_const_info	file:	access:public
emax	nqbwdb.c	/^	uint32_t emax;$/;"	m	struct:__anon7	file:	access:public
emax	nqbwdb.h	/^	uint32_t emax;$/;"	m	struct:__anon10	access:public
end	swig/ndqi_wrap.cxx	/^         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}$/;"	f	class:SWIG_Python_Thread_Allow	access:public	signature:()
end	swig/ndqi_wrap.cxx	/^         void end() { if (status) { PyGILState_Release(state); status = false;} }$/;"	f	class:SWIG_Python_Thread_Block	access:public	signature:()
f	nqfdb.h	/^	CvMat* f;$/;"	m	struct:NQFDBIDX	access:public
f	nqfdb.h	/^	CvMat* f;$/;"	m	struct:__anon24	access:public
fl	parser/nqparser.h	/^    float fl;$/;"	m	union:__anon16	access:public
flag	lib/frl_slab_pool.h	/^	apr_uint32_t flag;$/;"	m	struct:frl_mem_safe_t	access:public
fm	nqfdb.c	/^	CvMat* fm;$/;"	m	struct:__anon23	file:	access:public
frl_insert_u	lib/frl_base.h	/^enum frl_insert_u$/;"	g
frl_level_u	lib/frl_base.h	/^enum frl_level_u$/;"	g
frl_lock_u	lib/frl_base.h	/^enum frl_lock_u$/;"	g
frl_managed_free	lib/frl_managed_mem.c	/^void frl_managed_free(void* pointer)$/;"	f	signature:(void* pointer)
frl_managed_free	lib/frl_managed_mem.h	/^void frl_managed_free(void* pointer);$/;"	p	signature:(void* pointer)
frl_managed_malloc	lib/frl_managed_mem.c	/^void* frl_managed_malloc(apr_uint32_t size)$/;"	f	signature:(apr_uint32_t size)
frl_managed_malloc	lib/frl_managed_mem.h	/^void* frl_managed_malloc(apr_uint32_t size);$/;"	p	signature:(apr_uint32_t size)
frl_managed_ref	lib/frl_managed_mem.c	/^void frl_managed_ref(void* pointer)$/;"	f	signature:(void* pointer)
frl_managed_ref	lib/frl_managed_mem.h	/^void frl_managed_ref(void* pointer);$/;"	p	signature:(void* pointer)
frl_managed_unref	lib/frl_managed_mem.c	/^void frl_managed_unref(void* pointer)$/;"	f	signature:(void* pointer)
frl_managed_unref	lib/frl_managed_mem.h	/^void frl_managed_unref(void* pointer);$/;"	p	signature:(void* pointer)
frl_md5	lib/frl_util_md5.h	/^		frl_md5()$/;"	f	class:frl_md5	access:public	signature:()
frl_md5	lib/frl_util_md5.h	/^		frl_md5(const apr_byte_t* x)$/;"	f	class:frl_md5	access:public	signature:(const apr_byte_t* x)
frl_md5	lib/frl_util_md5.h	/^		frl_md5(const void* s, const apr_size_t size)$/;"	f	class:frl_md5	access:public	signature:(const void* s, const apr_size_t size)
frl_md5	lib/frl_util_md5.h	/^class frl_md5$/;"	c
frl_md5::__anon1::digest	lib/frl_util_md5.h	/^			apr_byte_t digest[16];$/;"	m	union:frl_md5::__anon1	access:public
frl_md5::__anon1::uid	lib/frl_util_md5.h	/^			apr_uint64_t uid[2];$/;"	m	union:frl_md5::__anon1	access:public
frl_md5::base64_decode	lib/frl_util_md5.cpp	/^int frl_md5::base64_decode(const apr_byte_t* x)$/;"	f	class:frl_md5	signature:(const apr_byte_t* x)
frl_md5::base64_decode	lib/frl_util_md5.h	/^		int base64_decode(const apr_byte_t* x);$/;"	p	class:frl_md5	access:public	signature:(const apr_byte_t* x)
frl_md5::base64_encode	lib/frl_util_md5.cpp	/^int frl_md5::base64_encode(apr_byte_t* q)$/;"	f	class:frl_md5	signature:(apr_byte_t* q)
frl_md5::base64_encode	lib/frl_util_md5.h	/^		int base64_encode(apr_byte_t* q);$/;"	p	class:frl_md5	access:public	signature:(apr_byte_t* q)
frl_md5::frl_md5	lib/frl_util_md5.h	/^		frl_md5()$/;"	f	class:frl_md5	access:public	signature:()
frl_md5::frl_md5	lib/frl_util_md5.h	/^		frl_md5(const apr_byte_t* x)$/;"	f	class:frl_md5	access:public	signature:(const apr_byte_t* x)
frl_md5::frl_md5	lib/frl_util_md5.h	/^		frl_md5(const void* s, const apr_size_t size)$/;"	f	class:frl_md5	access:public	signature:(const void* s, const apr_size_t size)
frl_md5::hash	lib/frl_util_md5.cpp	/^int frl_md5::hash(const void* s, const apr_size_t size)$/;"	f	class:frl_md5	signature:(const void* s, const apr_size_t size)
frl_md5::hash	lib/frl_util_md5.h	/^		int hash(const void* s, const apr_size_t size);$/;"	p	class:frl_md5	access:public	signature:(const void* s, const apr_size_t size)
frl_mem_safe_t	lib/frl_slab_pool.h	/^struct frl_mem_safe_t$/;"	s
frl_mem_safe_t::flag	lib/frl_slab_pool.h	/^	apr_uint32_t flag;$/;"	m	struct:frl_mem_safe_t	access:public
frl_mem_stat_t	lib/frl_slab_pool.h	/^struct frl_mem_stat_t$/;"	s
frl_mem_stat_t::block_size	lib/frl_slab_pool.h	/^	apr_uint32_t block_size;$/;"	m	struct:frl_mem_stat_t	access:public
frl_mem_stat_t::capacity	lib/frl_slab_pool.h	/^	apr_uint32_t capacity;$/;"	m	struct:frl_mem_stat_t	access:public
frl_mem_stat_t::per_size	lib/frl_slab_pool.h	/^	apr_uint32_t per_size;$/;"	m	struct:frl_mem_stat_t	access:public
frl_mem_stat_t::usage	lib/frl_slab_pool.h	/^	apr_size_t usage;$/;"	m	struct:frl_mem_stat_t	access:public
frl_mem_t	lib/frl_slab_pool.h	/^struct frl_mem_t$/;"	s
frl_mem_t::block	lib/frl_slab_pool.h	/^	frl_slab_block_t* block;$/;"	m	struct:frl_mem_t	access:public
frl_mem_t::id	lib/frl_slab_pool.h	/^	apr_uint32_t id;$/;"	m	struct:frl_mem_t	access:public
frl_mem_t::pointer	lib/frl_slab_pool.h	/^	void* pointer;$/;"	m	struct:frl_mem_t	access:public
frl_mem_t::refcount	lib/frl_slab_pool.h	/^	volatile apr_uint32_t refcount;$/;"	m	struct:frl_mem_t	access:public
frl_memory_u	lib/frl_base.h	/^enum frl_memory_u$/;"	g
frl_slab_block_t	lib/frl_slab_pool.h	/^struct frl_slab_block_t$/;"	s
frl_slab_block_t::arena	lib/frl_slab_pool.h	/^	apr_byte_t* arena;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_block_t::capacity	lib/frl_slab_pool.h	/^	apr_uint32_t capacity;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_block_t::next	lib/frl_slab_pool.h	/^	frl_slab_block_t* next;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_block_t::pool	lib/frl_slab_pool.h	/^	frl_slab_pool_t* pool;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_block_t::stack_pointer	lib/frl_slab_pool.h	/^	apr_byte_t** stack_pointer;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_block_t::usage_stack	lib/frl_slab_pool.h	/^	apr_byte_t** usage_stack;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_palloc	lib/frl_slab_pool.c	/^APR_DECLARE(void*) frl_slab_palloc(frl_slab_pool_t* pool)$/;"	f	signature:(frl_slab_pool_t* pool)
frl_slab_palloc_lock_free	lib/frl_slab_pool.c	/^APR_DECLARE(void*) frl_slab_palloc_lock_free(frl_slab_pool_t* pool)$/;"	f	signature:(frl_slab_pool_t* pool)
frl_slab_palloc_lock_with	lib/frl_slab_pool.c	/^APR_DECLARE(void*) frl_slab_palloc_lock_with(frl_slab_pool_t* pool)$/;"	f	signature:(frl_slab_pool_t* pool)
frl_slab_pcalloc	lib/frl_slab_pool.c	/^APR_DECLARE(void*) frl_slab_pcalloc(frl_slab_pool_t* pool)$/;"	f	signature:(frl_slab_pool_t* pool)
frl_slab_pfree	lib/frl_slab_pool.c	/^APR_DECLARE(void) frl_slab_pfree(void* pointer)$/;"	f	signature:(void* pointer)
frl_slab_pfree_lock_free	lib/frl_slab_pool.c	/^APR_DECLARE(void) frl_slab_pfree_lock_free(void* pointer)$/;"	f	signature:(void* pointer)
frl_slab_pfree_lock_with	lib/frl_slab_pool.c	/^APR_DECLARE(void) frl_slab_pfree_lock_with(void* pointer)$/;"	f	signature:(void* pointer)
frl_slab_pool_clear	lib/frl_slab_pool.c	/^APR_DECLARE(void) frl_slab_pool_clear(frl_slab_pool_t* pool)$/;"	f	signature:(frl_slab_pool_t* pool)
frl_slab_pool_t	lib/frl_slab_pool.h	/^struct frl_slab_pool_t$/;"	s
frl_slab_pool_t::block	lib/frl_slab_pool.h	/^	frl_slab_block_t* block;$/;"	m	struct:frl_slab_pool_t	access:public
frl_slab_pool_t::lock	lib/frl_slab_pool.h	/^	frl_lock_u lock;$/;"	m	struct:frl_slab_pool_t	access:public
frl_slab_pool_t::max_capacity	lib/frl_slab_pool.h	/^	apr_uint32_t max_capacity;$/;"	m	struct:frl_slab_pool_t	access:public
frl_slab_pool_t::mutex	lib/frl_slab_pool.h	/^	apr_thread_mutex_t* mutex;$/;"	m	struct:frl_slab_pool_t	access:public
frl_slab_pool_t::per_size	lib/frl_slab_pool.h	/^	apr_uint32_t per_size;$/;"	m	struct:frl_slab_pool_t	access:public
frl_slab_ref	lib/frl_slab_pool.c	/^APR_DECLARE(void) frl_slab_ref(void* pointer)$/;"	f	signature:(void* pointer)
frl_slab_unref	lib/frl_slab_pool.c	/^APR_DECLARE(void) frl_slab_unref(void* pointer)$/;"	f	signature:(void* pointer)
frl_thread_model_u	lib/frl_base.h	/^enum frl_thread_model_u$/;"	g
ft	nqfdb.h	/^	CvFeatureTree* ft;$/;"	m	struct:NQFDBIDX	access:public
gabors	nqgs.c	/^static CvGaborFilter* gabors = cvCreateGaborFilters(6, 4, 48);$/;"	v	file:
generic_handler	net/nqserver.c	/^void generic_handler(struct evhttp_request *req, void *arg)$/;"	f	signature:(struct evhttp_request *req, void *arg)
get_attr	swig/ndqi_wrap.cxx	/^    PyObject *(*get_attr)(void);       \/* Return the current value *\/$/;"	m	struct:swig_globalvar	file:	access:public
hash	lib/frl_util_md5.cpp	/^int frl_md5::hash(const void* s, const apr_size_t size)$/;"	f	class:frl_md5	signature:(const void* s, const apr_size_t size)
hash	lib/frl_util_md5.h	/^		int hash(const void* s, const apr_size_t size);$/;"	p	class:frl_md5	access:public	signature:(const void* s, const apr_size_t size)
head	net/nqplan.h	/^	NQPLANITER* head;$/;"	m	struct:__anon2	access:public
head	nqrdb.h	/^	NQRDBDATUM* head;$/;"	m	struct:__anon26	access:public
hpr	config/databases.h	/^	void* hpr;$/;"	m	struct:__anon12	access:public
hprloc	config/databases.h	/^    const char* hprloc;$/;"	m	struct:__anon12	access:public
ht	nqrdb.h	/^	uint8_t ht;$/;"	m	struct:NQRDBDATUM	access:public
i	lib/mlapcluster.cpp	/^	int i;$/;"	m	struct:CvSparseNode2D	file:	access:public
i	parser/nqparser.h	/^    int i;$/;"	m	union:__anon16	access:public
icvCalcHist	lib/cvlocalhist.cpp	/^icvCalcHist( IplImage* img,$/;"	f	signature:( IplImage* img, int* hist, const int length, const CvRect rect )
icvCompareHist	lib/cvlocalhist.cpp	/^icvCompareHist( int *hist1,$/;"	f	signature:( int *hist1, int *hist2, const int length )
icvHistProjection	lib/cvlocalhist.cpp	/^icvHistProjection( CvArr* _img,$/;"	f	signature:( CvArr* _img, int bins, int* v_hist = NULL, int* h_hist = NULL )
icvSplitScan	lib/cvlocalhist.cpp	/^icvSplitScan( int *scanline,$/;"	f	signature:( int *scanline, const int length, const int width, const int start, const int end, const int lock_position, const double lock )
id	lib/frl_slab_pool.h	/^	apr_uint32_t id;$/;"	m	struct:frl_mem_t	access:public
idf	nqbwdb.h	/^	float idf;$/;"	m	struct:__anon8	access:public
idx	nqbwdb.c	/^	CvMat* idx;$/;"	m	struct:__anon7	file:	access:public
idx	nqbwdb.h	/^	NQBWDBIDX* idx;$/;"	m	struct:__anon10	access:public
idx	nqfdb.h	/^	NQFDBIDX* idx;$/;"	m	struct:__anon25	access:public
idx	nqtdb.h	/^	TCHDB* idx;$/;"	m	struct:__anon32	access:public
idx_pool	nqbwdb.c	/^static frl_slab_pool_t* idx_pool = 0;$/;"	v	file:
idx_pool	nqfdb.c	/^static frl_slab_pool_t* idx_pool = 0;$/;"	v	file:
implicitconv	swig/ndqi_wrap.cxx	/^  int implicitconv;$/;"	m	struct:__anon3	file:	access:public
inum	nqbwdb.h	/^	uint32_t inum;$/;"	m	struct:NQBWDBIDX	access:public
inum	nqbwdb.h	/^	uint32_t inum;$/;"	m	struct:__anon10	access:public
inum	nqfdb.h	/^	uint32_t inum;$/;"	m	struct:NQFDBIDX	access:public
inum	nqfdb.h	/^	uint32_t inum;$/;"	m	struct:__anon25	access:public
k	lib/mlapcluster.cpp	/^	int k;$/;"	m	struct:CvSparseNode2D	file:	access:public
kint	nqrdb.h	/^	uint32_t kint[4];$/;"	m	struct:NQRDBDATUM	access:public
klass	swig/ndqi_wrap.cxx	/^  PyObject *klass;$/;"	m	struct:__anon3	file:	access:public
kmatch	nqrdb.c	/^static inline bool kmatch(uint32_t* kstr1, uint32_t* kstr2, uint32_t k)$/;"	f	file:	signature:(uint32_t* kstr1, uint32_t* kstr2, uint32_t k)
kstr	nqbwdb.c	/^	char* kstr;$/;"	m	struct:__anon6	file:	access:public
kstr	nqbwdb.h	/^	char* kstr;$/;"	m	struct:NQBWDBUNIDX	access:public
kstr	nqbwdb.h	/^	char** kstr;$/;"	m	struct:NQBWDBIDX	access:public
kstr	nqbwdb.h	/^	char** kstr;$/;"	m	struct:__anon8	access:public
kstr	nqfdb.c	/^	char* kstr;$/;"	m	struct:__anon22	file:	access:public
kstr	nqfdb.h	/^	char* kstr;$/;"	m	struct:NQFDBUNIDX	access:public
kstr	nqfdb.h	/^	char** kstr;$/;"	m	struct:NQFDBIDX	access:public
kstr	nqqry.c	/^	char* kstr;$/;"	m	struct:__anon27	file:	access:public
kstr_pool	nqbwdb.c	/^static frl_slab_pool_t* kstr_pool = 0;$/;"	v	file:
kstr_pool	nqfdb.c	/^static frl_slab_pool_t* kstr_pool = 0;$/;"	v	file:
lambda	lib/mlapcluster.h	/^	double lambda;$/;"	m	struct:CvAPCParams	access:public
likeness	nqbwdb.c	/^	float likeness;$/;"	m	struct:__anon6	file:	access:public
likeness	nqfdb.c	/^	float likeness;$/;"	m	struct:__anon22	file:	access:public
likeness	nqqry.c	/^	float likeness;$/;"	m	struct:__anon27	file:	access:public
lmt	nqpreqry.h	/^	int lmt;$/;"	m	struct:NQPREQRY	access:public
lmt	nqqry.h	/^	int lmt;$/;"	m	struct:NQQRY	access:public
lock	lib/frl_slab_pool.h	/^	frl_lock_u lock;$/;"	m	struct:frl_slab_pool_t	access:public
lvalue	swig/ndqi_wrap.cxx	/^  long lvalue;$/;"	m	struct:swig_const_info	file:	access:public
main	net/nqserver.c	/^int main(int argc, char** argv)$/;"	f	signature:(int argc, char** argv)
main	parser/test.cpp	/^int main()$/;"	f	signature:()
main	test/cx_test.cpp	/^int main()$/;"	f	signature:()
main	test/dpdb_test.cpp	/^int main()$/;"	f	signature:()
main	test/eplr_test.cpp	/^int main()$/;"	f	signature:()
main	test/file_dpdb_test.cpp	/^int main()$/;"	f	signature:()
main	test/file_lh_test.cpp	/^int main()$/;"	f	signature:()
main	test/gs_test.cpp	/^int main()$/;"	f	signature:()
main	test/idx_test.cpp	/^int main()$/;"	f	signature:()
main	test/irdb_test.cpp	/^int main()$/;"	f	signature:()
main	test/lh_test.cpp	/^int main()$/;"	f	signature:()
main	test/mm_test.cpp	/^int main()$/;"	f	signature:()
main	test/qry_test.cpp	/^int main()$/;"	f	signature:()
main	test/rdb_test.cpp	/^int main()$/;"	f	signature:()
main	test/tdb_test.cpp	/^int main(int argc, char** argv)$/;"	f	signature:(int argc, char** argv)
main	tool/processor.c	/^int main(int argc, char** argv)$/;"	f	signature:(int argc, char** argv)
match	nqbwdb.c	/^	double match;$/;"	m	struct:__anon7	file:	access:public
match	nqbwdb.h	/^	double match;$/;"	m	struct:NQBWDBIDX	access:public
max	nqrdb.h	/^	uint32_t max;$/;"	m	struct:NQRDBDATUM	access:public
max_capacity	lib/frl_slab_pool.h	/^	apr_uint32_t max_capacity;$/;"	m	struct:frl_slab_pool_t	access:public
maxiteration	lib/mlapcluster.h	/^	int maxiteration;$/;"	m	struct:CvAPCParams	access:public
mempool	test/cx_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/dpdb_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/file_dpdb_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/file_lh_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/gs_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/idx_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/irdb_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/lh_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/mm_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/qry_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/rdb_test.cpp	/^apr_pool_t* mempool;$/;"	v
mode	config/databases.h	/^	int mode;$/;"	m	struct:__anon12	access:public
mode	nqqry.h	/^	int mode;$/;"	m	struct:NQQRY	access:public
mtx_pool	net/nqplan.c	/^static apr_pool_t* mtx_pool = 0;$/;"	v	file:
mtx_pool	nqbwdb.c	/^static apr_pool_t* mtx_pool = 0;$/;"	v	file:
mtx_pool	nqfdb.c	/^static apr_pool_t* mtx_pool = 0;$/;"	v	file:
mtx_pool	nqpreqry.c	/^static apr_pool_t* mtx_pool = 0;$/;"	v	file:
mtx_pool	nqqry.c	/^static apr_pool_t* mtx_pool = 0;$/;"	v	file:
mtx_pool	nqrdb.c	/^static apr_pool_t* mtx_pool = 0;$/;"	v	file:
mutex	lib/frl_slab_pool.h	/^	apr_thread_mutex_t* mutex;$/;"	m	struct:frl_slab_pool_t	access:public
naive	nqfdb.h	/^	int naive;$/;"	m	struct:NQFDBIDX	access:public
name	config/databases.h	/^	const char* name;$/;"	m	struct:__anon12	access:public
name	parser/keywords.h	/^	const char* name;$/;"	m	struct:__anon21	access:public
name	swig/ndqi_wrap.cxx	/^    char       *name;                  \/* Name of global variable *\/$/;"	m	struct:swig_globalvar	file:	access:public
name	swig/ndqi_wrap.cxx	/^  char *name;$/;"	m	struct:swig_const_info	file:	access:public
name	swig/ndqi_wrap.cxx	/^  const char             *name;			\/* mangled name of this type *\/$/;"	m	struct:swig_type_info	file:	access:public
ncbwdbget	net/nqclient.c	/^CvMat* ncbwdbget(const char* db, char* uuid)$/;"	f	signature:(const char* db, char* uuid)
ncbwdbget	net/nqclient.h	/^CvMat* ncbwdbget(const char* db, char* uuid);$/;"	p	signature:(const char* db, char* uuid)
ncfdbget	net/nqclient.c	/^CvMat* ncfdbget(const char* db, char* uuid)$/;"	f	signature:(const char* db, char* uuid)
ncfdbget	net/nqclient.h	/^CvMat* ncfdbget(const char* db, char* uuid);$/;"	p	signature:(const char* db, char* uuid)
ncidx	net/nqclient.c	/^void ncidx(const char* db)$/;"	f	signature:(const char* db)
ncidx	net/nqclient.h	/^void ncidx(const char* db);$/;"	p	signature:(const char* db)
ncinit	net/nqclient.c	/^void ncinit()$/;"	f
ncinit	net/nqclient.h	/^void ncinit(void);$/;"	p	signature:(void)
ncmgidx	net/nqclient.c	/^void ncmgidx(const char* db, int max)$/;"	f	signature:(const char* db, int max)
ncmgidx	net/nqclient.h	/^void ncmgidx(const char* db, int max);$/;"	p	signature:(const char* db, int max)
ncoutany	net/nqclient.c	/^void ncoutany(char* uuid)$/;"	f	signature:(char* uuid)
ncoutany	net/nqclient.h	/^void ncoutany(char* uuid);$/;"	p	signature:(char* uuid)
ncputany	net/nqclient.c	/^void ncputany(char* uuid)$/;"	f	signature:(char* uuid)
ncputany	net/nqclient.h	/^void ncputany(char* uuid);$/;"	p	signature:(char* uuid)
ncqrysearch	net/nqclient.c	/^int ncqrysearch(NQQRY* qry, char** kstr, float* likeness)$/;"	f	signature:(NQQRY* qry, char** kstr, float* likeness)
ncqrysearch	net/nqclient.h	/^int ncqrysearch(NQQRY* qry, char** kstr, float* likeness = 0);$/;"	p	signature:(NQQRY* qry, char** kstr, float* likeness = 0)
ncreidx	net/nqclient.c	/^void ncreidx(const char* db)$/;"	f	signature:(const char* db)
ncreidx	net/nqclient.h	/^void ncreidx(const char* db);$/;"	p	signature:(const char* db)
ncsnap	net/nqclient.c	/^void ncsnap()$/;"	f
ncsnap	net/nqclient.h	/^void ncsnap(void);$/;"	p	signature:(void)
ncsync	net/nqclient.c	/^void ncsync()$/;"	f
ncsync	net/nqclient.h	/^void ncsync(void);$/;"	p	signature:(void)
nctctdbget	net/nqclient.c	/^char* nctctdbget(const char* db, char* col, char* uuid)$/;"	f	signature:(const char* db, char* col, char* uuid)
nctctdbget	net/nqclient.h	/^char* nctctdbget(const char* db, char* col, char* uuid);$/;"	p	signature:(const char* db, char* col, char* uuid)
nctctdbput	net/nqclient.c	/^bool nctctdbput(const char* db, char* col, char* uuid, char* val)$/;"	f	signature:(const char* db, char* col, char* uuid, char* val)
nctctdbput	net/nqclient.h	/^bool nctctdbput(const char* db, char* col, char* uuid, char* val);$/;"	p	signature:(const char* db, char* col, char* uuid, char* val)
nctdbget	net/nqclient.c	/^TCLIST* nctdbget(const char* db, char* uuid)$/;"	f	signature:(const char* db, char* uuid)
nctdbget	net/nqclient.h	/^TCLIST* nctdbget(const char* db, char* uuid);$/;"	p	signature:(const char* db, char* uuid)
nctdbout	net/nqclient.c	/^bool nctdbout(const char* db, char* uuid, char* word)$/;"	f	signature:(const char* db, char* uuid, char* word)
nctdbout	net/nqclient.h	/^bool nctdbout(const char* db, char* uuid, char* word);$/;"	p	signature:(const char* db, char* uuid, char* word)
nctdbput	net/nqclient.c	/^bool nctdbput(const char* db, char* uuid, char* word)$/;"	f	signature:(const char* db, char* uuid, char* word)
nctdbput	net/nqclient.h	/^bool nctdbput(const char* db, char* uuid, char* word);$/;"	p	signature:(const char* db, char* uuid, char* word)
nctdbsetindex	net/nqclient.c	/^static void nctdbsetindex(TCTDB* tdb, const char* set)$/;"	f	file:	signature:(TCTDB* tdb, const char* set)
ncterm	net/nqclient.c	/^void ncterm()$/;"	f
ncterm	net/nqclient.h	/^void ncterm(void);$/;"	p	signature:(void)
newargs	swig/ndqi_wrap.cxx	/^  PyObject *newargs;$/;"	m	struct:__anon3	file:	access:public
newraw	swig/ndqi_wrap.cxx	/^  PyObject *newraw;$/;"	m	struct:__anon3	file:	access:public
next	lib/frl_slab_pool.h	/^	frl_slab_block_t* next;$/;"	m	struct:frl_slab_block_t	access:public
next	nqbwdb.h	/^	struct NQBWDBIDX* next;$/;"	m	struct:NQBWDBIDX	typeref:struct:NQBWDBIDX::NQBWDBIDX	access:public
next	nqbwdb.h	/^	struct NQBWDBUNIDX* next;$/;"	m	struct:NQBWDBUNIDX	typeref:struct:NQBWDBUNIDX::NQBWDBUNIDX	access:public
next	nqfdb.h	/^	struct NQFDBIDX* next;$/;"	m	struct:NQFDBIDX	typeref:struct:NQFDBIDX::NQFDBIDX	access:public
next	nqfdb.h	/^	struct NQFDBUNIDX* next;$/;"	m	struct:NQFDBUNIDX	typeref:struct:NQFDBUNIDX::NQFDBUNIDX	access:public
next	nqrdb.h	/^	NQRDBDATUM* next;$/;"	m	struct:NQRDBDATUM	access:public
next	swig/ndqi_wrap.cxx	/^    struct swig_globalvar *next;$/;"	m	struct:swig_globalvar	typeref:struct:swig_globalvar::swig_globalvar	file:	access:public
next	swig/ndqi_wrap.cxx	/^  PyObject *next;$/;"	m	struct:__anon4	file:	access:public
next	swig/ndqi_wrap.cxx	/^  struct swig_cast_info  *next;			\/* pointer to next cast in linked list *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:	access:public
next	swig/ndqi_wrap.cxx	/^  struct swig_module_info *next;		\/* Pointer to next element in circularly linked list *\/$/;"	m	struct:swig_module_info	typeref:struct:swig_module_info::swig_module_info	file:	access:public
nqbwcx	nqbwdb.c	/^static void nqbwcx(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwdbdel	nqbwdb.c	/^void nqbwdbdel(NQBWDB* bwdb)$/;"	f	signature:(NQBWDB* bwdb)
nqbwdbdel	nqbwdb.h	/^void nqbwdbdel(NQBWDB* bwdb);$/;"	p	signature:(NQBWDB* bwdb)
nqbwdbget	nqbwdb.c	/^CvMat* nqbwdbget(NQBWDB* bwdb, char* kstr)$/;"	f	signature:(NQBWDB* bwdb, char* kstr)
nqbwdbget	nqbwdb.h	/^CvMat* nqbwdbget(NQBWDB* bwdb, char* kstr);$/;"	p	signature:(NQBWDB* bwdb, char* kstr)
nqbwdbidx	nqbwdb.c	/^bool nqbwdbidx(NQBWDB* bwdb, int min, double match)$/;"	f	signature:(NQBWDB* bwdb, int min, double match)
nqbwdbidx	nqbwdb.h	/^bool nqbwdbidx(NQBWDB* bwdb, int min = 1, double match = 0.6);$/;"	p	signature:(NQBWDB* bwdb, int min = 1, double match = 0.6)
nqbwdbjoin	nqbwdb.c	/^NQBWDB* nqbwdbjoin(NQBWDB* bwdb, NQRDB* rdb)$/;"	f	signature:(NQBWDB* bwdb, NQRDB* rdb)
nqbwdbjoin	nqbwdb.c	/^NQBWDB* nqbwdbjoin(NQBWDB* bwdb, char** kstr, int len)$/;"	f	signature:(NQBWDB* bwdb, char** kstr, int len)
nqbwdbjoin	nqbwdb.h	/^NQBWDB* nqbwdbjoin(NQBWDB* bwdb, NQRDB* rdb);$/;"	p	signature:(NQBWDB* bwdb, NQRDB* rdb)
nqbwdbjoin	nqbwdb.h	/^NQBWDB* nqbwdbjoin(NQBWDB* bwdb, char** kstr, int len);$/;"	p	signature:(NQBWDB* bwdb, char** kstr, int len)
nqbwdblike	nqbwdb.c	/^int nqbwdblike(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, int mode, double match, bool ordered, float* likeness)$/;"	f	signature:(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, int mode, double match, bool ordered, float* likeness)
nqbwdblike	nqbwdb.h	/^int nqbwdblike(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, int mode = NQBW_LIKE_BEST_MATCH_COUNT, double match = 0.6, bool ordered = false, float* likeness = 0);$/;"	p	signature:(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, int mode = NQBW_LIKE_BEST_MATCH_COUNT, double match = 0.6, bool ordered = false, float* likeness = 0)
nqbwdbmgidx	nqbwdb.c	/^bool nqbwdbmgidx(NQBWDB* bwdb, int max, int min, double match)$/;"	f	signature:(NQBWDB* bwdb, int max, int min, double match)
nqbwdbmgidx	nqbwdb.h	/^bool nqbwdbmgidx(NQBWDB* bwdb, int max, int min = 1, double match = 0.6);$/;"	p	signature:(NQBWDB* bwdb, int max, int min = 1, double match = 0.6)
nqbwdbnew	nqbwdb.c	/^NQBWDB* nqbwdbnew(void)$/;"	f	signature:(void)
nqbwdbnew	nqbwdb.h	/^NQBWDB* nqbwdbnew(void);$/;"	p	signature:(void)
nqbwdbout	nqbwdb.c	/^bool nqbwdbout(NQBWDB* bwdb, char* kstr)$/;"	f	signature:(NQBWDB* bwdb, char* kstr)
nqbwdbout	nqbwdb.h	/^bool nqbwdbout(NQBWDB* bwdb, char* kstr);$/;"	p	signature:(NQBWDB* bwdb, char* kstr)
nqbwdbput	nqbwdb.c	/^bool nqbwdbput(NQBWDB* bwdb, char* kstr, CvMat* bwm)$/;"	f	signature:(NQBWDB* bwdb, char* kstr, CvMat* bwm)
nqbwdbput	nqbwdb.h	/^bool nqbwdbput(NQBWDB* bwdb, char* kstr, CvMat* bwm);$/;"	p	signature:(NQBWDB* bwdb, char* kstr, CvMat* bwm)
nqbwdbreidx	nqbwdb.c	/^bool nqbwdbreidx(NQBWDB* bwdb, int min, double match)$/;"	f	signature:(NQBWDB* bwdb, int min, double match)
nqbwdbreidx	nqbwdb.h	/^bool nqbwdbreidx(NQBWDB* bwdb, int min = 1, double match = 0.6);$/;"	p	signature:(NQBWDB* bwdb, int min = 1, double match = 0.6)
nqbwdbsearch	nqbwdb.c	/^int nqbwdbsearch(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, bool ordered, float* likeness)$/;"	f	signature:(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, bool ordered, float* likeness)
nqbwdbsearch	nqbwdb.h	/^int nqbwdbsearch(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, bool ordered = false, float* likeness = 0);$/;"	p	signature:(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, bool ordered = false, float* likeness = 0)
nqbwdbsnap	nqbwdb.c	/^bool nqbwdbsnap(NQBWDB* bwdb, const char* filename)$/;"	f	signature:(NQBWDB* bwdb, const char* filename)
nqbwdbsnap	nqbwdb.h	/^bool nqbwdbsnap(NQBWDB* bwdb, const char* filename);$/;"	p	signature:(NQBWDB* bwdb, const char* filename)
nqbwdbsync	nqbwdb.c	/^bool nqbwdbsync(NQBWDB* bwdb, const char* filename)$/;"	f	signature:(NQBWDB* bwdb, const char* filename)
nqbwdbsync	nqbwdb.h	/^bool nqbwdbsync(NQBWDB* bwdb, const char* filename);$/;"	p	signature:(NQBWDB* bwdb, const char* filename)
nqbwdbwrite	nqbwdb.c	/^static void nqbwdbwrite(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbweplr	nqbwdb.c	/^CvMat* nqbweplr(CvMat* data, int e, int emax)$/;"	f	signature:(CvMat* data, int e, int emax)
nqbweplr	nqbwdb.h	/^CvMat* nqbweplr(CvMat* data, int e = 5, int emax = 50);$/;"	p	signature:(CvMat* data, int e = 5, int emax = 50)
nqbwfwmc	nqbwdb.c	/^static void nqbwfwmc(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwfwms	nqbwdb.c	/^static void nqbwfwms(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwhpf	nqbwdb.c	/^static void nqbwhpf(NQBWPAIR* pr, uint32_t i, uint32_t siz)$/;"	f	file:	signature:(NQBWPAIR* pr, uint32_t i, uint32_t siz)
nqbwidxclr	nqbwdb.c	/^static void nqbwidxclr(NQBWDB* bwdb)$/;"	f	file:	signature:(NQBWDB* bwdb)
nqbwnuk	nqbwdb.c	/^static void nqbwnuk(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwrefr	nqbwdb.c	/^static void nqbwrefr(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwsort	nqbwdb.c	/^static void nqbwsort(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwunidxclr	nqbwdb.c	/^static void nqbwunidxclr(NQBWDB* bwdb)$/;"	f	file:	signature:(NQBWDB* bwdb)
nqdpnew	nqdp.c	/^CvMat* nqdpnew(CvArr* image, CvSURFParams params)$/;"	f	signature:(CvArr* image, CvSURFParams params)
nqdpnew	nqdp.h	/^CvMat* nqdpnew(CvArr* image, CvSURFParams params);$/;"	p	signature:(CvArr* image, CvSURFParams params)
nqeplr	nqutil.c	/^int nqeplr(CvMat* data, int* ki, int k)$/;"	f	signature:(CvMat* data, int* ki, int k)
nqeplr	nqutil.c	/^int nqeplr(CvSparseMat* sim, int* ki, int t, int k)$/;"	f	signature:(CvSparseMat* sim, int* ki, int t, int k)
nqeplr	nqutil.h	/^int nqeplr(CvMat* data, int* ki, int k = 0);$/;"	p	signature:(CvMat* data, int* ki, int k = 0)
nqeplr	nqutil.h	/^int nqeplr(CvSparseMat* sim, int* ki, int t, int k);$/;"	p	signature:(CvSparseMat* sim, int* ki, int t, int k)
nqfcx	nqfdb.c	/^static void nqfcx(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqfdbdel	nqfdb.c	/^void nqfdbdel(NQFDB* fdb)$/;"	f	signature:(NQFDB* fdb)
nqfdbdel	nqfdb.h	/^void nqfdbdel(NQFDB* fdb);$/;"	p	signature:(NQFDB* fdb)
nqfdbget	nqfdb.c	/^CvMat* nqfdbget(NQFDB* fdb, char* kstr)$/;"	f	signature:(NQFDB* fdb, char* kstr)
nqfdbget	nqfdb.h	/^CvMat* nqfdbget(NQFDB* fdb, char* kstr);$/;"	p	signature:(NQFDB* fdb, char* kstr)
nqfdbidx	nqfdb.c	/^bool nqfdbidx(NQFDB* fdb, int naive, double rho, double tau)$/;"	f	signature:(NQFDB* fdb, int naive, double rho, double tau)
nqfdbidx	nqfdb.h	/^bool nqfdbidx(NQFDB* fdb, int naive = 10, double rho = 0.75, double tau = 0.2);$/;"	p	signature:(NQFDB* fdb, int naive = 10, double rho = 0.75, double tau = 0.2)
nqfdbjoin	nqfdb.c	/^NQFDB* nqfdbjoin(NQFDB* fdb, NQRDB* rdb)$/;"	f	signature:(NQFDB* fdb, NQRDB* rdb)
nqfdbjoin	nqfdb.c	/^NQFDB* nqfdbjoin(NQFDB* fdb, char** kstr, int len)$/;"	f	signature:(NQFDB* fdb, char** kstr, int len)
nqfdbjoin	nqfdb.h	/^NQFDB* nqfdbjoin(NQFDB* fdb, NQRDB* rdb);$/;"	p	signature:(NQFDB* fdb, NQRDB* rdb)
nqfdbjoin	nqfdb.h	/^NQFDB* nqfdbjoin(NQFDB* fdb, char** kstr, int len);$/;"	p	signature:(NQFDB* fdb, char** kstr, int len)
nqfdblike	nqfdb.c	/^int nqfdblike(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered, float* likeness)$/;"	f	signature:(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered, float* likeness)
nqfdblike	nqfdb.h	/^int nqfdblike(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered = false, float* likeness = 0);$/;"	p	signature:(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered = false, float* likeness = 0)
nqfdbmgidx	nqfdb.c	/^bool nqfdbmgidx(NQFDB* fdb, int max, int naive, double rho, double tau)$/;"	f	signature:(NQFDB* fdb, int max, int naive, double rho, double tau)
nqfdbmgidx	nqfdb.h	/^bool nqfdbmgidx(NQFDB* fdb, int max, int naive = 10, double rho = 0.75, double tau = 0.2);$/;"	p	signature:(NQFDB* fdb, int max, int naive = 10, double rho = 0.75, double tau = 0.2)
nqfdbnew	nqfdb.c	/^NQFDB* nqfdbnew(void)$/;"	f	signature:(void)
nqfdbnew	nqfdb.h	/^NQFDB* nqfdbnew(void);$/;"	p	signature:(void)
nqfdbout	nqfdb.c	/^bool nqfdbout(NQFDB* fdb, char* kstr)$/;"	f	signature:(NQFDB* fdb, char* kstr)
nqfdbout	nqfdb.h	/^bool nqfdbout(NQFDB* fdb, char* kstr);$/;"	p	signature:(NQFDB* fdb, char* kstr)
nqfdbput	nqfdb.c	/^bool nqfdbput(NQFDB* fdb, char* kstr, CvMat* fm)$/;"	f	signature:(NQFDB* fdb, char* kstr, CvMat* fm)
nqfdbput	nqfdb.h	/^bool nqfdbput(NQFDB* fdb, char* kstr, CvMat* fm);$/;"	p	signature:(NQFDB* fdb, char* kstr, CvMat* fm)
nqfdbreidx	nqfdb.c	/^bool nqfdbreidx(NQFDB* fdb, int naive, double rho, double tau)$/;"	f	signature:(NQFDB* fdb, int naive, double rho, double tau)
nqfdbreidx	nqfdb.h	/^bool nqfdbreidx(NQFDB* fdb, int naive = 10, double rho = 0.75, double tau = 0.2);$/;"	p	signature:(NQFDB* fdb, int naive = 10, double rho = 0.75, double tau = 0.2)
nqfdbsearch	nqfdb.c	/^int nqfdbsearch(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered, float* likeness)$/;"	f	signature:(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered, float* likeness)
nqfdbsearch	nqfdb.h	/^int nqfdbsearch(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered = false, float* likeness = 0);$/;"	p	signature:(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered = false, float* likeness = 0)
nqfdbsnap	nqfdb.c	/^bool nqfdbsnap(NQFDB* fdb, const char* filename)$/;"	f	signature:(NQFDB* fdb, const char* filename)
nqfdbsnap	nqfdb.h	/^bool nqfdbsnap(NQFDB* fdb, const char* filename);$/;"	p	signature:(NQFDB* fdb, const char* filename)
nqfdbsync	nqfdb.c	/^bool nqfdbsync(NQFDB* fdb, const char* filename)$/;"	f	signature:(NQFDB* fdb, const char* filename)
nqfdbsync	nqfdb.h	/^bool nqfdbsync(NQFDB* fdb, const char* filename);$/;"	p	signature:(NQFDB* fdb, const char* filename)
nqfdbwrite	nqfdb.c	/^static void nqfdbwrite(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqffwm	nqfdb.c	/^static void nqffwm(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqfhpf	nqfdb.c	/^static void nqfhpf(NQFPAIR* pr, uint32_t i, uint32_t siz)$/;"	f	file:	signature:(NQFPAIR* pr, uint32_t i, uint32_t siz)
nqfidxclr	nqfdb.c	/^static void nqfidxclr(NQFDB* fdb)$/;"	f	file:	signature:(NQFDB* fdb)
nqfnuk	nqfdb.c	/^static void nqfnuk(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqfrefr	nqfdb.c	/^static void nqfrefr(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqfunidxclr	nqfdb.c	/^static void nqfunidxclr(NQFDB* fdb)$/;"	f	file:	signature:(NQFDB* fdb)
nqgsnew	nqgs.c	/^CvMat* nqgsnew(CvArr* image)$/;"	f	signature:(CvArr* image)
nqgsnew	nqgs.h	/^CvMat* nqgsnew(CvArr* image);$/;"	p	signature:(CvArr* image)
nqirnew	nqir.c	/^CvMat* nqirnew(CvArr* image, CvMSERParams params)$/;"	f	signature:(CvArr* image, CvMSERParams params)
nqirnew	nqir.h	/^CvMat* nqirnew(CvArr* image, CvMSERParams params);$/;"	p	signature:(CvArr* image, CvMSERParams params)
nqkodnew	nqauto.c	/^TCMAP* nqkodnew(CvArr* image)$/;"	f	signature:(CvArr* image)
nqkodnew	nqauto.h	/^TCMAP* nqkodnew(CvArr* image);$/;"	p	signature:(CvArr* image)
nqlhnew	nqlh.c	/^CvMat* nqlhnew(CvArr* image, int bins)$/;"	f	signature:(CvArr* image, int bins)
nqlhnew	nqlh.h	/^CvMat* nqlhnew(CvArr* image, int bins);$/;"	p	signature:(CvArr* image, int bins)
nqmetanew	nqmeta.c	/^TCMAP* nqmetanew(const char* file)$/;"	f	signature:(const char* file)
nqmetanew	nqmeta.h	/^TCMAP* nqmetanew(const char* file);$/;"	p	signature:(const char* file)
nqocrnew	nqauto.c	/^TCLIST* nqocrnew(CvArr* image)$/;"	f	signature:(CvArr* image)
nqocrnew	nqauto.h	/^TCLIST* nqocrnew(CvArr* image);$/;"	p	signature:(CvArr* image)
nqparse	parser/nqparser.h	/^NQPARSERESULT* nqparse(char* str, int siz);$/;"	p	signature:(char* str, int siz)
nqparsedel	parser/nqparser.h	/^void nqparsedel(void);$/;"	p	signature:(void)
nqparseresultdel	parser/nqparser.h	/^void nqparseresultdel(NQPARSERESULT* result);$/;"	p	signature:(NQPARSERESULT* result)
nqplandel	net/nqplan.c	/^void nqplandel(NQPLAN* plan)$/;"	f	signature:(NQPLAN* plan)
nqplandel	net/nqplan.h	/^void nqplandel(NQPLAN* plan);$/;"	p	signature:(NQPLAN* plan)
nqplannew	net/nqplan.c	/^NQPLAN* nqplannew(NQPREQRY* preqry)$/;"	f	signature:(NQPREQRY* preqry)
nqplannew	net/nqplan.h	/^NQPLAN* nqplannew(NQPREQRY* preqry);$/;"	p	signature:(NQPREQRY* preqry)
nqplanrun	net/nqplan.c	/^int nqplanrun(NQPLAN* plan, char** kstr, float* likeness)$/;"	f	signature:(NQPLAN* plan, char** kstr, float* likeness)
nqplanrun	net/nqplan.h	/^int nqplanrun(NQPLAN* plan, char** kstr, float* likeness = 0);$/;"	p	signature:(NQPLAN* plan, char** kstr, float* likeness = 0)
nqpreqrydel	nqpreqry.c	/^void nqpreqrydel(NQPREQRY* qry)$/;"	f	signature:(NQPREQRY* qry)
nqpreqrydel	nqpreqry.h	/^void nqpreqrydel(NQPREQRY* qry);$/;"	p	signature:(NQPREQRY* qry)
nqpreqrydup	nqpreqry.c	/^NQPREQRY* nqpreqrydup(NQPREQRY* qry)$/;"	f	signature:(NQPREQRY* qry)
nqpreqrydup	nqpreqry.h	/^NQPREQRY* nqpreqrydup(NQPREQRY* qry);$/;"	p	signature:(NQPREQRY* qry)
nqpreqrynew	nqpreqry.c	/^NQPREQRY* nqpreqrynew(apr_pool_t* pool)$/;"	f	signature:(apr_pool_t* pool)
nqpreqrynew	nqpreqry.c	/^NQPREQRY* nqpreqrynew(void)$/;"	f	signature:(void)
nqpreqrynew	nqpreqry.h	/^NQPREQRY* nqpreqrynew(apr_pool_t* pool);$/;"	p	signature:(apr_pool_t* pool)
nqpreqrynew	nqpreqry.h	/^NQPREQRY* nqpreqrynew(void);$/;"	p	signature:(void)
nqqrydel	nqqry.c	/^void nqqrydel(NQQRY* qry)$/;"	f	signature:(NQQRY* qry)
nqqrydel	nqqry.h	/^void nqqrydel(NQQRY* qry);$/;"	p	signature:(NQQRY* qry)
nqqrydump	nqqry.c	/^void* nqqrydump(NQQRY* qry, int* sp)$/;"	f	signature:(NQQRY* qry, int* sp)
nqqrydump	nqqry.h	/^void* nqqrydump(NQQRY* qry, int* sp);$/;"	p	signature:(NQQRY* qry, int* sp)
nqqrydumpcount	nqqry.c	/^static int nqqrydumpcount(NQQRY* qry)$/;"	f	file:	signature:(NQQRY* qry)
nqqrydumpcpy	nqqry.c	/^static bool nqqrydumpcpy(NQQRY* qry, char* mem)$/;"	f	file:	signature:(NQQRY* qry, char* mem)
nqqryhpf	nqqry.c	/^static void nqqryhpf(NQQRYPAIR* pr, uint32_t i, uint32_t siz)$/;"	f	file:	signature:(NQQRYPAIR* pr, uint32_t i, uint32_t siz)
nqqrynew	nqqry.c	/^NQQRY* nqqrynew(void)$/;"	f	signature:(void)
nqqrynew	nqqry.c	/^NQQRY* nqqrynew(void* mem)$/;"	f	signature:(void* mem)
nqqrynew	nqqry.h	/^NQQRY* nqqrynew(void);$/;"	p	signature:(void)
nqqrynew	nqqry.h	/^NQQRY* nqqrynew(void* mem);$/;"	p	signature:(void* mem)
nqqryresult	nqqry.c	/^int nqqryresult(NQQRY* qry, char** kstr, float* likeness)$/;"	f	signature:(NQQRY* qry, char** kstr, float* likeness)
nqqryresult	nqqry.h	/^int nqqryresult(NQQRY* qry, char** kstr, float* likeness = 0);$/;"	p	signature:(NQQRY* qry, char** kstr, float* likeness = 0)
nqqrysearch	nqqry.c	/^NQRDB* nqqrysearch(NQQRY* qry)$/;"	f	signature:(NQQRY* qry)
nqqrysearch	nqqry.h	/^NQRDB* nqqrysearch(NQQRY* qry);$/;"	p	signature:(NQQRY* qry)
nqqrysort	nqqry.c	/^static void nqqrysort(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqqrytrans	net/nqplan.c	/^static NQQRY* nqqrytrans(NQPLAN* plan, NQPREQRY* preqry)$/;"	f	file:	signature:(NQPLAN* plan, NQPREQRY* preqry)
nqrdbclear	nqrdb.c	/^static void nqrdbclear(NQRDB* rdb)$/;"	f	file:	signature:(NQRDB* rdb)
nqrdbclear	nqrdb.c	/^static void nqrdbclear(NQRDB* rdb);$/;"	p	file:	signature:(NQRDB* rdb)
nqrdbdel	nqrdb.c	/^void nqrdbdel(NQRDB* rdb)$/;"	f	signature:(NQRDB* rdb)
nqrdbdel	nqrdb.h	/^void nqrdbdel(NQRDB* rdb);$/;"	p	signature:(NQRDB* rdb)
nqrdbfilter	nqrdb.c	/^bool nqrdbfilter(NQRDB* rdb, char** kstr, int len)$/;"	f	signature:(NQRDB* rdb, char** kstr, int len)
nqrdbfilter	nqrdb.h	/^bool nqrdbfilter(NQRDB* rdb, char** kstr, int len);$/;"	p	signature:(NQRDB* rdb, char** kstr, int len)
nqrdbforeach	nqrdb.c	/^bool nqrdbforeach(NQRDB* rdb, NQFOREACH op, void* ud)$/;"	f	signature:(NQRDB* rdb, NQFOREACH op, void* ud)
nqrdbforeach	nqrdb.h	/^bool nqrdbforeach(NQRDB* rdb, NQFOREACH op, void* ud);$/;"	p	signature:(NQRDB* rdb, NQFOREACH op, void* ud)
nqrdbget	nqrdb.c	/^void* nqrdbget(NQRDB* rdb, char* kstr)$/;"	f	signature:(NQRDB* rdb, char* kstr)
nqrdbget	nqrdb.h	/^void* nqrdbget(NQRDB* rdb, char* kstr);$/;"	p	signature:(NQRDB* rdb, char* kstr)
nqrdbgetdatum	nqrdb.c	/^inline static NQRDBDATUM* nqrdbgetdatum(NQRDB* rdb, uint32_t* kint)$/;"	f	file:	signature:(NQRDB* rdb, uint32_t* kint)
nqrdbirt	nqrdb.c	/^static NQRDBDATUM* nqrdbirt(NQRDB* rdb, NQRDBDATUM* rec, uint8_t ht, uint32_t i, uint32_t* kint, void* vbuf)$/;"	f	file:	signature:(NQRDB* rdb, NQRDBDATUM* rec, uint8_t ht, uint32_t i, uint32_t* kint, void* vbuf)
nqrdbnew	nqrdb.c	/^NQRDB* nqrdbnew(void)$/;"	f	signature:(void)
nqrdbnew	nqrdb.h	/^NQRDB* nqrdbnew(void);$/;"	p	signature:(void)
nqrdbout	nqrdb.c	/^bool nqrdbout(NQRDB* rdb, char* kstr)$/;"	f	signature:(NQRDB* rdb, char* kstr)
nqrdbout	nqrdb.h	/^bool nqrdbout(NQRDB* rdb, char* kstr);$/;"	p	signature:(NQRDB* rdb, char* kstr)
nqrdboutdatum	nqrdb.c	/^inline static NQRDBDATUM* nqrdboutdatum(NQRDB* rdb, NQRDBDATUM* rec)$/;"	f	file:	signature:(NQRDB* rdb, NQRDBDATUM* rec)
nqrdbput	nqrdb.c	/^bool nqrdbput(NQRDB* rdb, char* kstr, void* vbuf)$/;"	f	signature:(NQRDB* rdb, char* kstr, void* vbuf)
nqrdbput	nqrdb.c	/^int nqrdbput(NQRDB* rdb, char** kstr, void** vbuf, int len)$/;"	f	signature:(NQRDB* rdb, char** kstr, void** vbuf, int len)
nqrdbput	nqrdb.h	/^bool nqrdbput(NQRDB* rdb, char* kstr, void* vbuf);$/;"	p	signature:(NQRDB* rdb, char* kstr, void* vbuf)
nqrdbput	nqrdb.h	/^int nqrdbput(NQRDB* rdb, char** kstr, void** vbuf, int len);$/;"	p	signature:(NQRDB* rdb, char** kstr, void** vbuf, int len)
nqstrdup	nqpreqry.c	/^static char* nqstrdup(const char* str, unsigned int maxlen)$/;"	f	file:	signature:(const char* str, unsigned int maxlen)
nqtdbclose	nqtdb.c	/^bool nqtdbclose(NQTDB* tdb)$/;"	f	signature:(NQTDB* tdb)
nqtdbclose	nqtdb.h	/^bool nqtdbclose(NQTDB* tdb);$/;"	p	signature:(NQTDB* tdb)
nqtdbdel	nqtdb.c	/^void nqtdbdel(NQTDB* tdb)$/;"	f	signature:(NQTDB* tdb)
nqtdbdel	nqtdb.h	/^void nqtdbdel(NQTDB* tdb);$/;"	p	signature:(NQTDB* tdb)
nqtdbget	nqtdb.c	/^TCLIST* nqtdbget(NQTDB* tdb, char* kstr)$/;"	f	signature:(NQTDB* tdb, char* kstr)
nqtdbget	nqtdb.h	/^TCLIST* nqtdbget(NQTDB* tdb, char* kstr);$/;"	p	signature:(NQTDB* tdb, char* kstr)
nqtdbnew	nqtdb.c	/^NQTDB* nqtdbnew(void)$/;"	f	signature:(void)
nqtdbnew	nqtdb.h	/^NQTDB* nqtdbnew(void);$/;"	p	signature:(void)
nqtdbopen	nqtdb.c	/^bool nqtdbopen(NQTDB* tdb, const char* path, int omode)$/;"	f	signature:(NQTDB* tdb, const char* path, int omode)
nqtdbopen	nqtdb.h	/^bool nqtdbopen(NQTDB* tdb, const char* path, int omode);$/;"	p	signature:(NQTDB* tdb, const char* path, int omode)
nqtdbout	nqtdb.c	/^bool nqtdbout(NQTDB* tdb, char* kstr)$/;"	f	signature:(NQTDB* tdb, char* kstr)
nqtdbout	nqtdb.c	/^bool nqtdbout(NQTDB* tdb, char* kstr, char* val)$/;"	f	signature:(NQTDB* tdb, char* kstr, char* val)
nqtdbout	nqtdb.h	/^bool nqtdbout(NQTDB* tdb, char* kstr);$/;"	p	signature:(NQTDB* tdb, char* kstr)
nqtdbout	nqtdb.h	/^bool nqtdbout(NQTDB* tdb, char* kstr, char* val);$/;"	p	signature:(NQTDB* tdb, char* kstr, char* val)
nqtdboutimpl	nqtdb.c	/^static void nqtdboutimpl(NQTDB* tdb, char* kstr, char* val, int vsiz)$/;"	f	file:	signature:(NQTDB* tdb, char* kstr, char* val, int vsiz)
nqtdbput	nqtdb.c	/^bool nqtdbput(NQTDB* tdb, char* kstr, char* val)$/;"	f	signature:(NQTDB* tdb, char* kstr, char* val)
nqtdbput	nqtdb.h	/^bool nqtdbput(NQTDB* tdb, char* kstr, char* val);$/;"	p	signature:(NQTDB* tdb, char* kstr, char* val)
nqtdbsearch	nqtdb.c	/^TCLIST* nqtdbsearch(NQTDB* tdb, char* val)$/;"	f	signature:(NQTDB* tdb, char* val)
nqtdbsearch	nqtdb.h	/^TCLIST* nqtdbsearch(NQTDB* tdb, char* val);$/;"	p	signature:(NQTDB* tdb, char* val)
nqtdbsync	nqtdb.c	/^bool nqtdbsync(NQTDB* tdb)$/;"	f	signature:(NQTDB* tdb)
nqtdbsync	nqtdb.h	/^bool nqtdbsync(NQTDB* tdb);$/;"	p	signature:(NQTDB* tdb)
op	nqpreqry.h	/^	int op;$/;"	m	struct:NQPREQRY	access:public
op	nqqry.h	/^	int op;$/;"	m	struct:NQQRY	access:public
operator !=	lib/frl_util_md5.h	/^inline bool operator!=(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
operator &	swig/ndqi_wrap.cxx	/^    T *operator&() { return tt; }$/;"	f	class:SwigValueWrapper	access:public	signature:()
operator ->	swig/ndqi_wrap.cxx	/^    PyObject *operator->() const$/;"	f	class:swig::PyObject_ptr	access:public	signature:() const
operator <	lib/frl_util_md5.h	/^inline bool operator<(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
operator <=	lib/frl_util_md5.h	/^inline bool operator<=(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
operator =	swig/ndqi_wrap.cxx	/^    PyObject_ptr & operator=(const PyObject_ptr& item) $/;"	f	class:swig::PyObject_ptr	access:public	signature:(const PyObject_ptr& item)
operator =	swig/ndqi_wrap.cxx	/^    PyObject_var & operator = (PyObject* obj)$/;"	f	struct:swig::PyObject_var	access:public	signature:(PyObject* obj)
operator =	swig/ndqi_wrap.cxx	/^    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);$/;"	p	class:SwigValueWrapper	file:	access:private	signature:(const SwigValueWrapper<T>& rhs)
operator =	swig/ndqi_wrap.cxx	/^    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }$/;"	f	class:SwigValueWrapper	access:public	signature:(const T& t)
operator ==	lib/frl_util_md5.h	/^inline bool operator==(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
operator >	lib/frl_util_md5.h	/^inline bool operator>(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
operator >=	lib/frl_util_md5.h	/^inline bool operator>=(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
operator PyObject *	swig/ndqi_wrap.cxx	/^    operator PyObject *() const$/;"	f	class:swig::PyObject_ptr	access:public	signature:() const
operator T&	swig/ndqi_wrap.cxx	/^    operator T&() const { return *tt; }$/;"	f	class:SwigValueWrapper	access:public	signature:() const
order	nqpreqry.h	/^	int order;$/;"	m	struct:NQPREQRY	access:public
order	nqqry.h	/^	int order;$/;"	m	struct:NQQRY	access:public
orderby	nqpreqry.h	/^	char* orderby;$/;"	m	struct:NQPREQRY	access:public
orientation	lib/cvgist.h	/^	int orientation;$/;"	m	struct:CvGaborFilter	access:public
own	swig/ndqi_wrap.cxx	/^  int own;$/;"	m	struct:__anon4	file:	access:public
owndata	swig/ndqi_wrap.cxx	/^  int                    owndata;		\/* flag if the structure owns the clientdata *\/$/;"	m	struct:swig_type_info	file:	access:public
p	nqfdb.h	/^	CvMat* p;$/;"	m	struct:NQFDBIDX	access:public
pack	swig/ndqi_wrap.cxx	/^  void *pack;$/;"	m	struct:__anon5	file:	access:public
params	lib/mlapcluster.h	/^		CvAPCParams params;$/;"	m	class:CvAPCluster	access:private
params	parser/nqparser.h	/^    NQCOMMANDPARAM params[3];$/;"	m	struct:__anon17	access:public
per_size	lib/frl_slab_pool.h	/^	apr_uint32_t per_size;$/;"	m	struct:frl_mem_stat_t	access:public
per_size	lib/frl_slab_pool.h	/^	apr_uint32_t per_size;$/;"	m	struct:frl_slab_pool_t	access:public
plan_iter_pool	net/nqplan.c	/^static frl_slab_pool_t* plan_iter_pool = 0;$/;"	v	file:
plan_pool	net/nqplan.c	/^static frl_slab_pool_t* plan_pool = 0;$/;"	v	file:
pointer	lib/frl_slab_pool.h	/^	void* pointer;$/;"	m	struct:frl_mem_t	access:public
pool	lib/frl_slab_pool.h	/^	frl_slab_pool_t* pool;$/;"	m	struct:frl_slab_block_t	access:public
pool	lib/frl_slab_pool.h	/^APR_DECLARE(apr_status_t) frl_slab_pool_destroy(frl_slab_pool_t* pool);$/;"	v
pool	lib/frl_slab_pool.h	/^APR_DECLARE(apr_status_t) frl_slab_pool_safe(frl_slab_pool_t* pool);$/;"	v
pool	lib/frl_slab_pool.h	/^APR_DECLARE(frl_mem_stat_t) frl_slab_pool_stat(frl_slab_pool_t* pool);$/;"	v
pool	lib/frl_slab_pool.h	/^APR_DECLARE(void) frl_slab_pool_clear(frl_slab_pool_t* pool);$/;"	v
pool	lib/frl_slab_pool.h	/^APR_DECLARE(void*) frl_slab_palloc(frl_slab_pool_t* pool);$/;"	v
pool	lib/frl_slab_pool.h	/^APR_DECLARE(void*) frl_slab_pcalloc(frl_slab_pool_t* pool);$/;"	v
postqry	net/nqplan.h	/^	NQQRY* postqry;$/;"	m	struct:NQPLANITER	access:public
pr	nqrdb.h	/^	NQRDBDATUM* pr;$/;"	m	struct:NQRDBDATUM	access:public
preqry_pool	nqpreqry.c	/^static frl_slab_pool_t* preqry_pool = 0;$/;"	v	file:
prev	net/nqplan.h	/^	NQPLANITER* prev;$/;"	m	struct:NQPLANITER	access:public
prev	nqbwdb.h	/^	struct NQBWDBIDX* prev;$/;"	m	struct:NQBWDBIDX	typeref:struct:NQBWDBIDX::NQBWDBIDX	access:public
prev	nqbwdb.h	/^	struct NQBWDBUNIDX* prev;$/;"	m	struct:NQBWDBUNIDX	typeref:struct:NQBWDBUNIDX::NQBWDBUNIDX	access:public
prev	nqfdb.h	/^	struct NQFDBIDX* prev;$/;"	m	struct:NQFDBIDX	typeref:struct:NQFDBIDX::NQFDBIDX	access:public
prev	nqfdb.h	/^	struct NQFDBUNIDX* prev;$/;"	m	struct:NQFDBUNIDX	typeref:struct:NQFDBUNIDX::NQFDBUNIDX	access:public
prev	nqrdb.h	/^	NQRDBDATUM* prev;$/;"	m	struct:NQRDBDATUM	access:public
prev	swig/ndqi_wrap.cxx	/^  struct swig_cast_info  *prev;			\/* pointer to the previous cast *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:	access:public
ptr	parser/nqparser.h	/^    void* ptr;$/;"	m	union:__anon16	access:public
ptr	swig/ndqi_wrap.cxx	/^  void *ptr;$/;"	m	struct:__anon4	file:	access:public
ptype	swig/ndqi_wrap.cxx	/^  swig_type_info **ptype;$/;"	m	struct:swig_const_info	file:	access:public
pvalue	swig/ndqi_wrap.cxx	/^  void   *pvalue;$/;"	m	struct:swig_const_info	file:	access:public
qry	net/nqplan.h	/^	NQQRY* qry;$/;"	m	struct:NQPLANITER	access:public
qry	parser/nqparser.h	/^		struct NQPREQRY* qry;$/;"	m	union:__anon14::__anon15	typeref:struct:__anon14::__anon15::NQPREQRY	access:public
qry_pool	nqqry.c	/^static frl_slab_pool_t* qry_pool = 0;$/;"	v	file:
rdb	nqbwdb.h	/^	NQRDB* rdb;$/;"	m	struct:__anon10	access:public
rdb	nqfdb.h	/^	NQRDB* rdb;$/;"	m	struct:__anon25	access:public
read	lib/mlapcluster.cpp	/^CvAPCluster::read( CvFileStorage* fs,$/;"	f	class:CvAPCluster	signature:( CvFileStorage* fs, CvFileNode* root_node )
read	lib/mlapcluster.h	/^		virtual void read( CvFileStorage* fs, CvFileNode* root_node );$/;"	p	class:CvAPCluster	access:public	signature:( CvFileStorage* fs, CvFileNode* root_node )
rec_pool	nqrdb.c	/^static frl_slab_pool_t* rec_pool = 0;$/;"	v	file:
ref	config/databases.h	/^    void* ref;$/;"	m	struct:__anon12	access:public
refcount	lib/frl_slab_pool.h	/^	volatile apr_uint32_t refcount;$/;"	m	struct:frl_mem_t	access:public
refloc	config/databases.h	/^	const char* refloc;$/;"	m	struct:__anon12	access:public
result	nqpreqry.h	/^	NQRDB* result;$/;"	m	struct:NQPREQRY	access:public
result	nqqry.h	/^	NQRDB* result;$/;"	m	struct:NQQRY	access:public
result	parser/nqparser.h	/^	void* result;$/;"	m	struct:__anon13	access:public
rho	nqfdb.h	/^	double rho;$/;"	m	struct:NQFDBIDX	access:public
rnum	nqbwdb.h	/^	uint32_t rnum;$/;"	m	struct:NQBWDBIDX	access:public
rnum	nqbwdb.h	/^	uint32_t rnum;$/;"	m	struct:__anon8	access:public
rnum	nqrdb.h	/^	uint32_t rnum;$/;"	m	struct:NQRDBDATUM	access:public
rnum	nqrdb.h	/^	uint64_t rnum;$/;"	m	struct:__anon26	access:public
rwidxlock	nqbwdb.h	/^	apr_thread_rwlock_t* rwidxlock;$/;"	m	struct:__anon10	access:public
rwidxlock	nqfdb.h	/^	apr_thread_rwlock_t* rwidxlock;$/;"	m	struct:__anon25	access:public
rwlock	nqrdb.h	/^	apr_thread_rwlock_t* rwlock;$/;"	m	struct:__anon26	access:public
rwunidxlock	nqbwdb.h	/^	apr_thread_rwlock_t* rwunidxlock;$/;"	m	struct:__anon10	access:public
rwunidxlock	nqfdb.h	/^	apr_thread_rwlock_t* rwunidxlock;$/;"	m	struct:__anon25	access:public
save	swig/ndqi_wrap.cxx	/^         PyThreadState *save;$/;"	m	class:SWIG_Python_Thread_Allow	file:	access:private
sbj	nqpreqry.h	/^	} sbj;$/;"	m	struct:NQPREQRY	typeref:union:NQPREQRY::__anon11	access:public
sbj	nqqry.h	/^	} sbj;$/;"	m	struct:NQQRY	typeref:union:NQQRY::__anon29	access:public
sbj	parser/nqparser.h	/^	} sbj;$/;"	m	struct:__anon14	typeref:union:__anon14::__anon15	access:public
scale	lib/cvgist.h	/^	int scale;$/;"	m	struct:CvGaborFilter	access:public
set_attr	swig/ndqi_wrap.cxx	/^    int       (*set_attr)(PyObject *); \/* Set the value *\/$/;"	m	struct:swig_globalvar	file:	access:public
shallow	nqbwdb.h	/^	bool shallow;$/;"	m	struct:__anon10	access:public
shallow	nqfdb.h	/^	bool shallow;$/;"	m	struct:__anon25	access:public
show_help	net/nqserver.c	/^void show_help()$/;"	f
show_version	net/nqserver.c	/^void show_version()$/;"	f
siz	nqbwdb.c	/^	uint32_t siz;$/;"	m	struct:__anon7	file:	access:public
siz	nqfdb.c	/^	uint32_t siz;$/;"	m	struct:__anon23	file:	access:public
siz	nqqry.c	/^	uint32_t siz;$/;"	m	struct:__anon28	file:	access:public
size	lib/cvgist.h	/^	int size;$/;"	m	struct:CvGaborFilter	access:public
size	swig/ndqi_wrap.cxx	/^  size_t                 size;		        \/* Number of types in this module *\/$/;"	m	struct:swig_module_info	file:	access:public
size	swig/ndqi_wrap.cxx	/^  size_t size;$/;"	m	struct:__anon5	file:	access:public
smft	nqbwdb.h	/^	CvFeatureTree* smft;$/;"	m	struct:NQBWDBIDX	access:public
smmat	nqbwdb.h	/^	CvMat* smmat;$/;"	m	struct:NQBWDBIDX	access:public
stack_pointer	lib/frl_slab_pool.h	/^	apr_byte_t** stack_pointer;$/;"	m	struct:frl_slab_block_t	access:public
state	swig/ndqi_wrap.cxx	/^         PyGILState_STATE state;$/;"	m	class:SWIG_Python_Thread_Block	file:	access:private
status	swig/ndqi_wrap.cxx	/^         bool status;$/;"	m	class:SWIG_Python_Thread_Allow	file:	access:private
status	swig/ndqi_wrap.cxx	/^         bool status;$/;"	m	class:SWIG_Python_Thread_Block	file:	access:private
stem	nqbwdb.h	/^	NQBWDBSTEM* stem;$/;"	m	struct:NQBWDBIDX	access:public
stopcriterion	lib/mlapcluster.h	/^	int stopcriterion;$/;"	m	struct:CvAPCParams	access:public
storage	nqdp.c	/^static CvMemStorage* storage = 0;$/;"	v	file:
storage	nqir.c	/^static CvMemStorage* storage = 0;$/;"	v	file:
str	nqpreqry.h	/^		char* str;$/;"	m	union:NQPREQRY::__anon11	access:public
str	nqqry.h	/^		char* str;$/;"	m	union:NQQRY::__anon29	access:public
str	parser/nqparser.h	/^		char* str;$/;"	m	union:__anon14::__anon15	access:public
str	parser/nqparser.h	/^    const char* str;$/;"	m	union:__anon16	access:public
str	swig/ndqi_wrap.cxx	/^  const char             *str;			\/* human readable name of this type *\/$/;"	m	struct:swig_type_info	file:	access:public
strtolower	nqmeta.c	/^static void strtolower(char* buf)$/;"	f	file:	signature:(char* buf)
subqry	nqpreqry.h	/^		struct NQPREQRY* subqry;$/;"	m	union:NQPREQRY::__anon11	typeref:struct:NQPREQRY::__anon11::NQPREQRY	access:public
sumup	test/rdb_test.cpp	/^void sumup(char* kstr, void* data, void* ud)$/;"	f	signature:(char* kstr, void* data, void* ud)
swig	swig/ndqi_wrap.cxx	/^namespace swig {$/;"	n	file:
swig::PyObject_ptr	swig/ndqi_wrap.cxx	/^  class PyObject_ptr {$/;"	c	namespace:swig	file:
swig::PyObject_ptr::PyObject_ptr	swig/ndqi_wrap.cxx	/^    PyObject_ptr() :_obj(0)$/;"	f	class:swig::PyObject_ptr	access:public	signature:()
swig::PyObject_ptr::PyObject_ptr	swig/ndqi_wrap.cxx	/^    PyObject_ptr(PyObject *obj, bool initial_ref = true) :_obj(obj)$/;"	f	class:swig::PyObject_ptr	access:public	signature:(PyObject *obj, bool initial_ref = true)
swig::PyObject_ptr::PyObject_ptr	swig/ndqi_wrap.cxx	/^    PyObject_ptr(const PyObject_ptr& item) : _obj(item._obj)$/;"	f	class:swig::PyObject_ptr	access:public	signature:(const PyObject_ptr& item)
swig::PyObject_ptr::_obj	swig/ndqi_wrap.cxx	/^    PyObject *_obj;$/;"	m	class:swig::PyObject_ptr	file:	access:protected
swig::PyObject_ptr::operator ->	swig/ndqi_wrap.cxx	/^    PyObject *operator->() const$/;"	f	class:swig::PyObject_ptr	access:public	signature:() const
swig::PyObject_ptr::operator =	swig/ndqi_wrap.cxx	/^    PyObject_ptr & operator=(const PyObject_ptr& item) $/;"	f	class:swig::PyObject_ptr	access:public	signature:(const PyObject_ptr& item)
swig::PyObject_ptr::operator PyObject *	swig/ndqi_wrap.cxx	/^    operator PyObject *() const$/;"	f	class:swig::PyObject_ptr	access:public	signature:() const
swig::PyObject_ptr::~PyObject_ptr	swig/ndqi_wrap.cxx	/^    ~PyObject_ptr() $/;"	f	class:swig::PyObject_ptr	access:public	signature:()
swig::PyObject_var	swig/ndqi_wrap.cxx	/^  struct PyObject_var : PyObject_ptr {$/;"	s	namespace:swig	file:	inherits:PyObject_ptr
swig::PyObject_var::PyObject_var	swig/ndqi_wrap.cxx	/^    PyObject_var(PyObject* obj = 0) : PyObject_ptr(obj, false) { }$/;"	f	struct:swig::PyObject_var	access:public	signature:(PyObject* obj = 0)
swig::PyObject_var::operator =	swig/ndqi_wrap.cxx	/^    PyObject_var & operator = (PyObject* obj)$/;"	f	struct:swig::PyObject_var	access:public	signature:(PyObject* obj)
swig_cast_info	swig/ndqi_wrap.cxx	/^typedef struct swig_cast_info {$/;"	s	file:
swig_cast_info	swig/ndqi_wrap.cxx	/^} swig_cast_info;$/;"	t	typeref:struct:swig_cast_info	file:
swig_cast_info::converter	swig/ndqi_wrap.cxx	/^  swig_converter_func     converter;		\/* function to cast the void pointers *\/$/;"	m	struct:swig_cast_info	file:	access:public
swig_cast_info::next	swig/ndqi_wrap.cxx	/^  struct swig_cast_info  *next;			\/* pointer to next cast in linked list *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:	access:public
swig_cast_info::prev	swig/ndqi_wrap.cxx	/^  struct swig_cast_info  *prev;			\/* pointer to the previous cast *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:	access:public
swig_cast_info::type	swig/ndqi_wrap.cxx	/^  swig_type_info         *type;			\/* pointer to type that is equivalent to this type *\/$/;"	m	struct:swig_cast_info	file:	access:public
swig_cast_initial	swig/ndqi_wrap.cxx	/^static swig_cast_info *swig_cast_initial[] = {$/;"	v	file:
swig_const_info	swig/ndqi_wrap.cxx	/^typedef struct swig_const_info {$/;"	s	file:
swig_const_info	swig/ndqi_wrap.cxx	/^} swig_const_info;$/;"	t	typeref:struct:swig_const_info	file:
swig_const_info::dvalue	swig/ndqi_wrap.cxx	/^  double dvalue;$/;"	m	struct:swig_const_info	file:	access:public
swig_const_info::lvalue	swig/ndqi_wrap.cxx	/^  long lvalue;$/;"	m	struct:swig_const_info	file:	access:public
swig_const_info::name	swig/ndqi_wrap.cxx	/^  char *name;$/;"	m	struct:swig_const_info	file:	access:public
swig_const_info::ptype	swig/ndqi_wrap.cxx	/^  swig_type_info **ptype;$/;"	m	struct:swig_const_info	file:	access:public
swig_const_info::pvalue	swig/ndqi_wrap.cxx	/^  void   *pvalue;$/;"	m	struct:swig_const_info	file:	access:public
swig_const_info::type	swig/ndqi_wrap.cxx	/^  int type;$/;"	m	struct:swig_const_info	file:	access:public
swig_const_table	swig/ndqi_wrap.cxx	/^static swig_const_info swig_const_table[] = {$/;"	v	file:
swig_converter_func	swig/ndqi_wrap.cxx	/^typedef void *(*swig_converter_func)(void *, int *);$/;"	t	file:
swig_dycast_func	swig/ndqi_wrap.cxx	/^typedef struct swig_type_info *(*swig_dycast_func)(void **);$/;"	t	typeref:struct:swig_dycast_func	file:
swig_globalvar	swig/ndqi_wrap.cxx	/^  typedef struct swig_globalvar {$/;"	s	file:
swig_globalvar	swig/ndqi_wrap.cxx	/^  } swig_globalvar;$/;"	t	typeref:struct:swig_globalvar	file:
swig_globalvar::get_attr	swig/ndqi_wrap.cxx	/^    PyObject *(*get_attr)(void);       \/* Return the current value *\/$/;"	m	struct:swig_globalvar	file:	access:public
swig_globalvar::name	swig/ndqi_wrap.cxx	/^    char       *name;                  \/* Name of global variable *\/$/;"	m	struct:swig_globalvar	file:	access:public
swig_globalvar::next	swig/ndqi_wrap.cxx	/^    struct swig_globalvar *next;$/;"	m	struct:swig_globalvar	typeref:struct:swig_globalvar::swig_globalvar	file:	access:public
swig_globalvar::set_attr	swig/ndqi_wrap.cxx	/^    int       (*set_attr)(PyObject *); \/* Set the value *\/$/;"	m	struct:swig_globalvar	file:	access:public
swig_module	swig/ndqi_wrap.cxx	/^static swig_module_info swig_module = {swig_types, 1, 0, 0, 0, 0};$/;"	v	file:
swig_module_info	swig/ndqi_wrap.cxx	/^typedef struct swig_module_info {$/;"	s	file:
swig_module_info	swig/ndqi_wrap.cxx	/^} swig_module_info;$/;"	t	typeref:struct:swig_module_info	file:
swig_module_info::cast_initial	swig/ndqi_wrap.cxx	/^  swig_cast_info         **cast_initial;	\/* Array of initially generated casting structures *\/$/;"	m	struct:swig_module_info	file:	access:public
swig_module_info::clientdata	swig/ndqi_wrap.cxx	/^  void                    *clientdata;		\/* Language specific module data *\/$/;"	m	struct:swig_module_info	file:	access:public
swig_module_info::next	swig/ndqi_wrap.cxx	/^  struct swig_module_info *next;		\/* Pointer to next element in circularly linked list *\/$/;"	m	struct:swig_module_info	typeref:struct:swig_module_info::swig_module_info	file:	access:public
swig_module_info::size	swig/ndqi_wrap.cxx	/^  size_t                 size;		        \/* Number of types in this module *\/$/;"	m	struct:swig_module_info	file:	access:public
swig_module_info::type_initial	swig/ndqi_wrap.cxx	/^  swig_type_info         **type_initial;	\/* Array of initially generated type structures *\/$/;"	m	struct:swig_module_info	file:	access:public
swig_module_info::types	swig/ndqi_wrap.cxx	/^  swig_type_info         **types;		\/* Array of pointers to swig_type_info structures that are in this module *\/$/;"	m	struct:swig_module_info	file:	access:public
swig_owntype	swig/ndqi_wrap.cxx	1018;"	d	file:
swig_type_info	swig/ndqi_wrap.cxx	/^typedef struct swig_type_info {$/;"	s	file:
swig_type_info	swig/ndqi_wrap.cxx	/^} swig_type_info;$/;"	t	typeref:struct:swig_type_info	file:
swig_type_info::cast	swig/ndqi_wrap.cxx	/^  struct swig_cast_info  *cast;			\/* linked list of types that can cast into this type *\/$/;"	m	struct:swig_type_info	typeref:struct:swig_type_info::swig_cast_info	file:	access:public
swig_type_info::clientdata	swig/ndqi_wrap.cxx	/^  void                   *clientdata;		\/* language specific type data *\/$/;"	m	struct:swig_type_info	file:	access:public
swig_type_info::dcast	swig/ndqi_wrap.cxx	/^  swig_dycast_func        dcast;		\/* dynamic cast function down a hierarchy *\/$/;"	m	struct:swig_type_info	file:	access:public
swig_type_info::name	swig/ndqi_wrap.cxx	/^  const char             *name;			\/* mangled name of this type *\/$/;"	m	struct:swig_type_info	file:	access:public
swig_type_info::owndata	swig/ndqi_wrap.cxx	/^  int                    owndata;		\/* flag if the structure owns the clientdata *\/$/;"	m	struct:swig_type_info	file:	access:public
swig_type_info::str	swig/ndqi_wrap.cxx	/^  const char             *str;			\/* human readable name of this type *\/$/;"	m	struct:swig_type_info	file:	access:public
swig_type_initial	swig/ndqi_wrap.cxx	/^static swig_type_info *swig_type_initial[] = {$/;"	v	file:
swig_types	swig/ndqi_wrap.cxx	/^static swig_type_info *swig_types[2];$/;"	v	file:
swig_varlink_dealloc	swig/ndqi_wrap.cxx	/^  swig_varlink_dealloc(swig_varlinkobject *v) {$/;"	f	signature:(swig_varlinkobject *v)
swig_varlink_getattr	swig/ndqi_wrap.cxx	/^  swig_varlink_getattr(swig_varlinkobject *v, char *n) {$/;"	f	signature:(swig_varlinkobject *v, char *n)
swig_varlink_print	swig/ndqi_wrap.cxx	/^  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {$/;"	f	signature:(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
swig_varlink_setattr	swig/ndqi_wrap.cxx	/^  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {$/;"	f	signature:(swig_varlinkobject *v, char *n, PyObject *p)
swig_varlink_str	swig/ndqi_wrap.cxx	/^  swig_varlink_str(swig_varlinkobject *v) {$/;"	f	signature:(swig_varlinkobject *v)
swig_varlink_type	swig/ndqi_wrap.cxx	/^  swig_varlink_type(void) {$/;"	f	signature:(void)
swig_varlinkobject	swig/ndqi_wrap.cxx	/^  typedef struct swig_varlinkobject {$/;"	s	file:
swig_varlinkobject	swig/ndqi_wrap.cxx	/^  } swig_varlinkobject;$/;"	t	typeref:struct:swig_varlinkobject	file:
swig_varlinkobject::vars	swig/ndqi_wrap.cxx	/^    swig_globalvar *vars;$/;"	m	struct:swig_varlinkobject	file:	access:public
swigobject_methods	swig/ndqi_wrap.cxx	/^swigobject_methods[] = {$/;"	v	file:
tabid	lib/cvlocalhist.cpp	/^int tabid[256];$/;"	v
tail	net/nqplan.h	/^	NQPLANITER* tail;$/;"	m	struct:__anon2	access:public
tau	nqfdb.h	/^	double tau;$/;"	m	struct:NQFDBIDX	access:public
thr	nqpreqry.h	/^	float thr;$/;"	m	struct:NQPREQRY	access:public
thr	nqqry.h	/^	float thr;$/;"	m	struct:NQQRY	access:public
tokens	nqtdb.h	/^	TCMAP* tokens;$/;"	m	struct:__anon32	access:public
train	lib/mlapcluster.cpp	/^CvAPCluster::train( const CvSparseMat* similarity,$/;"	f	class:CvAPCluster	signature:( const CvSparseMat* similarity, const CvMat* labels )
train	lib/mlapcluster.cpp	/^bool CvAPCluster::train( const CvMat* similarity,$/;"	f	class:CvAPCluster	signature:( const CvMat* similarity, const CvMat* labels )
train	lib/mlapcluster.h	/^		virtual bool train( const CvMat* _train_data, const CvMat* _response );$/;"	p	class:CvAPCluster	access:public	signature:( const CvMat* _train_data, const CvMat* _response )
train	lib/mlapcluster.h	/^		virtual bool train( const CvSparseMat* _train_data, const CvMat* _response );$/;"	p	class:CvAPCluster	access:public	signature:( const CvSparseMat* _train_data, const CvMat* _response )
tt	swig/ndqi_wrap.cxx	/^    T *tt;$/;"	m	class:SwigValueWrapper	file:	access:private
ty	swig/ndqi_wrap.cxx	/^  swig_type_info *ty;$/;"	m	struct:__anon4	file:	access:public
ty	swig/ndqi_wrap.cxx	/^  swig_type_info *ty;$/;"	m	struct:__anon5	file:	access:public
type	config/databases.h	/^	int type;$/;"	m	struct:__anon12	access:public
type	net/nqplan.h	/^	int type;$/;"	m	struct:NQPLANITER	access:public
type	nqpreqry.h	/^	int type;$/;"	m	struct:NQPREQRY	access:public
type	nqqry.h	/^	int type;$/;"	m	struct:NQQRY	access:public
type	parser/nqparser.h	/^	int type;$/;"	m	struct:__anon13	access:public
type	parser/nqparser.h	/^	int type;$/;"	m	struct:__anon14	access:public
type	swig/ndqi_wrap.cxx	/^  int type;$/;"	m	struct:swig_const_info	file:	access:public
type	swig/ndqi_wrap.cxx	/^  swig_type_info         *type;			\/* pointer to type that is equivalent to this type *\/$/;"	m	struct:swig_cast_info	file:	access:public
type_initial	swig/ndqi_wrap.cxx	/^  swig_type_info         **type_initial;	\/* Array of initially generated type structures *\/$/;"	m	struct:swig_module_info	file:	access:public
types	swig/ndqi_wrap.cxx	/^  swig_type_info         **types;		\/* Array of pointers to swig_type_info structures that are in this module *\/$/;"	m	struct:swig_module_info	file:	access:public
uid	lib/frl_util_md5.h	/^			apr_uint64_t uid[2];$/;"	m	union:frl_md5::__anon1	access:public
unidx	nqbwdb.h	/^	NQBWDBUNIDX* unidx;$/;"	m	struct:__anon10	access:public
unidx	nqfdb.h	/^	NQFDBUNIDX* unidx;$/;"	m	struct:__anon25	access:public
unidx_pool	nqbwdb.c	/^static frl_slab_pool_t* unidx_pool = 0;$/;"	v	file:
unidx_pool	nqfdb.c	/^static frl_slab_pool_t* unidx_pool = 0;$/;"	v	file:
unum	nqbwdb.h	/^	uint32_t unum;$/;"	m	struct:__anon10	access:public
unum	nqfdb.h	/^	uint32_t unum;$/;"	m	struct:__anon25	access:public
usage	lib/frl_slab_pool.h	/^	apr_size_t usage;$/;"	m	struct:frl_mem_stat_t	access:public
usage_stack	lib/frl_slab_pool.h	/^	apr_byte_t** usage_stack;$/;"	m	struct:frl_slab_block_t	access:public
val	lib/mlapcluster.cpp	/^	double val;$/;"	m	struct:CvSparseNode2D	file:	access:public
val	parser/nqparser.h	/^	char* val;$/;"	m	struct:__anon14	access:public
value	parser/keywords.h	/^	short int value;$/;"	m	struct:__anon21	access:public
vars	swig/ndqi_wrap.cxx	/^    swig_globalvar *vars;$/;"	m	struct:swig_varlinkobject	file:	access:public
vbuf	nqrdb.h	/^	void* vbuf;$/;"	m	struct:NQRDBDATUM	access:public
wnum	nqbwdb.h	/^	uint32_t wnum;$/;"	m	struct:__anon10	access:public
write	lib/mlapcluster.cpp	/^CvAPCluster::write( CvFileStorage* fs,$/;"	f	class:CvAPCluster	signature:( CvFileStorage* fs, const char* name )
write	lib/mlapcluster.h	/^		virtual void write( CvFileStorage* fs, const char* name );$/;"	p	class:CvAPCluster	access:public	signature:( CvFileStorage* fs, const char* name )
yyerror	parser/_parser.h	/^extern void yyerror(const char*);$/;"	p	signature:(const char*)
yylex	parser/_parser.h	/^extern int yylex(void);$/;"	p	signature:(void)
yymem	parser/_parser.h	/^extern apr_pool_t* yymem(void);$/;"	p	signature:(void)
yyparse	parser/_parser.h	/^extern int yyparse(void);$/;"	p	signature:(void)
yyresult	parser/_parser.h	/^extern NQPARSERESULT* yyresult(void);$/;"	p	signature:(void)
~CvAPCluster	lib/mlapcluster.cpp	/^CvAPCluster::~CvAPCluster()$/;"	f	class:CvAPCluster	signature:()
~CvAPCluster	lib/mlapcluster.h	/^		virtual ~CvAPCluster();$/;"	p	class:CvAPCluster	access:public	signature:()
~PyObject_ptr	swig/ndqi_wrap.cxx	/^    ~PyObject_ptr() $/;"	f	class:swig::PyObject_ptr	access:public	signature:()
~SWIG_Python_Thread_Allow	swig/ndqi_wrap.cxx	/^         ~SWIG_Python_Thread_Allow() { end(); }$/;"	f	class:SWIG_Python_Thread_Allow	access:public	signature:()
~SWIG_Python_Thread_Block	swig/ndqi_wrap.cxx	/^         ~SWIG_Python_Thread_Block() { end(); }$/;"	f	class:SWIG_Python_Thread_Block	access:public	signature:()
~SwigValueWrapper	swig/ndqi_wrap.cxx	/^    ~SwigValueWrapper() { delete tt; } $/;"	f	class:SwigValueWrapper	access:public	signature:()
