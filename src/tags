!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(apr_status_t) frl_slab_block_create(frl_slab_block_t** newblock, frl_slab_pool_t* pool, apr_size_t capacity)$/;"	f
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(apr_status_t) frl_slab_block_destory(frl_slab_block_t* block)$/;"	f
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(apr_status_t) frl_slab_pool_create(frl_slab_pool_t** newpool, apr_pool_t *mempool, apr_uint32_t capacity, apr_uint32_t per_size, frl_lock_u lock)$/;"	f
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(apr_status_t) frl_slab_pool_destroy(frl_slab_pool_t* pool)$/;"	f
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(apr_status_t) frl_slab_pool_safe(frl_slab_pool_t* pool)$/;"	f
APR_DECLARE	lib/frl_slab_pool.c	/^APR_DECLARE(frl_mem_stat_t) frl_slab_pool_stat(frl_slab_pool_t* pool)$/;"	f
BEGIN	parser/lex.yy.c	125;"	d	file:
COMPFLAG	test/makefile	/^COMPFLAG=-O3$/;"	m
CV_TYPE_NAME_ML_APCLUSTER	lib/mlapcluster.h	6;"	d
CXXFLAGS	test/makefile	/^CXXFLAGS=-I"\/opt\/apr\/include" -I"\/opt\/apr-util\/include" -I"$(OPENCV)\/include\/opencv"$/;"	m
CvAPCParams	lib/mlapcluster.h	/^	CvAPCParams( int _maxiteration, int _stopcriterion, double _lambda )$/;"	f	struct:CvAPCParams	access:public	signature:( int _maxiteration, int _stopcriterion, double _lambda )
CvAPCParams	lib/mlapcluster.h	/^	CvAPCParams()$/;"	f	struct:CvAPCParams	access:public	signature:()
CvAPCParams	lib/mlapcluster.h	/^struct CV_EXPORTS CvAPCParams$/;"	s
CvAPCParams::CvAPCParams	lib/mlapcluster.h	/^	CvAPCParams( int _maxiteration, int _stopcriterion, double _lambda )$/;"	f	struct:CvAPCParams	access:public	signature:( int _maxiteration, int _stopcriterion, double _lambda )
CvAPCParams::CvAPCParams	lib/mlapcluster.h	/^	CvAPCParams()$/;"	f	struct:CvAPCParams	access:public	signature:()
CvAPCParams::lambda	lib/mlapcluster.h	/^	double lambda;$/;"	m	struct:CvAPCParams	access:public
CvAPCParams::maxiteration	lib/mlapcluster.h	/^	int maxiteration;$/;"	m	struct:CvAPCParams	access:public
CvAPCParams::stopcriterion	lib/mlapcluster.h	/^	int stopcriterion;$/;"	m	struct:CvAPCParams	access:public
CvAPCluster	lib/mlapcluster.cpp	/^CvAPCluster::CvAPCluster( CvAPCParams _params )$/;"	f	class:CvAPCluster	signature:( CvAPCParams _params )
CvAPCluster	lib/mlapcluster.h	/^		CvAPCluster( CvAPCParams _params );$/;"	p	class:CvAPCluster	access:public	signature:( CvAPCParams _params )
CvAPCluster	lib/mlapcluster.h	/^class CV_EXPORTS CvAPCluster : public CvStatModel$/;"	c	inherits:CvStatModel
CvAPCluster::CvAPCluster	lib/mlapcluster.cpp	/^CvAPCluster::CvAPCluster( CvAPCParams _params )$/;"	f	class:CvAPCluster	signature:( CvAPCParams _params )
CvAPCluster::CvAPCluster	lib/mlapcluster.h	/^		CvAPCluster( CvAPCParams _params );$/;"	p	class:CvAPCluster	access:public	signature:( CvAPCParams _params )
CvAPCluster::clear	lib/mlapcluster.cpp	/^CvAPCluster::clear()$/;"	f	class:CvAPCluster	signature:()
CvAPCluster::clear	lib/mlapcluster.h	/^		virtual void clear();$/;"	p	class:CvAPCluster	access:public	signature:()
CvAPCluster::params	lib/mlapcluster.h	/^		CvAPCParams params;$/;"	m	class:CvAPCluster	access:private
CvAPCluster::read	lib/mlapcluster.cpp	/^CvAPCluster::read( CvFileStorage* fs,$/;"	f	class:CvAPCluster	signature:( CvFileStorage* fs, CvFileNode* root_node )
CvAPCluster::read	lib/mlapcluster.h	/^		virtual void read( CvFileStorage* fs, CvFileNode* root_node );$/;"	p	class:CvAPCluster	access:public	signature:( CvFileStorage* fs, CvFileNode* root_node )
CvAPCluster::train	lib/mlapcluster.cpp	/^CvAPCluster::train( const CvSparseMat* similarity,$/;"	f	class:CvAPCluster	signature:( const CvSparseMat* similarity, const CvMat* labels )
CvAPCluster::train	lib/mlapcluster.cpp	/^bool CvAPCluster::train( const CvMat* similarity,$/;"	f	class:CvAPCluster	signature:( const CvMat* similarity, const CvMat* labels )
CvAPCluster::train	lib/mlapcluster.h	/^		virtual bool train( const CvMat* _train_data, const CvMat* _response );$/;"	p	class:CvAPCluster	access:public	signature:( const CvMat* _train_data, const CvMat* _response )
CvAPCluster::train	lib/mlapcluster.h	/^		virtual bool train( const CvSparseMat* _train_data, const CvMat* _response );$/;"	p	class:CvAPCluster	access:public	signature:( const CvSparseMat* _train_data, const CvMat* _response )
CvAPCluster::write	lib/mlapcluster.cpp	/^CvAPCluster::write( CvFileStorage* fs,$/;"	f	class:CvAPCluster	signature:( CvFileStorage* fs, const char* name )
CvAPCluster::write	lib/mlapcluster.h	/^		virtual void write( CvFileStorage* fs, const char* name );$/;"	p	class:CvAPCluster	access:public	signature:( CvFileStorage* fs, const char* name )
CvAPCluster::~CvAPCluster	lib/mlapcluster.cpp	/^CvAPCluster::~CvAPCluster()$/;"	f	class:CvAPCluster	signature:()
CvAPCluster::~CvAPCluster	lib/mlapcluster.h	/^		virtual ~CvAPCluster();$/;"	p	class:CvAPCluster	access:public	signature:()
CvGaborFilter	lib/cvgist.h	/^struct CvGaborFilter$/;"	s
CvGaborFilter::conv_img	lib/cvgist.h	/^	CvMat* conv_img;$/;"	m	struct:CvGaborFilter	access:public
CvGaborFilter::conv_real	lib/cvgist.h	/^	CvMat* conv_real;$/;"	m	struct:CvGaborFilter	access:public
CvGaborFilter::orientation	lib/cvgist.h	/^	int orientation;$/;"	m	struct:CvGaborFilter	access:public
CvGaborFilter::scale	lib/cvgist.h	/^	int scale;$/;"	m	struct:CvGaborFilter	access:public
CvGaborFilter::size	lib/cvgist.h	/^	int size;$/;"	m	struct:CvGaborFilter	access:public
CvSparseNode2D	lib/mlapcluster.cpp	/^struct CvSparseNode2D$/;"	s	file:
CvSparseNode2D::i	lib/mlapcluster.cpp	/^	int i;$/;"	m	struct:CvSparseNode2D	file:	access:public
CvSparseNode2D::k	lib/mlapcluster.cpp	/^	int k;$/;"	m	struct:CvSparseNode2D	file:	access:public
CvSparseNode2D::val	lib/mlapcluster.cpp	/^	double val;$/;"	m	struct:CvSparseNode2D	file:	access:public
DCAS_BUSY_VAL	lib/frl_slab_pool.c	54;"	d	file:
ECHO	parser/lex.yy.c	558;"	d	file:
EOB_ACT_CONTINUE_SCAN	parser/lex.yy.c	168;"	d	file:
EOB_ACT_END_OF_FILE	parser/lex.yy.c	169;"	d	file:
EOB_ACT_LAST_MATCH	parser/lex.yy.c	170;"	d	file:
FLEXINT_H	parser/lex.yy.c	29;"	d	file:
FLEX_BETA	parser/lex.yy.c	13;"	d	file:
FLEX_SCANNER	parser/lex.yy.c	8;"	d	file:
FRL_INSERT_AFTER	lib/frl_base.h	/^	FRL_INSERT_AFTER$/;"	e	enum:frl_insert_u
FRL_INSERT_BEFORE	lib/frl_base.h	/^	FRL_INSERT_BEFORE,$/;"	e	enum:frl_insert_u
FRL_LEVEL_ERROR	lib/frl_base.h	/^	FRL_LEVEL_ERROR,$/;"	e	enum:frl_level_u
FRL_LEVEL_INFO	lib/frl_base.h	/^	FRL_LEVEL_INFO$/;"	e	enum:frl_level_u
FRL_LEVEL_WARNING	lib/frl_base.h	/^	FRL_LEVEL_WARNING,$/;"	e	enum:frl_level_u
FRL_LOCK_FREE	lib/frl_base.h	/^	FRL_LOCK_FREE$/;"	e	enum:frl_lock_u
FRL_LOCK_WITH	lib/frl_base.h	/^	FRL_LOCK_WITH,$/;"	e	enum:frl_lock_u
FRL_MEMLEAK	lib/frl_slab_pool.h	13;"	d
FRL_MEMORY_GLOBAL	lib/frl_base.h	/^	FRL_MEMORY_GLOBAL$/;"	e	enum:frl_memory_u
FRL_MEMORY_SELF	lib/frl_base.h	/^	FRL_MEMORY_SELF,$/;"	e	enum:frl_memory_u
FRL_PROGRESS_COMLETE	lib/frl_base.h	14;"	d
FRL_PROGRESS_CONTINUE	lib/frl_base.h	16;"	d
FRL_PROGRESS_INTERRUPT	lib/frl_base.h	13;"	d
FRL_PROGRESS_IS_COMLETE	lib/frl_base.h	19;"	d
FRL_PROGRESS_IS_CONTINUE	lib/frl_base.h	21;"	d
FRL_PROGRESS_IS_INTERRUPT	lib/frl_base.h	18;"	d
FRL_PROGRESS_IS_RESTART	lib/frl_base.h	22;"	d
FRL_PROGRESS_IS_WAIT_SIGNAL	lib/frl_base.h	20;"	d
FRL_PROGRESS_RESTART	lib/frl_base.h	17;"	d
FRL_PROGRESS_WAIT_SIGNAL	lib/frl_base.h	15;"	d
FRL_STACKBUSY	lib/frl_slab_pool.h	15;"	d
FRL_STACKERR	lib/frl_slab_pool.h	14;"	d
FRL_THREAD_CONSUMER_PRODUCER	lib/frl_base.h	/^	FRL_THREAD_CONSUMER_PRODUCER$/;"	e	enum:frl_thread_model_u
FRL_THREAD_LEADER_FOLLOWER	lib/frl_base.h	/^	FRL_THREAD_LEADER_FOLLOWER,$/;"	e	enum:frl_thread_model_u
GOLDEN	lib/cvlocalhist.cpp	8;"	d	file:
GUARD_cvgist_h	lib/cvgist.h	9;"	d
GUARD_cvlocalhist_h	lib/cvlocalhist.h	2;"	d
GUARD_frl_base_h	lib/frl_base.h	2;"	d
GUARD_frl_slab_pool_h	lib/frl_slab_pool.h	8;"	d
GUARD_frl_util_md5_h	lib/frl_util_md5.h	2;"	d
GUARD_mlapcluster_h	lib/mlapcluster.h	2;"	d
INITIAL	parser/lex.yy.c	466;"	d	file:
INT16_MAX	parser/lex.yy.c	71;"	d	file:
INT16_MIN	parser/lex.yy.c	62;"	d	file:
INT32_MAX	parser/lex.yy.c	74;"	d	file:
INT32_MIN	parser/lex.yy.c	65;"	d	file:
INT8_MAX	parser/lex.yy.c	68;"	d	file:
INT8_MIN	parser/lex.yy.c	59;"	d	file:
LINKFLAG	test/makefile	/^LINKFLAG=-ldl -lpthread -lrt -lapr-1 -laprutil-1 -lcxcore -lcv -lhighgui -ltokyocabinet -ltokyodystopia$/;"	m
LINKLIB	test/makefile	/^LINKLIB=-L"$(OPENCV)\/lib"$/;"	m
NQBWDB	nqbwdb.h	/^} NQBWDB;$/;"	t	typeref:struct:__anon6
NQBWDBDATUM	nqbwdb.h	/^} NQBWDBDATUM;$/;"	t	typeref:struct:__anon5
NQBWDBIDX	nqbwdb.h	/^typedef struct NQBWDBIDX {$/;"	s
NQBWDBIDX	nqbwdb.h	/^} NQBWDBIDX;$/;"	t	typeref:struct:NQBWDBIDX
NQBWDBIDX::inum	nqbwdb.h	/^	uint32_t inum;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::kstr	nqbwdb.h	/^	char** kstr;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::match	nqbwdb.h	/^	double match;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::next	nqbwdb.h	/^	struct NQBWDBIDX* next;$/;"	m	struct:NQBWDBIDX	typeref:struct:NQBWDBIDX::NQBWDBIDX	access:public
NQBWDBIDX::prev	nqbwdb.h	/^	struct NQBWDBIDX* prev;$/;"	m	struct:NQBWDBIDX	typeref:struct:NQBWDBIDX::NQBWDBIDX	access:public
NQBWDBIDX::rnum	nqbwdb.h	/^	uint32_t rnum;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::smft	nqbwdb.h	/^	CvFeatureTree* smft;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::smmat	nqbwdb.h	/^	CvMat* smmat;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBIDX::stem	nqbwdb.h	/^	NQBWDBSTEM* stem;$/;"	m	struct:NQBWDBIDX	access:public
NQBWDBSTEM	nqbwdb.h	/^} NQBWDBSTEM;$/;"	t	typeref:struct:__anon4
NQBWDBUNIDX	nqbwdb.h	/^typedef struct NQBWDBUNIDX {$/;"	s
NQBWDBUNIDX	nqbwdb.h	/^} NQBWDBUNIDX;$/;"	t	typeref:struct:NQBWDBUNIDX
NQBWDBUNIDX::datum	nqbwdb.h	/^	NQBWDBDATUM* datum;$/;"	m	struct:NQBWDBUNIDX	access:public
NQBWDBUNIDX::kstr	nqbwdb.h	/^	char* kstr;$/;"	m	struct:NQBWDBUNIDX	access:public
NQBWDBUNIDX::next	nqbwdb.h	/^	struct NQBWDBUNIDX* next;$/;"	m	struct:NQBWDBUNIDX	typeref:struct:NQBWDBUNIDX::NQBWDBUNIDX	access:public
NQBWDBUNIDX::prev	nqbwdb.h	/^	struct NQBWDBUNIDX* prev;$/;"	m	struct:NQBWDBUNIDX	typeref:struct:NQBWDBUNIDX::NQBWDBUNIDX	access:public
NQBWPAIR	nqbwdb.c	/^} NQBWPAIR;$/;"	t	typeref:struct:__anon2	file:
NQBWUSERDATA	nqbwdb.c	/^} NQBWUSERDATA;$/;"	t	typeref:struct:__anon3	file:
NQBW_LIKE_BEST_MATCH_COUNT	nqbwdb.h	12;"	d
NQBW_LIKE_BEST_MATCH_SCORE	nqbwdb.h	13;"	d
NQCTAND	nqqry.h	/^	NQCTAND,		\/* and conjunction         *\/$/;"	e	enum:__anon15
NQCTOR	nqqry.h	/^	NQCTOR,			\/* or conjunction          *\/$/;"	e	enum:__anon15
NQFDB	nqfdb.h	/^} NQFDB;$/;"	t	typeref:struct:__anon10
NQFDBDATUM	nqfdb.h	/^} NQFDBDATUM;$/;"	t	typeref:struct:__anon9
NQFDBIDX	nqfdb.h	/^typedef struct NQFDBIDX {$/;"	s
NQFDBIDX	nqfdb.h	/^} NQFDBIDX;$/;"	t	typeref:struct:NQFDBIDX
NQFDBIDX::data	nqfdb.h	/^	NQFDBDATUM** data;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::f	nqfdb.h	/^	CvMat* f;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::ft	nqfdb.h	/^	CvFeatureTree* ft;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::inum	nqfdb.h	/^	uint32_t inum;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::kstr	nqfdb.h	/^	char** kstr;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::next	nqfdb.h	/^	struct NQFDBIDX* next;$/;"	m	struct:NQFDBIDX	typeref:struct:NQFDBIDX::NQFDBIDX	access:public
NQFDBIDX::p	nqfdb.h	/^	CvMat* p;$/;"	m	struct:NQFDBIDX	access:public
NQFDBIDX::prev	nqfdb.h	/^	struct NQFDBIDX* prev;$/;"	m	struct:NQFDBIDX	typeref:struct:NQFDBIDX::NQFDBIDX	access:public
NQFDBUNIDX	nqfdb.h	/^typedef struct NQFDBUNIDX {$/;"	s
NQFDBUNIDX	nqfdb.h	/^} NQFDBUNIDX;$/;"	t	typeref:struct:NQFDBUNIDX
NQFDBUNIDX::datum	nqfdb.h	/^	NQFDBDATUM* datum;$/;"	m	struct:NQFDBUNIDX	access:public
NQFDBUNIDX::kstr	nqfdb.h	/^	char* kstr;$/;"	m	struct:NQFDBUNIDX	access:public
NQFDBUNIDX::next	nqfdb.h	/^	struct NQFDBUNIDX* next;$/;"	m	struct:NQFDBUNIDX	typeref:struct:NQFDBUNIDX::NQFDBUNIDX	access:public
NQFDBUNIDX::prev	nqfdb.h	/^	struct NQFDBUNIDX* prev;$/;"	m	struct:NQFDBUNIDX	typeref:struct:NQFDBUNIDX::NQFDBUNIDX	access:public
NQFOREACH	nqutil.h	/^typedef void (*NQFOREACH) (char*, void*, void*);$/;"	t
NQFPAIR	nqfdb.c	/^} NQFPAIR;$/;"	t	typeref:struct:__anon7	file:
NQFUSERDATA	nqfdb.c	/^} NQFUSERDATA;$/;"	t	typeref:struct:__anon8	file:
NQOPELIKE	nqqry.h	/^	NQOPELIKE		\/* object is exact like (exhausted search) *\/$/;"	e	enum:__anon16
NQOPLIKE	nqqry.h	/^	NQOPLIKE,		\/* object is like (index search)           *\/$/;"	e	enum:__anon16
NQOPNUMEQ	nqqry.h	/^	NQOPNUMEQ,		\/* number is equal to                      *\/$/;"	e	enum:__anon16
NQOPNUMGE	nqqry.h	/^	NQOPNUMGE,		\/* number is greater than or equal to      *\/$/;"	e	enum:__anon16
NQOPNUMGT	nqqry.h	/^	NQOPNUMGT,		\/* number is greater than                  *\/$/;"	e	enum:__anon16
NQOPNUMLE	nqqry.h	/^	NQOPNUMLE,		\/* number is less than or equal to         *\/$/;"	e	enum:__anon16
NQOPNUMLT	nqqry.h	/^	NQOPNUMLT,		\/* number is less than                     *\/$/;"	e	enum:__anon16
NQOPSTREQ	nqqry.h	/^	NQOPSTREQ,		\/* string is equal to                      *\/$/;"	e	enum:__anon16
NQQRY	nqqry.h	/^typedef struct NQQRY {$/;"	s
NQQRY	nqqry.h	/^} NQQRY;$/;"	t	typeref:struct:NQQRY
NQQRY::__anon14::desc	nqqry.h	/^		CvMat* desc;$/;"	m	union:NQQRY::__anon14	access:public
NQQRY::__anon14::fl	nqqry.h	/^		float fl;$/;"	m	union:NQQRY::__anon14	access:public
NQQRY::__anon14::i	nqqry.h	/^		int i;$/;"	m	union:NQQRY::__anon14	access:public
NQQRY::__anon14::str	nqqry.h	/^		char* str;$/;"	m	union:NQQRY::__anon14	access:public
NQQRY::cfd	nqqry.h	/^	float cfd;$/;"	m	struct:NQQRY	access:public
NQQRY::cnum	nqqry.h	/^	int cnum;$/;"	m	struct:NQQRY	access:public
NQQRY::col	nqqry.h	/^	void* col;$/;"	m	struct:NQQRY	access:public
NQQRY::conds	nqqry.h	/^	NQQRY** conds;$/;"	m	struct:NQQRY	access:public
NQQRY::db	nqqry.h	/^	void* db;$/;"	m	struct:NQQRY	access:public
NQQRY::ext	nqqry.h	/^	int ext;$/;"	m	struct:NQQRY	access:public
NQQRY::lmt	nqqry.h	/^	int lmt;$/;"	m	struct:NQQRY	access:public
NQQRY::op	nqqry.h	/^	int op;$/;"	m	struct:NQQRY	access:public
NQQRY::ordered	nqqry.h	/^	int ordered;$/;"	m	struct:NQQRY	access:public
NQQRY::result	nqqry.h	/^	NQRDB* result;$/;"	m	struct:NQQRY	access:public
NQQRY::sbj	nqqry.h	/^	} sbj;$/;"	m	struct:NQQRY	typeref:union:NQQRY::__anon14	access:public
NQQRY::type	nqqry.h	/^	int type;$/;"	m	struct:NQQRY	access:public
NQQRYPAIR	nqqry.c	/^} NQQRYPAIR;$/;"	t	typeref:struct:__anon12	file:
NQQRYUSERDATA	nqqry.c	/^} NQQRYUSERDATA;$/;"	t	typeref:struct:__anon13	file:
NQRDB	nqrdb.h	/^} NQRDB;$/;"	t	typeref:struct:__anon11
NQRDBDATUM	nqrdb.h	/^typedef struct NQRDBDATUM {$/;"	s
NQRDBDATUM	nqrdb.h	/^} NQRDBDATUM;$/;"	t	typeref:struct:NQRDBDATUM
NQRDBDATUM::chd	nqrdb.h	/^	NQRDBDATUM** chd;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::dirty	nqrdb.h	/^	bool dirty;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::ht	nqrdb.h	/^	uint8_t ht;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::kint	nqrdb.h	/^	uint32_t kint[4];$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::max	nqrdb.h	/^	uint32_t max;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::next	nqrdb.h	/^	NQRDBDATUM* next;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::pr	nqrdb.h	/^	NQRDBDATUM* pr;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::prev	nqrdb.h	/^	NQRDBDATUM* prev;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::rnum	nqrdb.h	/^	uint32_t rnum;$/;"	m	struct:NQRDBDATUM	access:public
NQRDBDATUM::vbuf	nqrdb.h	/^	void* vbuf;$/;"	m	struct:NQRDBDATUM	access:public
NQTBWDB	nqqry.h	/^	NQTBWDB,		\/* bwdb type               *\/$/;"	e	enum:__anon15
NQTFDB	nqqry.h	/^	NQTFDB,			\/* fdb type                *\/$/;"	e	enum:__anon15
NQTRDB	nqqry.h	/^	NQTRDB,			\/* rdb type                *\/$/;"	e	enum:__anon15
NQTSPHINX	nqqry.h	/^	NQTSPHINX		\/* sphinx full-text search *\/$/;"	e	enum:__anon15
NQTTCTDB	nqqry.h	/^	NQTTCTDB,		\/* tokyo-cabinet table db  *\/$/;"	e	enum:__anon15
NQTTCWDB	nqqry.h	/^	NQTTCWDB,		\/* tokyo-cabinet word db   *\/$/;"	e	enum:__anon15
OPENCV	test/makefile	/^OPENCV=\/opt\/opencv$/;"	m
OUTDIR	test/makefile	/^OUTDIR=..\/..\/build$/;"	m
QRY_MAX_LMT	nqqry.h	12;"	d
REJECT	parser/lex.yy.c	456;"	d	file:
SIZEOF_APR_UINT32_T	lib/frl_base.h	/^const apr_uint32_t SIZEOF_APR_UINT32_T = sizeof(apr_uint32_t);$/;"	v
SIZEOF_FRL_MD5	lib/frl_util_md5.h	/^const unsigned int SIZEOF_FRL_MD5 = sizeof(frl_md5);$/;"	v
SIZEOF_FRL_MEM_SAFE_T	lib/frl_slab_pool.h	/^const apr_uint32_t SIZEOF_FRL_MEM_SAFE_T = sizeof(frl_mem_safe_t);$/;"	v
SIZEOF_FRL_MEM_STAT_T	lib/frl_slab_pool.h	/^const apr_uint32_t SIZEOF_FRL_MEM_STAT_T = sizeof(frl_mem_stat_t);$/;"	v
SIZEOF_FRL_MEM_T	lib/frl_slab_pool.h	/^const apr_uint32_t SIZEOF_FRL_MEM_T = sizeof(frl_mem_t);$/;"	v
SIZEOF_FRL_SLAB_BLOCK_T	lib/frl_slab_pool.h	/^const apr_uint32_t SIZEOF_FRL_SLAB_BLOCK_T = sizeof(frl_slab_block_t);$/;"	v
SIZEOF_FRL_SLAB_POOL_T	lib/frl_slab_pool.h	/^const apr_uint32_t SIZEOF_FRL_SLAB_POOL_T = sizeof(frl_slab_pool_t);$/;"	v
SIZEOF_POINTER	lib/frl_base.h	/^const apr_uint32_t SIZEOF_POINTER = sizeof(void*);$/;"	v
UINT16_MAX	parser/lex.yy.c	80;"	d	file:
UINT32_MAX	parser/lex.yy.c	83;"	d	file:
UINT8_MAX	parser/lex.yy.c	77;"	d	file:
YYSTATE	parser/lex.yy.c	132;"	d	file:
YYTABLES_NAME	parser/lex.yy.c	1753;"	d	file:
YY_AT_BOL	parser/lex.yy.c	339;"	d	file:
YY_BREAK	parser/lex.yy.c	637;"	d	file:
YY_BUFFER_EOF_PENDING	parser/lex.yy.c	255;"	d	file:
YY_BUFFER_NEW	parser/lex.yy.c	243;"	d	file:
YY_BUFFER_NORMAL	parser/lex.yy.c	244;"	d	file:
YY_BUFFER_STATE	parser/lex.yy.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	parser/lex.yy.c	149;"	d	file:
YY_BUF_SIZE	parser/lex.yy.c	151;"	d	file:
YY_CHAR	parser/lex.yy.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	parser/lex.yy.c	271;"	d	file:
YY_CURRENT_BUFFER_LVALUE	parser/lex.yy.c	278;"	d	file:
YY_DECL	parser/lex.yy.c	625;"	d	file:
YY_DECL_IS_OURS	parser/lex.yy.c	621;"	d	file:
YY_DO_BEFORE_ACTION	parser/lex.yy.c	364;"	d	file:
YY_END_OF_BUFFER	parser/lex.yy.c	372;"	d	file:
YY_END_OF_BUFFER_CHAR	parser/lex.yy.c	140;"	d	file:
YY_EXIT_FAILURE	parser/lex.yy.c	1551;"	d	file:
YY_EXTRA_TYPE	parser/lex.yy.c	477;"	d	file:
YY_FATAL_ERROR	parser/lex.yy.c	612;"	d	file:
YY_FLEX_MAJOR_VERSION	parser/lex.yy.c	9;"	d	file:
YY_FLEX_MINOR_VERSION	parser/lex.yy.c	10;"	d	file:
YY_FLEX_SUBMINOR_VERSION	parser/lex.yy.c	11;"	d	file:
YY_FLUSH_BUFFER	parser/lex.yy.c	307;"	d	file:
YY_INPUT	parser/lex.yy.c	565;"	d	file:
YY_INT_ALIGNED	parser/lex.yy.c	4;"	d	file:
YY_LESS_LINENO	parser/lex.yy.c	172;"	d	file:
YY_MORE_ADJ	parser/lex.yy.c	458;"	d	file:
YY_NEW_FILE	parser/lex.yy.c	138;"	d	file:
YY_NULL	parser/lex.yy.c	112;"	d	file:
YY_NUM_RULES	parser/lex.yy.c	371;"	d	file:
YY_READ_BUF_SIZE	parser/lex.yy.c	547;"	d	file:
YY_READ_BUF_SIZE	parser/lex.yy.c	549;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	parser/lex.yy.c	459;"	d	file:
YY_RULE_SETUP	parser/lex.yy.c	640;"	d	file:
YY_SC_TO_UI	parser/lex.yy.c	119;"	d	file:
YY_START	parser/lex.yy.c	131;"	d	file:
YY_START_STACK_INCR	parser/lex.yy.c	607;"	d	file:
YY_STATE_BUF_SIZE	parser/lex.yy.c	157;"	d	file:
YY_STATE_EOF	parser/lex.yy.c	135;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	parser/lex.yy.c	196;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	parser/lex.yy.c	160;"	d	file:
YY_TYPEDEF_YY_SIZE_T	parser/lex.yy.c	191;"	d	file:
YY_USER_ACTION	parser/lex.yy.c	632;"	d	file:
YY_USE_CONST	parser/lex.yy.c	100;"	d	file:
YY_USE_CONST	parser/lex.yy.c	93;"	d	file:
_GUARD_NQBWDB_	nqbwdb.h	7;"	d
_GUARD_NQDP_	nqdp.h	7;"	d
_GUARD_NQFDB_	nqfdb.h	7;"	d
_GUARD_NQGS_	nqgs.h	7;"	d
_GUARD_NQIR_	nqir.h	7;"	d
_GUARD_NQLH_	nqlh.h	7;"	d
_GUARD_NQQRY_	nqqry.h	7;"	d
_GUARD_NQRDB_	nqrdb.h	7;"	d
_GUARD_NQUTIL_	nqutil.h	2;"	d
__STDC_LIMIT_MACROS	parser/lex.yy.c	39;"	d	file:
__anon10::idx	nqfdb.h	/^	NQFDBIDX* idx;$/;"	m	struct:__anon10	access:public
__anon10::inum	nqfdb.h	/^	uint32_t inum;$/;"	m	struct:__anon10	access:public
__anon10::rdb	nqfdb.h	/^	NQRDB* rdb;$/;"	m	struct:__anon10	access:public
__anon10::rwidxlock	nqfdb.h	/^	apr_thread_rwlock_t* rwidxlock;$/;"	m	struct:__anon10	access:public
__anon10::rwunidxlock	nqfdb.h	/^	apr_thread_rwlock_t* rwunidxlock;$/;"	m	struct:__anon10	access:public
__anon10::shadow	nqfdb.h	/^	bool shadow;$/;"	m	struct:__anon10	access:public
__anon10::unidx	nqfdb.h	/^	NQFDBUNIDX* unidx;$/;"	m	struct:__anon10	access:public
__anon10::unum	nqfdb.h	/^	uint32_t unum;$/;"	m	struct:__anon10	access:public
__anon11::head	nqrdb.h	/^	NQRDBDATUM* head;$/;"	m	struct:__anon11	access:public
__anon11::rnum	nqrdb.h	/^	uint64_t rnum;$/;"	m	struct:__anon11	access:public
__anon11::rwlock	nqrdb.h	/^	apr_thread_rwlock_t* rwlock;$/;"	m	struct:__anon11	access:public
__anon12::kstr	nqqry.c	/^	char* kstr;$/;"	m	struct:__anon12	file:	access:public
__anon12::likeness	nqqry.c	/^	float likeness;$/;"	m	struct:__anon12	file:	access:public
__anon13::data	nqqry.c	/^	NQQRYPAIR data[0];$/;"	m	struct:__anon13	file:	access:public
__anon13::siz	nqqry.c	/^	uint32_t siz;$/;"	m	struct:__anon13	file:	access:public
__anon2::kstr	nqbwdb.c	/^	char* kstr;$/;"	m	struct:__anon2	file:	access:public
__anon2::likeness	nqbwdb.c	/^	float likeness;$/;"	m	struct:__anon2	file:	access:public
__anon3::bwdb	nqbwdb.c	/^	NQBWDB* bwdb;$/;"	m	struct:__anon3	file:	access:public
__anon3::bwm	nqbwdb.c	/^	CvMat* bwm;$/;"	m	struct:__anon3	file:	access:public
__anon3::data	nqbwdb.c	/^	NQBWPAIR data[0];$/;"	m	struct:__anon3	file:	access:public
__anon3::dist	nqbwdb.c	/^	CvMat* dist;$/;"	m	struct:__anon3	file:	access:public
__anon3::emax	nqbwdb.c	/^	uint32_t emax;$/;"	m	struct:__anon3	file:	access:public
__anon3::idx	nqbwdb.c	/^	CvMat* idx;$/;"	m	struct:__anon3	file:	access:public
__anon3::match	nqbwdb.c	/^	double match;$/;"	m	struct:__anon3	file:	access:public
__anon3::siz	nqbwdb.c	/^	uint32_t siz;$/;"	m	struct:__anon3	file:	access:public
__anon4::desc	nqbwdb.h	/^	CvMat desc;$/;"	m	struct:__anon4	access:public
__anon4::idf	nqbwdb.h	/^	float idf;$/;"	m	struct:__anon4	access:public
__anon4::kstr	nqbwdb.h	/^	char** kstr;$/;"	m	struct:__anon4	access:public
__anon4::rnum	nqbwdb.h	/^	uint32_t rnum;$/;"	m	struct:__anon4	access:public
__anon5::bw	nqbwdb.h	/^	CvMat* bw;$/;"	m	struct:__anon5	access:public
__anon5::bwft	nqbwdb.h	/^	CvFeatureTree* bwft;$/;"	m	struct:__anon5	access:public
__anon6::emax	nqbwdb.h	/^	uint32_t emax;$/;"	m	struct:__anon6	access:public
__anon6::idx	nqbwdb.h	/^	NQBWDBIDX* idx;$/;"	m	struct:__anon6	access:public
__anon6::inum	nqbwdb.h	/^	uint32_t inum;$/;"	m	struct:__anon6	access:public
__anon6::rdb	nqbwdb.h	/^	NQRDB* rdb;$/;"	m	struct:__anon6	access:public
__anon6::rwidxlock	nqbwdb.h	/^	apr_thread_rwlock_t* rwidxlock;$/;"	m	struct:__anon6	access:public
__anon6::rwunidxlock	nqbwdb.h	/^	apr_thread_rwlock_t* rwunidxlock;$/;"	m	struct:__anon6	access:public
__anon6::shadow	nqbwdb.h	/^	bool shadow;$/;"	m	struct:__anon6	access:public
__anon6::unidx	nqbwdb.h	/^	NQBWDBUNIDX* unidx;$/;"	m	struct:__anon6	access:public
__anon6::unum	nqbwdb.h	/^	uint32_t unum;$/;"	m	struct:__anon6	access:public
__anon6::wnum	nqbwdb.h	/^	uint32_t wnum;$/;"	m	struct:__anon6	access:public
__anon7::kstr	nqfdb.c	/^	char* kstr;$/;"	m	struct:__anon7	file:	access:public
__anon7::likeness	nqfdb.c	/^	float likeness;$/;"	m	struct:__anon7	file:	access:public
__anon8::data	nqfdb.c	/^	NQFPAIR data[0];$/;"	m	struct:__anon8	file:	access:public
__anon8::fm	nqfdb.c	/^	CvMat* fm;$/;"	m	struct:__anon8	file:	access:public
__anon8::siz	nqfdb.c	/^	uint32_t siz;$/;"	m	struct:__anon8	file:	access:public
__anon9::f	nqfdb.h	/^	CvMat* f;$/;"	m	struct:__anon9	access:public
_dispatch_mat_ptr	nqutil.c	4;"	d	file:
arena	lib/frl_slab_pool.h	/^	apr_byte_t* arena;$/;"	m	struct:frl_slab_block_t	access:public
b16_pool	nqrdb.c	/^static frl_slab_pool_t* b16_pool = 0;$/;"	v	file:
b2_pool	nqrdb.c	/^static frl_slab_pool_t* b2_pool = 0;$/;"	v	file:
b6_pool	nqrdb.c	/^static frl_slab_pool_t* b6_pool = 0;$/;"	v	file:
base64_decode	lib/frl_util_md5.cpp	/^int frl_md5::base64_decode(const apr_byte_t* x)$/;"	f	class:frl_md5	signature:(const apr_byte_t* x)
base64_decode	lib/frl_util_md5.h	/^		int base64_decode(const apr_byte_t* x);$/;"	p	class:frl_md5	access:public	signature:(const apr_byte_t* x)
base64_encode	lib/frl_util_md5.cpp	/^int frl_md5::base64_encode(apr_byte_t* q)$/;"	f	class:frl_md5	signature:(apr_byte_t* q)
base64_encode	lib/frl_util_md5.h	/^		int base64_encode(apr_byte_t* q);$/;"	p	class:frl_md5	access:public	signature:(apr_byte_t* q)
base64_index	lib/frl_util_md5.cpp	/^inline unsigned long long base64_index(const apr_byte_t& x)$/;"	f	signature:(const apr_byte_t& x)
base64table	lib/frl_util_md5.cpp	/^const apr_byte_t base64table[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";$/;"	v
block	lib/frl_slab_pool.h	/^	frl_slab_block_t* block;$/;"	m	struct:frl_mem_t	access:public
block	lib/frl_slab_pool.h	/^	frl_slab_block_t* block;$/;"	m	struct:frl_slab_pool_t	access:public
block_size	lib/frl_slab_pool.h	/^	apr_uint32_t block_size;$/;"	m	struct:frl_mem_stat_t	access:public
bw	nqbwdb.h	/^	CvMat* bw;$/;"	m	struct:__anon5	access:public
bwdb	nqbwdb.c	/^	NQBWDB* bwdb;$/;"	m	struct:__anon3	file:	access:public
bwft	nqbwdb.h	/^	CvFeatureTree* bwft;$/;"	m	struct:__anon5	access:public
bwm	nqbwdb.c	/^	CvMat* bwm;$/;"	m	struct:__anon3	file:	access:public
capacity	lib/frl_slab_pool.h	/^	apr_uint32_t capacity;$/;"	m	struct:frl_mem_stat_t	access:public
capacity	lib/frl_slab_pool.h	/^	apr_uint32_t capacity;$/;"	m	struct:frl_slab_block_t	access:public
cfd	nqqry.h	/^	float cfd;$/;"	m	struct:NQQRY	access:public
chd	nqrdb.h	/^	NQRDBDATUM** chd;$/;"	m	struct:NQRDBDATUM	access:public
clear	lib/mlapcluster.cpp	/^CvAPCluster::clear()$/;"	f	class:CvAPCluster	signature:()
clear	lib/mlapcluster.h	/^		virtual void clear();$/;"	p	class:CvAPCluster	access:public	signature:()
cnum	nqqry.h	/^	int cnum;$/;"	m	struct:NQQRY	access:public
col	nqqry.h	/^	void* col;$/;"	m	struct:NQQRY	access:public
conds	nqqry.h	/^	NQQRY** conds;$/;"	m	struct:NQQRY	access:public
conv_img	lib/cvgist.h	/^	CvMat* conv_img;$/;"	m	struct:CvGaborFilter	access:public
conv_real	lib/cvgist.h	/^	CvMat* conv_real;$/;"	m	struct:CvGaborFilter	access:public
cvCalcGist	lib/cvgist.cpp	/^cvCalcGist( float* gist,$/;"	f	signature:( float* gist, const CvArr* _img, CvGaborFilter* gabors, int gabor_n )
cvCalcGist	lib/cvgist.h	/^void cvCalcGist( float* gist, const CvArr* _img, CvGaborFilter* gabors, int gabor_n );$/;"	p	signature:( float* gist, const CvArr* _img, CvGaborFilter* gabors, int gabor_n )
cvCalcLocalHist	lib/cvlocalhist.cpp	/^cvCalcLocalHist( CvArr* _img,$/;"	f	signature:( CvArr* _img, int* hists, const int bins )
cvCalcLocalHist	lib/cvlocalhist.h	/^void cvCalcLocalHist(CvArr* _img, int* hists, const int bins);$/;"	p	signature:(CvArr* _img, int* hists, const int bins)
cvCompareGist	lib/cvgist.cpp	/^cvCompareGist( float* gist_a,$/;"	f	signature:( float* gist_a, float* gist_b, int length )
cvCompareGist	lib/cvgist.h	/^float cvCompareGist( float* gist_a, float* gist_b, int length );$/;"	p	signature:( float* gist_a, float* gist_b, int length )
cvCompareLocalHist	lib/cvlocalhist.cpp	/^cvCompareLocalHist( int* hist_a,$/;"	f	signature:( int* hist_a, int* hist_b, int length )
cvCompareLocalHist	lib/cvlocalhist.h	/^float cvCompareLocalHist(int* hist_a, int* hist_b, int length);$/;"	p	signature:(int* hist_a, int* hist_b, int length)
cvCreateGaborFilters	lib/cvgist.cpp	/^cvCreateGaborFilters( int orientations,$/;"	f	signature:( int orientations, int scales, int size )
cvCreateGaborFilters	lib/cvgist.h	/^CvGaborFilter* cvCreateGaborFilters( int orientations, int scales, int size );$/;"	p	signature:( int orientations, int scales, int size )
cvReleaseGaborFilters	lib/cvgist.cpp	/^cvReleaseGaborFilters( CvGaborFilter** gabors,$/;"	f	signature:( CvGaborFilter** gabors, int gabor_n )
cvReleaseGaborFilters	lib/cvgist.h	/^void cvReleaseGaborFilters( CvGaborFilter** gabors, int gabor_n );$/;"	p	signature:( CvGaborFilter** gabors, int gabor_n )
data	nqbwdb.c	/^	NQBWPAIR data[0];$/;"	m	struct:__anon3	file:	access:public
data	nqfdb.c	/^	NQFPAIR data[0];$/;"	m	struct:__anon8	file:	access:public
data	nqfdb.h	/^	NQFDBDATUM** data;$/;"	m	struct:NQFDBIDX	access:public
data	nqqry.c	/^	NQQRYPAIR data[0];$/;"	m	struct:__anon13	file:	access:public
datum	nqbwdb.h	/^	NQBWDBDATUM* datum;$/;"	m	struct:NQBWDBUNIDX	access:public
datum	nqfdb.h	/^	NQFDBDATUM* datum;$/;"	m	struct:NQFDBUNIDX	access:public
db	nqqry.h	/^	void* db;$/;"	m	struct:NQQRY	access:public
db_pool	nqbwdb.c	/^static frl_slab_pool_t* db_pool = 0;$/;"	v	file:
db_pool	nqfdb.c	/^static frl_slab_pool_t* db_pool = 0;$/;"	v	file:
db_pool	nqrdb.c	/^static frl_slab_pool_t* db_pool = 0;$/;"	v	file:
desc	nqbwdb.h	/^	CvMat desc;$/;"	m	struct:__anon4	access:public
desc	nqqry.h	/^		CvMat* desc;$/;"	m	union:NQQRY::__anon14	access:public
digest	lib/frl_util_md5.h	/^			apr_byte_t digest[16];$/;"	m	union:frl_md5::__anon1	access:public
dirty	nqrdb.h	/^	bool dirty;$/;"	m	struct:NQRDBDATUM	access:public
dist	nqbwdb.c	/^	CvMat* dist;$/;"	m	struct:__anon3	file:	access:public
dt_pool	nqbwdb.c	/^static frl_slab_pool_t* dt_pool = 0;$/;"	v	file:
dt_pool	nqfdb.c	/^static frl_slab_pool_t* dt_pool = 0;$/;"	v	file:
emax	nqbwdb.c	/^	uint32_t emax;$/;"	m	struct:__anon3	file:	access:public
emax	nqbwdb.h	/^	uint32_t emax;$/;"	m	struct:__anon6	access:public
ext	nqqry.h	/^	int ext;$/;"	m	struct:NQQRY	access:public
f	nqfdb.h	/^	CvMat* f;$/;"	m	struct:NQFDBIDX	access:public
f	nqfdb.h	/^	CvMat* f;$/;"	m	struct:__anon9	access:public
fl	nqqry.h	/^		float fl;$/;"	m	union:NQQRY::__anon14	access:public
flag	lib/frl_slab_pool.h	/^	apr_uint32_t flag;$/;"	m	struct:frl_mem_safe_t	access:public
flex_int16_t	parser/lex.yy.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	parser/lex.yy.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	parser/lex.yy.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	parser/lex.yy.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	parser/lex.yy.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	parser/lex.yy.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	parser/lex.yy.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	parser/lex.yy.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	parser/lex.yy.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	parser/lex.yy.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	parser/lex.yy.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	parser/lex.yy.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
fm	nqfdb.c	/^	CvMat* fm;$/;"	m	struct:__anon8	file:	access:public
frl_insert_u	lib/frl_base.h	/^enum frl_insert_u$/;"	g
frl_level_u	lib/frl_base.h	/^enum frl_level_u$/;"	g
frl_lock_u	lib/frl_base.h	/^enum frl_lock_u$/;"	g
frl_md5	lib/frl_util_md5.h	/^		frl_md5()$/;"	f	class:frl_md5	access:public	signature:()
frl_md5	lib/frl_util_md5.h	/^		frl_md5(const apr_byte_t* x)$/;"	f	class:frl_md5	access:public	signature:(const apr_byte_t* x)
frl_md5	lib/frl_util_md5.h	/^		frl_md5(const void* s, const apr_size_t size)$/;"	f	class:frl_md5	access:public	signature:(const void* s, const apr_size_t size)
frl_md5	lib/frl_util_md5.h	/^class frl_md5$/;"	c
frl_md5::__anon1::digest	lib/frl_util_md5.h	/^			apr_byte_t digest[16];$/;"	m	union:frl_md5::__anon1	access:public
frl_md5::__anon1::uid	lib/frl_util_md5.h	/^			apr_uint64_t uid[2];$/;"	m	union:frl_md5::__anon1	access:public
frl_md5::base64_decode	lib/frl_util_md5.cpp	/^int frl_md5::base64_decode(const apr_byte_t* x)$/;"	f	class:frl_md5	signature:(const apr_byte_t* x)
frl_md5::base64_decode	lib/frl_util_md5.h	/^		int base64_decode(const apr_byte_t* x);$/;"	p	class:frl_md5	access:public	signature:(const apr_byte_t* x)
frl_md5::base64_encode	lib/frl_util_md5.cpp	/^int frl_md5::base64_encode(apr_byte_t* q)$/;"	f	class:frl_md5	signature:(apr_byte_t* q)
frl_md5::base64_encode	lib/frl_util_md5.h	/^		int base64_encode(apr_byte_t* q);$/;"	p	class:frl_md5	access:public	signature:(apr_byte_t* q)
frl_md5::frl_md5	lib/frl_util_md5.h	/^		frl_md5()$/;"	f	class:frl_md5	access:public	signature:()
frl_md5::frl_md5	lib/frl_util_md5.h	/^		frl_md5(const apr_byte_t* x)$/;"	f	class:frl_md5	access:public	signature:(const apr_byte_t* x)
frl_md5::frl_md5	lib/frl_util_md5.h	/^		frl_md5(const void* s, const apr_size_t size)$/;"	f	class:frl_md5	access:public	signature:(const void* s, const apr_size_t size)
frl_md5::hash	lib/frl_util_md5.cpp	/^int frl_md5::hash(const void* s, const apr_size_t size)$/;"	f	class:frl_md5	signature:(const void* s, const apr_size_t size)
frl_md5::hash	lib/frl_util_md5.h	/^		int hash(const void* s, const apr_size_t size);$/;"	p	class:frl_md5	access:public	signature:(const void* s, const apr_size_t size)
frl_mem_safe_t	lib/frl_slab_pool.h	/^struct frl_mem_safe_t$/;"	s
frl_mem_safe_t::flag	lib/frl_slab_pool.h	/^	apr_uint32_t flag;$/;"	m	struct:frl_mem_safe_t	access:public
frl_mem_stat_t	lib/frl_slab_pool.h	/^struct frl_mem_stat_t$/;"	s
frl_mem_stat_t::block_size	lib/frl_slab_pool.h	/^	apr_uint32_t block_size;$/;"	m	struct:frl_mem_stat_t	access:public
frl_mem_stat_t::capacity	lib/frl_slab_pool.h	/^	apr_uint32_t capacity;$/;"	m	struct:frl_mem_stat_t	access:public
frl_mem_stat_t::per_size	lib/frl_slab_pool.h	/^	apr_uint32_t per_size;$/;"	m	struct:frl_mem_stat_t	access:public
frl_mem_stat_t::usage	lib/frl_slab_pool.h	/^	apr_size_t usage;$/;"	m	struct:frl_mem_stat_t	access:public
frl_mem_t	lib/frl_slab_pool.h	/^struct frl_mem_t$/;"	s
frl_mem_t::block	lib/frl_slab_pool.h	/^	frl_slab_block_t* block;$/;"	m	struct:frl_mem_t	access:public
frl_mem_t::id	lib/frl_slab_pool.h	/^	apr_uint32_t id;$/;"	m	struct:frl_mem_t	access:public
frl_mem_t::pointer	lib/frl_slab_pool.h	/^	void* pointer;$/;"	m	struct:frl_mem_t	access:public
frl_memory_u	lib/frl_base.h	/^enum frl_memory_u$/;"	g
frl_slab_block_t	lib/frl_slab_pool.h	/^struct frl_slab_block_t$/;"	s
frl_slab_block_t::arena	lib/frl_slab_pool.h	/^	apr_byte_t* arena;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_block_t::capacity	lib/frl_slab_pool.h	/^	apr_uint32_t capacity;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_block_t::next	lib/frl_slab_pool.h	/^	frl_slab_block_t* next;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_block_t::pool	lib/frl_slab_pool.h	/^	frl_slab_pool_t* pool;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_block_t::stack_pointer	lib/frl_slab_pool.h	/^	apr_byte_t** stack_pointer;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_block_t::usage_stack	lib/frl_slab_pool.h	/^	apr_byte_t** usage_stack;$/;"	m	struct:frl_slab_block_t	access:public
frl_slab_palloc	lib/frl_slab_pool.c	/^APR_DECLARE(void*) frl_slab_palloc(frl_slab_pool_t* pool)$/;"	f	signature:(frl_slab_pool_t* pool)
frl_slab_palloc_lock_free	lib/frl_slab_pool.c	/^APR_DECLARE(void*) frl_slab_palloc_lock_free(frl_slab_pool_t* pool)$/;"	f	signature:(frl_slab_pool_t* pool)
frl_slab_palloc_lock_with	lib/frl_slab_pool.c	/^APR_DECLARE(void*) frl_slab_palloc_lock_with(frl_slab_pool_t* pool)$/;"	f	signature:(frl_slab_pool_t* pool)
frl_slab_pcalloc	lib/frl_slab_pool.c	/^APR_DECLARE(void*) frl_slab_pcalloc(frl_slab_pool_t* pool)$/;"	f	signature:(frl_slab_pool_t* pool)
frl_slab_pfree	lib/frl_slab_pool.c	/^APR_DECLARE(void) frl_slab_pfree(void* pointer)$/;"	f	signature:(void* pointer)
frl_slab_pfree_lock_free	lib/frl_slab_pool.c	/^APR_DECLARE(void) frl_slab_pfree_lock_free(void* pointer)$/;"	f	signature:(void* pointer)
frl_slab_pfree_lock_with	lib/frl_slab_pool.c	/^APR_DECLARE(void) frl_slab_pfree_lock_with(void* pointer)$/;"	f	signature:(void* pointer)
frl_slab_pool_clear	lib/frl_slab_pool.c	/^APR_DECLARE(void) frl_slab_pool_clear(frl_slab_pool_t* pool)$/;"	f	signature:(frl_slab_pool_t* pool)
frl_slab_pool_t	lib/frl_slab_pool.h	/^struct frl_slab_pool_t$/;"	s
frl_slab_pool_t::block	lib/frl_slab_pool.h	/^	frl_slab_block_t* block;$/;"	m	struct:frl_slab_pool_t	access:public
frl_slab_pool_t::lock	lib/frl_slab_pool.h	/^	frl_lock_u lock;$/;"	m	struct:frl_slab_pool_t	access:public
frl_slab_pool_t::max_capacity	lib/frl_slab_pool.h	/^	apr_uint32_t max_capacity;$/;"	m	struct:frl_slab_pool_t	access:public
frl_slab_pool_t::mutex	lib/frl_slab_pool.h	/^	apr_thread_mutex_t* mutex;$/;"	m	struct:frl_slab_pool_t	access:public
frl_slab_pool_t::per_size	lib/frl_slab_pool.h	/^	apr_uint32_t per_size;$/;"	m	struct:frl_slab_pool_t	access:public
frl_thread_model_u	lib/frl_base.h	/^enum frl_thread_model_u$/;"	g
ft	nqfdb.h	/^	CvFeatureTree* ft;$/;"	m	struct:NQFDBIDX	access:public
gabors	nqgs.c	/^static CvGaborFilter* gabors = cvCreateGaborFilters(6, 4, 48);$/;"	v	file:
hash	lib/frl_util_md5.cpp	/^int frl_md5::hash(const void* s, const apr_size_t size)$/;"	f	class:frl_md5	signature:(const void* s, const apr_size_t size)
hash	lib/frl_util_md5.h	/^		int hash(const void* s, const apr_size_t size);$/;"	p	class:frl_md5	access:public	signature:(const void* s, const apr_size_t size)
head	nqrdb.h	/^	NQRDBDATUM* head;$/;"	m	struct:__anon11	access:public
ht	nqrdb.h	/^	uint8_t ht;$/;"	m	struct:NQRDBDATUM	access:public
i	lib/mlapcluster.cpp	/^	int i;$/;"	m	struct:CvSparseNode2D	file:	access:public
i	nqqry.h	/^		int i;$/;"	m	union:NQQRY::__anon14	access:public
icvCalcHist	lib/cvlocalhist.cpp	/^icvCalcHist( IplImage* img,$/;"	f	signature:( IplImage* img, int* hist, const int length, const CvRect rect )
icvCompareHist	lib/cvlocalhist.cpp	/^icvCompareHist( int *hist1,$/;"	f	signature:( int *hist1, int *hist2, const int length )
icvHistProjection	lib/cvlocalhist.cpp	/^icvHistProjection( CvArr* _img,$/;"	f	signature:( CvArr* _img, int bins, int* v_hist = NULL, int* h_hist = NULL )
icvSplitScan	lib/cvlocalhist.cpp	/^icvSplitScan( int *scanline,$/;"	f	signature:( int *scanline, const int length, const int width, const int start, const int end, const int lock_position, const double lock )
id	lib/frl_slab_pool.h	/^	apr_uint32_t id;$/;"	m	struct:frl_mem_t	access:public
idf	nqbwdb.h	/^	float idf;$/;"	m	struct:__anon4	access:public
idx	nqbwdb.c	/^	CvMat* idx;$/;"	m	struct:__anon3	file:	access:public
idx	nqbwdb.h	/^	NQBWDBIDX* idx;$/;"	m	struct:__anon6	access:public
idx	nqfdb.h	/^	NQFDBIDX* idx;$/;"	m	struct:__anon10	access:public
idx_pool	nqbwdb.c	/^static frl_slab_pool_t* idx_pool = 0;$/;"	v	file:
idx_pool	nqfdb.c	/^static frl_slab_pool_t* idx_pool = 0;$/;"	v	file:
input	parser/lex.yy.c	/^static int input (void );$/;"	p	file:	signature:(void )
inum	nqbwdb.h	/^	uint32_t inum;$/;"	m	struct:NQBWDBIDX	access:public
inum	nqbwdb.h	/^	uint32_t inum;$/;"	m	struct:__anon6	access:public
inum	nqfdb.h	/^	uint32_t inum;$/;"	m	struct:NQFDBIDX	access:public
inum	nqfdb.h	/^	uint32_t inum;$/;"	m	struct:__anon10	access:public
isatty	parser/lex.yy.c	/^extern int isatty (int );$/;"	p	file:	signature:(int )
k	lib/mlapcluster.cpp	/^	int k;$/;"	m	struct:CvSparseNode2D	file:	access:public
kint	nqrdb.h	/^	uint32_t kint[4];$/;"	m	struct:NQRDBDATUM	access:public
kmatch	nqrdb.c	/^inline bool kmatch(uint32_t* kstr1, uint32_t* kstr2, uint32_t k)$/;"	f	signature:(uint32_t* kstr1, uint32_t* kstr2, uint32_t k)
kstr	nqbwdb.c	/^	char* kstr;$/;"	m	struct:__anon2	file:	access:public
kstr	nqbwdb.h	/^	char* kstr;$/;"	m	struct:NQBWDBUNIDX	access:public
kstr	nqbwdb.h	/^	char** kstr;$/;"	m	struct:NQBWDBIDX	access:public
kstr	nqbwdb.h	/^	char** kstr;$/;"	m	struct:__anon4	access:public
kstr	nqfdb.c	/^	char* kstr;$/;"	m	struct:__anon7	file:	access:public
kstr	nqfdb.h	/^	char* kstr;$/;"	m	struct:NQFDBUNIDX	access:public
kstr	nqfdb.h	/^	char** kstr;$/;"	m	struct:NQFDBIDX	access:public
kstr	nqqry.c	/^	char* kstr;$/;"	m	struct:__anon12	file:	access:public
kstr_pool	nqbwdb.c	/^static frl_slab_pool_t* kstr_pool = 0;$/;"	v	file:
kstr_pool	nqfdb.c	/^static frl_slab_pool_t* kstr_pool = 0;$/;"	v	file:
lambda	lib/mlapcluster.h	/^	double lambda;$/;"	m	struct:CvAPCParams	access:public
likeness	nqbwdb.c	/^	float likeness;$/;"	m	struct:__anon2	file:	access:public
likeness	nqfdb.c	/^	float likeness;$/;"	m	struct:__anon7	file:	access:public
likeness	nqqry.c	/^	float likeness;$/;"	m	struct:__anon12	file:	access:public
lmt	nqqry.h	/^	int lmt;$/;"	m	struct:NQQRY	access:public
lock	lib/frl_slab_pool.h	/^	frl_lock_u lock;$/;"	m	struct:frl_slab_pool_t	access:public
main	parser/lex.yy.c	/^int main()$/;"	f
main	test/cx_test.cpp	/^int main()$/;"	f	signature:()
main	test/dpdb_test.cpp	/^int main()$/;"	f	signature:()
main	test/eplr_test.cpp	/^int main()$/;"	f	signature:()
main	test/gs_test.cpp	/^int main()$/;"	f	signature:()
main	test/idx_test.cpp	/^int main()$/;"	f	signature:()
main	test/irdb_test.cpp	/^int main()$/;"	f	signature:()
main	test/lh_test.cpp	/^int main()$/;"	f	signature:()
main	test/qry_test.cpp	/^int main()$/;"	f	signature:()
main	test/rdb_test.cpp	/^int main()$/;"	f	signature:()
match	nqbwdb.c	/^	double match;$/;"	m	struct:__anon3	file:	access:public
match	nqbwdb.h	/^	double match;$/;"	m	struct:NQBWDBIDX	access:public
max	nqrdb.h	/^	uint32_t max;$/;"	m	struct:NQRDBDATUM	access:public
max_capacity	lib/frl_slab_pool.h	/^	apr_uint32_t max_capacity;$/;"	m	struct:frl_slab_pool_t	access:public
maxiteration	lib/mlapcluster.h	/^	int maxiteration;$/;"	m	struct:CvAPCParams	access:public
mempool	test/cx_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/dpdb_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/gs_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/idx_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/irdb_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/lh_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/qry_test.cpp	/^apr_pool_t* mempool;$/;"	v
mempool	test/rdb_test.cpp	/^apr_pool_t* mempool;$/;"	v
mtx_pool	nqbwdb.c	/^static apr_pool_t* mtx_pool = 0;$/;"	v	file:
mtx_pool	nqfdb.c	/^static apr_pool_t* mtx_pool = 0;$/;"	v	file:
mtx_pool	nqqry.c	/^static apr_pool_t* mtx_pool = 0;$/;"	v	file:
mtx_pool	nqrdb.c	/^static apr_pool_t* mtx_pool = 0;$/;"	v	file:
mutex	lib/frl_slab_pool.h	/^	apr_thread_mutex_t* mutex;$/;"	m	struct:frl_slab_pool_t	access:public
next	lib/frl_slab_pool.h	/^	frl_slab_block_t* next;$/;"	m	struct:frl_slab_block_t	access:public
next	nqbwdb.h	/^	struct NQBWDBIDX* next;$/;"	m	struct:NQBWDBIDX	typeref:struct:NQBWDBIDX::NQBWDBIDX	access:public
next	nqbwdb.h	/^	struct NQBWDBUNIDX* next;$/;"	m	struct:NQBWDBUNIDX	typeref:struct:NQBWDBUNIDX::NQBWDBUNIDX	access:public
next	nqfdb.h	/^	struct NQFDBIDX* next;$/;"	m	struct:NQFDBIDX	typeref:struct:NQFDBIDX::NQFDBIDX	access:public
next	nqfdb.h	/^	struct NQFDBUNIDX* next;$/;"	m	struct:NQFDBUNIDX	typeref:struct:NQFDBUNIDX::NQFDBUNIDX	access:public
next	nqrdb.h	/^	NQRDBDATUM* next;$/;"	m	struct:NQRDBDATUM	access:public
nqbwcx	nqbwdb.c	/^static void nqbwcx(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwdbdel	nqbwdb.c	/^void nqbwdbdel(NQBWDB* bwdb)$/;"	f	signature:(NQBWDB* bwdb)
nqbwdbdel	nqbwdb.h	/^void nqbwdbdel(NQBWDB* bwdb);$/;"	p	signature:(NQBWDB* bwdb)
nqbwdbget	nqbwdb.c	/^CvMat* nqbwdbget(NQBWDB* bwdb, char* kstr)$/;"	f	signature:(NQBWDB* bwdb, char* kstr)
nqbwdbget	nqbwdb.h	/^CvMat* nqbwdbget(NQBWDB* bwdb, char* kstr);$/;"	p	signature:(NQBWDB* bwdb, char* kstr)
nqbwdbidx	nqbwdb.c	/^bool nqbwdbidx(NQBWDB* bwdb, int min, double match)$/;"	f	signature:(NQBWDB* bwdb, int min, double match)
nqbwdbidx	nqbwdb.h	/^bool nqbwdbidx(NQBWDB* bwdb, int min = 1, double match = 0.6);$/;"	p	signature:(NQBWDB* bwdb, int min = 1, double match = 0.6)
nqbwdbjoin	nqbwdb.c	/^NQBWDB* nqbwdbjoin(NQBWDB* bwdb, NQRDB* rdb)$/;"	f	signature:(NQBWDB* bwdb, NQRDB* rdb)
nqbwdbjoin	nqbwdb.c	/^NQBWDB* nqbwdbjoin(NQBWDB* bwdb, char** kstr, int len)$/;"	f	signature:(NQBWDB* bwdb, char** kstr, int len)
nqbwdbjoin	nqbwdb.h	/^NQBWDB* nqbwdbjoin(NQBWDB* bwdb, NQRDB* rdb);$/;"	p	signature:(NQBWDB* bwdb, NQRDB* rdb)
nqbwdbjoin	nqbwdb.h	/^NQBWDB* nqbwdbjoin(NQBWDB* bwdb, char** kstr, int len);$/;"	p	signature:(NQBWDB* bwdb, char** kstr, int len)
nqbwdblike	nqbwdb.c	/^int nqbwdblike(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, int mode, double match, bool ordered, float* likeness)$/;"	f	signature:(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, int mode, double match, bool ordered, float* likeness)
nqbwdblike	nqbwdb.h	/^int nqbwdblike(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, int mode = NQBW_LIKE_BEST_MATCH_COUNT, double match = 0.6, bool ordered = false, float* likeness = 0);$/;"	p	signature:(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, int mode = NQBW_LIKE_BEST_MATCH_COUNT, double match = 0.6, bool ordered = false, float* likeness = 0)
nqbwdbmgidx	nqbwdb.c	/^bool nqbwdbmgidx(NQBWDB* bwdb, int max, int min, double match)$/;"	f	signature:(NQBWDB* bwdb, int max, int min, double match)
nqbwdbmgidx	nqbwdb.h	/^bool nqbwdbmgidx(NQBWDB* bwdb, int max, int min = 1, double match = 0.6);$/;"	p	signature:(NQBWDB* bwdb, int max, int min = 1, double match = 0.6)
nqbwdbnew	nqbwdb.c	/^NQBWDB* nqbwdbnew(void)$/;"	f	signature:(void)
nqbwdbnew	nqbwdb.h	/^NQBWDB* nqbwdbnew(void);$/;"	p	signature:(void)
nqbwdbout	nqbwdb.c	/^bool nqbwdbout(NQBWDB* bwdb, char* kstr)$/;"	f	signature:(NQBWDB* bwdb, char* kstr)
nqbwdbout	nqbwdb.h	/^bool nqbwdbout(NQBWDB* bwdb, char* kstr);$/;"	p	signature:(NQBWDB* bwdb, char* kstr)
nqbwdbput	nqbwdb.c	/^bool nqbwdbput(NQBWDB* bwdb, char* kstr, CvMat* bwm)$/;"	f	signature:(NQBWDB* bwdb, char* kstr, CvMat* bwm)
nqbwdbput	nqbwdb.h	/^bool nqbwdbput(NQBWDB* bwdb, char* kstr, CvMat* bwm);$/;"	p	signature:(NQBWDB* bwdb, char* kstr, CvMat* bwm)
nqbwdbreidx	nqbwdb.c	/^bool nqbwdbreidx(NQBWDB* bwdb, int min, double match)$/;"	f	signature:(NQBWDB* bwdb, int min, double match)
nqbwdbreidx	nqbwdb.h	/^bool nqbwdbreidx(NQBWDB* bwdb, int min = 1, double match = 0.6);$/;"	p	signature:(NQBWDB* bwdb, int min = 1, double match = 0.6)
nqbwdbsearch	nqbwdb.c	/^int nqbwdbsearch(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, bool ordered, float* likeness)$/;"	f	signature:(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, bool ordered, float* likeness)
nqbwdbsearch	nqbwdb.h	/^int nqbwdbsearch(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, bool ordered = false, float* likeness = 0);$/;"	p	signature:(NQBWDB* bwdb, CvMat* bwm, char** kstr, int lmt, bool ordered = false, float* likeness = 0)
nqbweplr	nqbwdb.c	/^CvMat* nqbweplr(CvMat* data, int e, int emax)$/;"	f	signature:(CvMat* data, int e, int emax)
nqbweplr	nqbwdb.h	/^CvMat* nqbweplr(CvMat* data, int e = 5, int emax = 50);$/;"	p	signature:(CvMat* data, int e = 5, int emax = 50)
nqbwfwmc	nqbwdb.c	/^static void nqbwfwmc(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwfwms	nqbwdb.c	/^static void nqbwfwms(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwhpf	nqbwdb.c	/^static void nqbwhpf(NQBWPAIR* pr, uint32_t i, uint32_t siz)$/;"	f	file:	signature:(NQBWPAIR* pr, uint32_t i, uint32_t siz)
nqbwidxclr	nqbwdb.c	/^static void nqbwidxclr(NQBWDB* bwdb)$/;"	f	file:	signature:(NQBWDB* bwdb)
nqbwnuk	nqbwdb.c	/^static void nqbwnuk(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwrefr	nqbwdb.c	/^static void nqbwrefr(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwsort	nqbwdb.c	/^static void nqbwsort(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqbwunidxclr	nqbwdb.c	/^static void nqbwunidxclr(NQBWDB* bwdb)$/;"	f	file:	signature:(NQBWDB* bwdb)
nqdpnew	nqdp.c	/^CvMat* nqdpnew(CvArr* image, CvSURFParams params)$/;"	f	signature:(CvArr* image, CvSURFParams params)
nqdpnew	nqdp.h	/^CvMat* nqdpnew(CvArr* image, CvSURFParams params);$/;"	p	signature:(CvArr* image, CvSURFParams params)
nqeplr	nqutil.c	/^int nqeplr(CvMat* data, int* ki, int k)$/;"	f	signature:(CvMat* data, int* ki, int k)
nqeplr	nqutil.c	/^int nqeplr(CvSparseMat* sim, int* ki, int t, int k)$/;"	f	signature:(CvSparseMat* sim, int* ki, int t, int k)
nqeplr	nqutil.h	/^int nqeplr(CvMat* data, int* ki, int k = 0);$/;"	p	signature:(CvMat* data, int* ki, int k = 0)
nqeplr	nqutil.h	/^int nqeplr(CvSparseMat* sim, int* ki, int t, int k);$/;"	p	signature:(CvSparseMat* sim, int* ki, int t, int k)
nqfcx	nqfdb.c	/^static void nqfcx(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqfdbdel	nqfdb.c	/^void nqfdbdel(NQFDB* fdb)$/;"	f	signature:(NQFDB* fdb)
nqfdbdel	nqfdb.h	/^void nqfdbdel(NQFDB* fdb);$/;"	p	signature:(NQFDB* fdb)
nqfdbget	nqfdb.c	/^CvMat* nqfdbget(NQFDB* fdb, char* kstr)$/;"	f	signature:(NQFDB* fdb, char* kstr)
nqfdbget	nqfdb.h	/^CvMat* nqfdbget(NQFDB* fdb, char* kstr);$/;"	p	signature:(NQFDB* fdb, char* kstr)
nqfdbidx	nqfdb.c	/^bool nqfdbidx(NQFDB* fdb, int naive, double rho, double tau)$/;"	f	signature:(NQFDB* fdb, int naive, double rho, double tau)
nqfdbidx	nqfdb.h	/^bool nqfdbidx(NQFDB* fdb, int naive = 2, double rho = 0.75, double tau = 0.2);$/;"	p	signature:(NQFDB* fdb, int naive = 2, double rho = 0.75, double tau = 0.2)
nqfdbjoin	nqfdb.c	/^NQFDB* nqfdbjoin(NQFDB* fdb, NQRDB* rdb)$/;"	f	signature:(NQFDB* fdb, NQRDB* rdb)
nqfdbjoin	nqfdb.c	/^NQFDB* nqfdbjoin(NQFDB* fdb, char** kstr, int len)$/;"	f	signature:(NQFDB* fdb, char** kstr, int len)
nqfdbjoin	nqfdb.h	/^NQFDB* nqfdbjoin(NQFDB* fdb, NQRDB* rdb);$/;"	p	signature:(NQFDB* fdb, NQRDB* rdb)
nqfdbjoin	nqfdb.h	/^NQFDB* nqfdbjoin(NQFDB* fdb, char** kstr, int len);$/;"	p	signature:(NQFDB* fdb, char** kstr, int len)
nqfdblike	nqfdb.c	/^int nqfdblike(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered, float* likeness)$/;"	f	signature:(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered, float* likeness)
nqfdblike	nqfdb.h	/^int nqfdblike(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered = false, float* likeness = 0);$/;"	p	signature:(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered = false, float* likeness = 0)
nqfdbnew	nqfdb.c	/^NQFDB* nqfdbnew(void)$/;"	f	signature:(void)
nqfdbnew	nqfdb.h	/^NQFDB* nqfdbnew(void);$/;"	p	signature:(void)
nqfdbout	nqfdb.c	/^bool nqfdbout(NQFDB* fdb, char* kstr)$/;"	f	signature:(NQFDB* fdb, char* kstr)
nqfdbout	nqfdb.h	/^bool nqfdbout(NQFDB* fdb, char* kstr);$/;"	p	signature:(NQFDB* fdb, char* kstr)
nqfdbput	nqfdb.c	/^bool nqfdbput(NQFDB* fdb, char* kstr, CvMat* fm)$/;"	f	signature:(NQFDB* fdb, char* kstr, CvMat* fm)
nqfdbput	nqfdb.h	/^bool nqfdbput(NQFDB* fdb, char* kstr, CvMat* fm);$/;"	p	signature:(NQFDB* fdb, char* kstr, CvMat* fm)
nqfdbreidx	nqfdb.c	/^bool nqfdbreidx(NQFDB* fdb, int naive, double rho, double tau)$/;"	f	signature:(NQFDB* fdb, int naive, double rho, double tau)
nqfdbreidx	nqfdb.h	/^bool nqfdbreidx(NQFDB* fdb, int naive = 2, double rho = 0.75, double tau = 0.2);$/;"	p	signature:(NQFDB* fdb, int naive = 2, double rho = 0.75, double tau = 0.2)
nqfdbsearch	nqfdb.c	/^int nqfdbsearch(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered, float* likeness)$/;"	f	signature:(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered, float* likeness)
nqfdbsearch	nqfdb.h	/^int nqfdbsearch(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered = false, float* likeness = 0);$/;"	p	signature:(NQFDB* fdb, CvMat* fm, char** kstr, int lmt, bool ordered = false, float* likeness = 0)
nqffwm	nqfdb.c	/^static void nqffwm(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqfhpf	nqfdb.c	/^static void nqfhpf(NQFPAIR* pr, uint32_t i, uint32_t siz)$/;"	f	file:	signature:(NQFPAIR* pr, uint32_t i, uint32_t siz)
nqfidxclr	nqfdb.c	/^static void nqfidxclr(NQFDB* fdb)$/;"	f	file:	signature:(NQFDB* fdb)
nqfnuk	nqfdb.c	/^static void nqfnuk(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqfrefr	nqfdb.c	/^static void nqfrefr(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqfunidxclr	nqfdb.c	/^static void nqfunidxclr(NQFDB* fdb)$/;"	f	file:	signature:(NQFDB* fdb)
nqgsnew	nqgs.c	/^CvMat* nqgsnew(CvArr* image, int n)$/;"	f	signature:(CvArr* image, int n)
nqgsnew	nqgs.h	/^CvMat* nqgsnew(CvArr* image, int n);$/;"	p	signature:(CvArr* image, int n)
nqirnew	nqir.c	/^CvMat* nqirnew(CvArr* image, CvMSERParams params)$/;"	f	signature:(CvArr* image, CvMSERParams params)
nqirnew	nqir.h	/^CvMat* nqirnew(CvArr* image, CvMSERParams params);$/;"	p	signature:(CvArr* image, CvMSERParams params)
nqlhnew	nqlh.c	/^CvMat* nqlhnew(CvArr* image, int bins)$/;"	f	signature:(CvArr* image, int bins)
nqlhnew	nqlh.h	/^CvMat* nqlhnew(CvArr* image, int bins);$/;"	p	signature:(CvArr* image, int bins)
nqqrydel	nqqry.c	/^void nqqrydel(NQQRY* qry)$/;"	f	signature:(NQQRY* qry)
nqqrydel	nqqry.h	/^void nqqrydel(NQQRY* qry);$/;"	p	signature:(NQQRY* qry)
nqqrydump	nqqry.c	/^void* nqqrydump(NQQRY* qry, int* sp)$/;"	f	signature:(NQQRY* qry, int* sp)
nqqrydump	nqqry.h	/^void* nqqrydump(NQQRY* qry, int* sp);$/;"	p	signature:(NQQRY* qry, int* sp)
nqqrydumpcount	nqqry.c	/^static int nqqrydumpcount(NQQRY* qry)$/;"	f	file:	signature:(NQQRY* qry)
nqqrydumpcpy	nqqry.c	/^static bool nqqrydumpcpy(NQQRY* qry, char* mem)$/;"	f	file:	signature:(NQQRY* qry, char* mem)
nqqryhpf	nqqry.c	/^static void nqqryhpf(NQQRYPAIR* pr, uint32_t i, uint32_t siz)$/;"	f	file:	signature:(NQQRYPAIR* pr, uint32_t i, uint32_t siz)
nqqrynew	nqqry.c	/^NQQRY* nqqrynew(void)$/;"	f	signature:(void)
nqqrynew	nqqry.c	/^NQQRY* nqqrynew(void* mem)$/;"	f	signature:(void* mem)
nqqrynew	nqqry.h	/^NQQRY* nqqrynew(void);$/;"	p	signature:(void)
nqqrynew	nqqry.h	/^NQQRY* nqqrynew(void* mem);$/;"	p	signature:(void* mem)
nqqryresult	nqqry.c	/^int nqqryresult(NQQRY* qry, char** kstr, float* likeness)$/;"	f	signature:(NQQRY* qry, char** kstr, float* likeness)
nqqryresult	nqqry.h	/^int nqqryresult(NQQRY* qry, char** kstr, float* likeness = 0);$/;"	p	signature:(NQQRY* qry, char** kstr, float* likeness = 0)
nqqrysearch	nqqry.c	/^NQRDB* nqqrysearch(NQQRY* qry)$/;"	f	signature:(NQQRY* qry)
nqqrysearch	nqqry.h	/^NQRDB* nqqrysearch(NQQRY* qry);$/;"	p	signature:(NQQRY* qry)
nqqrysort	nqqry.c	/^static void nqqrysort(char* kstr, void* vbuf, void* ud)$/;"	f	file:	signature:(char* kstr, void* vbuf, void* ud)
nqrdbclear	nqrdb.c	/^static void nqrdbclear(NQRDB* rdb)$/;"	f	file:	signature:(NQRDB* rdb)
nqrdbclear	nqrdb.c	/^static void nqrdbclear(NQRDB* rdb);$/;"	p	file:	signature:(NQRDB* rdb)
nqrdbdel	nqrdb.c	/^void nqrdbdel(NQRDB* rdb)$/;"	f	signature:(NQRDB* rdb)
nqrdbdel	nqrdb.h	/^void nqrdbdel(NQRDB* rdb);$/;"	p	signature:(NQRDB* rdb)
nqrdbfilter	nqrdb.c	/^bool nqrdbfilter(NQRDB* rdb, char** kstr, int len)$/;"	f	signature:(NQRDB* rdb, char** kstr, int len)
nqrdbfilter	nqrdb.h	/^bool nqrdbfilter(NQRDB* rdb, char** kstr, int len);$/;"	p	signature:(NQRDB* rdb, char** kstr, int len)
nqrdbforeach	nqrdb.c	/^bool nqrdbforeach(NQRDB* rdb, NQFOREACH op, void* ud)$/;"	f	signature:(NQRDB* rdb, NQFOREACH op, void* ud)
nqrdbforeach	nqrdb.h	/^bool nqrdbforeach(NQRDB* rdb, NQFOREACH op, void* ud);$/;"	p	signature:(NQRDB* rdb, NQFOREACH op, void* ud)
nqrdbget	nqrdb.c	/^void* nqrdbget(NQRDB* rdb, char* kstr)$/;"	f	signature:(NQRDB* rdb, char* kstr)
nqrdbget	nqrdb.h	/^void* nqrdbget(NQRDB* rdb, char* kstr);$/;"	p	signature:(NQRDB* rdb, char* kstr)
nqrdbgetdatum	nqrdb.c	/^inline static NQRDBDATUM* nqrdbgetdatum(NQRDB* rdb, uint32_t* kint)$/;"	f	file:	signature:(NQRDB* rdb, uint32_t* kint)
nqrdbirt	nqrdb.c	/^static NQRDBDATUM* nqrdbirt(NQRDB* rdb, NQRDBDATUM* rec, uint8_t ht, uint32_t i, uint32_t* kint, void* vbuf)$/;"	f	file:	signature:(NQRDB* rdb, NQRDBDATUM* rec, uint8_t ht, uint32_t i, uint32_t* kint, void* vbuf)
nqrdbnew	nqrdb.c	/^NQRDB* nqrdbnew(void)$/;"	f	signature:(void)
nqrdbnew	nqrdb.h	/^NQRDB* nqrdbnew(void);$/;"	p	signature:(void)
nqrdbout	nqrdb.c	/^bool nqrdbout(NQRDB* rdb, char* kstr)$/;"	f	signature:(NQRDB* rdb, char* kstr)
nqrdbout	nqrdb.h	/^bool nqrdbout(NQRDB* rdb, char* kstr);$/;"	p	signature:(NQRDB* rdb, char* kstr)
nqrdboutdatum	nqrdb.c	/^inline static NQRDBDATUM* nqrdboutdatum(NQRDB* rdb, NQRDBDATUM* rec)$/;"	f	file:	signature:(NQRDB* rdb, NQRDBDATUM* rec)
nqrdbput	nqrdb.c	/^bool nqrdbput(NQRDB* rdb, char* kstr, void* vbuf)$/;"	f	signature:(NQRDB* rdb, char* kstr, void* vbuf)
nqrdbput	nqrdb.c	/^int nqrdbput(NQRDB* rdb, char** kstr, void** vbuf, int len)$/;"	f	signature:(NQRDB* rdb, char** kstr, void** vbuf, int len)
nqrdbput	nqrdb.h	/^bool nqrdbput(NQRDB* rdb, char* kstr, void* vbuf);$/;"	p	signature:(NQRDB* rdb, char* kstr, void* vbuf)
nqrdbput	nqrdb.h	/^int nqrdbput(NQRDB* rdb, char** kstr, void** vbuf, int len);$/;"	p	signature:(NQRDB* rdb, char** kstr, void** vbuf, int len)
op	nqqry.h	/^	int op;$/;"	m	struct:NQQRY	access:public
operator !=	lib/frl_util_md5.h	/^inline bool operator!=(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
operator <	lib/frl_util_md5.h	/^inline bool operator<(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
operator <=	lib/frl_util_md5.h	/^inline bool operator<=(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
operator ==	lib/frl_util_md5.h	/^inline bool operator==(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
operator >	lib/frl_util_md5.h	/^inline bool operator>(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
operator >=	lib/frl_util_md5.h	/^inline bool operator>=(const frl_md5& x, const frl_md5& y)$/;"	f	signature:(const frl_md5& x, const frl_md5& y)
ordered	nqqry.h	/^	int ordered;$/;"	m	struct:NQQRY	access:public
orientation	lib/cvgist.h	/^	int orientation;$/;"	m	struct:CvGaborFilter	access:public
p	nqfdb.h	/^	CvMat* p;$/;"	m	struct:NQFDBIDX	access:public
params	lib/mlapcluster.h	/^		CvAPCParams params;$/;"	m	class:CvAPCluster	access:private
per_size	lib/frl_slab_pool.h	/^	apr_uint32_t per_size;$/;"	m	struct:frl_mem_stat_t	access:public
per_size	lib/frl_slab_pool.h	/^	apr_uint32_t per_size;$/;"	m	struct:frl_slab_pool_t	access:public
pointer	lib/frl_slab_pool.h	/^	void* pointer;$/;"	m	struct:frl_mem_t	access:public
pool	lib/frl_slab_pool.h	/^	frl_slab_pool_t* pool;$/;"	m	struct:frl_slab_block_t	access:public
pool	lib/frl_slab_pool.h	/^APR_DECLARE(apr_status_t) frl_slab_pool_destroy(frl_slab_pool_t* pool);$/;"	v
pool	lib/frl_slab_pool.h	/^APR_DECLARE(apr_status_t) frl_slab_pool_safe(frl_slab_pool_t* pool);$/;"	v
pool	lib/frl_slab_pool.h	/^APR_DECLARE(frl_mem_stat_t) frl_slab_pool_stat(frl_slab_pool_t* pool);$/;"	v
pool	lib/frl_slab_pool.h	/^APR_DECLARE(void) frl_slab_pool_clear(frl_slab_pool_t* pool);$/;"	v
pool	lib/frl_slab_pool.h	/^APR_DECLARE(void*) frl_slab_palloc(frl_slab_pool_t* pool);$/;"	v
pool	lib/frl_slab_pool.h	/^APR_DECLARE(void*) frl_slab_pcalloc(frl_slab_pool_t* pool);$/;"	v
pr	nqrdb.h	/^	NQRDBDATUM* pr;$/;"	m	struct:NQRDBDATUM	access:public
prev	nqbwdb.h	/^	struct NQBWDBIDX* prev;$/;"	m	struct:NQBWDBIDX	typeref:struct:NQBWDBIDX::NQBWDBIDX	access:public
prev	nqbwdb.h	/^	struct NQBWDBUNIDX* prev;$/;"	m	struct:NQBWDBUNIDX	typeref:struct:NQBWDBUNIDX::NQBWDBUNIDX	access:public
prev	nqfdb.h	/^	struct NQFDBIDX* prev;$/;"	m	struct:NQFDBIDX	typeref:struct:NQFDBIDX::NQFDBIDX	access:public
prev	nqfdb.h	/^	struct NQFDBUNIDX* prev;$/;"	m	struct:NQFDBUNIDX	typeref:struct:NQFDBUNIDX::NQFDBUNIDX	access:public
prev	nqrdb.h	/^	NQRDBDATUM* prev;$/;"	m	struct:NQRDBDATUM	access:public
qry_pool	nqqry.c	/^static frl_slab_pool_t* qry_pool = 0;$/;"	v	file:
rdb	nqbwdb.h	/^	NQRDB* rdb;$/;"	m	struct:__anon6	access:public
rdb	nqfdb.h	/^	NQRDB* rdb;$/;"	m	struct:__anon10	access:public
read	lib/mlapcluster.cpp	/^CvAPCluster::read( CvFileStorage* fs,$/;"	f	class:CvAPCluster	signature:( CvFileStorage* fs, CvFileNode* root_node )
read	lib/mlapcluster.h	/^		virtual void read( CvFileStorage* fs, CvFileNode* root_node );$/;"	p	class:CvAPCluster	access:public	signature:( CvFileStorage* fs, CvFileNode* root_node )
rec_pool	nqrdb.c	/^static frl_slab_pool_t* rec_pool = 0;$/;"	v	file:
result	nqqry.h	/^	NQRDB* result;$/;"	m	struct:NQQRY	access:public
rnum	nqbwdb.h	/^	uint32_t rnum;$/;"	m	struct:NQBWDBIDX	access:public
rnum	nqbwdb.h	/^	uint32_t rnum;$/;"	m	struct:__anon4	access:public
rnum	nqrdb.h	/^	uint32_t rnum;$/;"	m	struct:NQRDBDATUM	access:public
rnum	nqrdb.h	/^	uint64_t rnum;$/;"	m	struct:__anon11	access:public
rwidxlock	nqbwdb.h	/^	apr_thread_rwlock_t* rwidxlock;$/;"	m	struct:__anon6	access:public
rwidxlock	nqfdb.h	/^	apr_thread_rwlock_t* rwidxlock;$/;"	m	struct:__anon10	access:public
rwlock	nqrdb.h	/^	apr_thread_rwlock_t* rwlock;$/;"	m	struct:__anon11	access:public
rwunidxlock	nqbwdb.h	/^	apr_thread_rwlock_t* rwunidxlock;$/;"	m	struct:__anon6	access:public
rwunidxlock	nqfdb.h	/^	apr_thread_rwlock_t* rwunidxlock;$/;"	m	struct:__anon10	access:public
sbj	nqqry.h	/^	} sbj;$/;"	m	struct:NQQRY	typeref:union:NQQRY::__anon14	access:public
scale	lib/cvgist.h	/^	int scale;$/;"	m	struct:CvGaborFilter	access:public
shadow	nqbwdb.h	/^	bool shadow;$/;"	m	struct:__anon6	access:public
shadow	nqfdb.h	/^	bool shadow;$/;"	m	struct:__anon10	access:public
siz	nqbwdb.c	/^	uint32_t siz;$/;"	m	struct:__anon3	file:	access:public
siz	nqfdb.c	/^	uint32_t siz;$/;"	m	struct:__anon8	file:	access:public
siz	nqqry.c	/^	uint32_t siz;$/;"	m	struct:__anon13	file:	access:public
size	lib/cvgist.h	/^	int size;$/;"	m	struct:CvGaborFilter	access:public
smft	nqbwdb.h	/^	CvFeatureTree* smft;$/;"	m	struct:NQBWDBIDX	access:public
smmat	nqbwdb.h	/^	CvMat* smmat;$/;"	m	struct:NQBWDBIDX	access:public
stack_pointer	lib/frl_slab_pool.h	/^	apr_byte_t** stack_pointer;$/;"	m	struct:frl_slab_block_t	access:public
stem	nqbwdb.h	/^	NQBWDBSTEM* stem;$/;"	m	struct:NQBWDBIDX	access:public
stopcriterion	lib/mlapcluster.h	/^	int stopcriterion;$/;"	m	struct:CvAPCParams	access:public
storage	nqdp.c	/^static CvMemStorage* storage = 0;$/;"	v	file:
storage	nqir.c	/^static CvMemStorage* storage = 0;$/;"	v	file:
str	nqqry.h	/^		char* str;$/;"	m	union:NQQRY::__anon14	access:public
sumup	test/rdb_test.cpp	/^void sumup(char* kstr, void* data, void* ud)$/;"	f	signature:(char* kstr, void* data, void* ud)
tabid	lib/cvlocalhist.cpp	/^int tabid[256];$/;"	v
train	lib/mlapcluster.cpp	/^CvAPCluster::train( const CvSparseMat* similarity,$/;"	f	class:CvAPCluster	signature:( const CvSparseMat* similarity, const CvMat* labels )
train	lib/mlapcluster.cpp	/^bool CvAPCluster::train( const CvMat* similarity,$/;"	f	class:CvAPCluster	signature:( const CvMat* similarity, const CvMat* labels )
train	lib/mlapcluster.h	/^		virtual bool train( const CvMat* _train_data, const CvMat* _response );$/;"	p	class:CvAPCluster	access:public	signature:( const CvMat* _train_data, const CvMat* _response )
train	lib/mlapcluster.h	/^		virtual bool train( const CvSparseMat* _train_data, const CvMat* _response );$/;"	p	class:CvAPCluster	access:public	signature:( const CvSparseMat* _train_data, const CvMat* _response )
type	nqqry.h	/^	int type;$/;"	m	struct:NQQRY	access:public
uid	lib/frl_util_md5.h	/^			apr_uint64_t uid[2];$/;"	m	union:frl_md5::__anon1	access:public
unidx	nqbwdb.h	/^	NQBWDBUNIDX* unidx;$/;"	m	struct:__anon6	access:public
unidx	nqfdb.h	/^	NQFDBUNIDX* unidx;$/;"	m	struct:__anon10	access:public
unidx_pool	nqbwdb.c	/^static frl_slab_pool_t* unidx_pool = 0;$/;"	v	file:
unidx_pool	nqfdb.c	/^static frl_slab_pool_t* unidx_pool = 0;$/;"	v	file:
unput	parser/lex.yy.c	188;"	d	file:
unum	nqbwdb.h	/^	uint32_t unum;$/;"	m	struct:__anon6	access:public
unum	nqfdb.h	/^	uint32_t unum;$/;"	m	struct:__anon10	access:public
usage	lib/frl_slab_pool.h	/^	apr_size_t usage;$/;"	m	struct:frl_mem_stat_t	access:public
usage_stack	lib/frl_slab_pool.h	/^	apr_byte_t** usage_stack;$/;"	m	struct:frl_slab_block_t	access:public
val	lib/mlapcluster.cpp	/^	double val;$/;"	m	struct:CvSparseNode2D	file:	access:public
vbuf	nqrdb.h	/^	void* vbuf;$/;"	m	struct:NQRDBDATUM	access:public
wnum	nqbwdb.h	/^	uint32_t wnum;$/;"	m	struct:__anon6	access:public
wordCount	parser/lex.yy.c	/^	int wordCount = 0;$/;"	v
write	lib/mlapcluster.cpp	/^CvAPCluster::write( CvFileStorage* fs,$/;"	f	class:CvAPCluster	signature:( CvFileStorage* fs, const char* name )
write	lib/mlapcluster.h	/^		virtual void write( CvFileStorage* fs, const char* name );$/;"	p	class:CvAPCluster	access:public	signature:( CvFileStorage* fs, const char* name )
yy_accept	parser/lex.yy.c	/^static yyconst flex_int16_t yy_accept[14] =$/;"	v	file:
yy_at_bol	parser/lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_base	parser/lex.yy.c	/^static yyconst flex_int16_t yy_base[17] =$/;"	v	file:
yy_bs_column	parser/lex.yy.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_bs_lineno	parser/lex.yy.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buf_pos	parser/lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buf_size	parser/lex.yy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_stack	parser/lex.yy.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	parser/lex.yy.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	parser/lex.yy.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	parser/lex.yy.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_state::yy_at_bol	parser/lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_bs_column	parser/lex.yy.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_bs_lineno	parser/lex.yy.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_pos	parser/lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_size	parser/lex.yy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buffer_status	parser/lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_ch_buf	parser/lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_fill_buffer	parser/lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_input_file	parser/lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_interactive	parser/lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_our_buffer	parser/lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_n_chars	parser/lex.yy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_status	parser/lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_c_buf_p	parser/lex.yy.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	parser/lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_chk	parser/lex.yy.c	/^static yyconst flex_int16_t yy_chk[21] =$/;"	v	file:
yy_create_buffer	parser/lex.yy.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f	signature:(FILE * file, int size )
yy_create_buffer	parser/lex.yy.c	/^YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );$/;"	p	file:	signature:(FILE *file,int size )
yy_def	parser/lex.yy.c	/^static yyconst flex_int16_t yy_def[17] =$/;"	v	file:
yy_delete_buffer	parser/lex.yy.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f	signature:(YY_BUFFER_STATE b )
yy_delete_buffer	parser/lex.yy.c	/^void yy_delete_buffer (YY_BUFFER_STATE b  );$/;"	p	file:	signature:(YY_BUFFER_STATE b )
yy_did_buffer_switch_on_eof	parser/lex.yy.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	parser/lex.yy.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	parser/lex.yy.c	/^static void yy_fatal_error (yyconst char msg[]  );$/;"	p	file:	signature:(yyconst char msg[] )
yy_fatal_error	parser/lex.yy.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:	signature:(yyconst char* msg )
yy_fill_buffer	parser/lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_flex_debug	parser/lex.yy.c	/^int yy_flex_debug = 0;$/;"	v
yy_flex_strlen	parser/lex.yy.c	/^static int yy_flex_strlen (yyconst char * );$/;"	p	file:	signature:(yyconst char * )
yy_flex_strlen	parser/lex.yy.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:	signature:(yyconst char * s )
yy_flex_strncpy	parser/lex.yy.c	/^static void yy_flex_strncpy (char *,yyconst char *,int );$/;"	p	file:	signature:(char *,yyconst char *,int )
yy_flex_strncpy	parser/lex.yy.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:	signature:(char* s1, yyconst char * s2, int n )
yy_flush_buffer	parser/lex.yy.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f	signature:(YY_BUFFER_STATE b )
yy_flush_buffer	parser/lex.yy.c	/^void yy_flush_buffer (YY_BUFFER_STATE b  );$/;"	p	file:	signature:(YY_BUFFER_STATE b )
yy_get_next_buffer	parser/lex.yy.c	/^static int yy_get_next_buffer (void );$/;"	p	file:	signature:(void )
yy_get_next_buffer	parser/lex.yy.c	/^static int yy_get_next_buffer (void)$/;"	f	file:	signature:(void)
yy_get_previous_state	parser/lex.yy.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:	signature:(void)
yy_get_previous_state	parser/lex.yy.c	/^static yy_state_type yy_get_previous_state (void );$/;"	p	file:	signature:(void )
yy_hold_char	parser/lex.yy.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	parser/lex.yy.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	parser/lex.yy.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:	signature:(YY_BUFFER_STATE b, FILE * file )
yy_init_buffer	parser/lex.yy.c	/^static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );$/;"	p	file:	signature:(YY_BUFFER_STATE b,FILE *file )
yy_init_globals	parser/lex.yy.c	/^static int yy_init_globals (void );$/;"	p	file:	signature:(void )
yy_init_globals	parser/lex.yy.c	/^static int yy_init_globals (void)$/;"	f	file:	signature:(void)
yy_input_file	parser/lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_interactive	parser/lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_our_buffer	parser/lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_last_accepting_cpos	parser/lex.yy.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	parser/lex.yy.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	parser/lex.yy.c	/^static void yy_load_buffer_state  (void)$/;"	f	file:	signature:(void)
yy_load_buffer_state	parser/lex.yy.c	/^static void yy_load_buffer_state (void );$/;"	p	file:	signature:(void )
yy_meta	parser/lex.yy.c	/^static yyconst flex_int32_t yy_meta[6] =$/;"	v	file:
yy_n_chars	parser/lex.yy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_n_chars	parser/lex.yy.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	parser/lex.yy.c	317;"	d	file:
yy_nxt	parser/lex.yy.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:	access:public
yy_nxt	parser/lex.yy.c	/^static yyconst flex_int16_t yy_nxt[21] =$/;"	v	file:
yy_scan_buffer	parser/lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f	signature:(char * base, yy_size_t size )
yy_scan_buffer	parser/lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );$/;"	p	file:	signature:(char *base,yy_size_t size )
yy_scan_bytes	parser/lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )$/;"	f	signature:(yyconst char * yybytes, int _yybytes_len )
yy_scan_bytes	parser/lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len  );$/;"	p	file:	signature:(yyconst char *bytes,int len )
yy_scan_string	parser/lex.yy.c	/^YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )$/;"	f	signature:(yyconst char * yystr )
yy_scan_string	parser/lex.yy.c	/^YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );$/;"	p	file:	signature:(yyconst char *yy_str )
yy_set_bol	parser/lex.yy.c	329;"	d	file:
yy_set_interactive	parser/lex.yy.c	319;"	d	file:
yy_size_t	parser/lex.yy.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_start	parser/lex.yy.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	parser/lex.yy.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	parser/lex.yy.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f	signature:(YY_BUFFER_STATE new_buffer )
yy_switch_to_buffer	parser/lex.yy.c	/^void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );$/;"	p	file:	signature:(YY_BUFFER_STATE new_buffer )
yy_trans_info	parser/lex.yy.c	/^struct yy_trans_info$/;"	s	file:
yy_trans_info::yy_nxt	parser/lex.yy.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:	access:public
yy_trans_info::yy_verify	parser/lex.yy.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:	access:public
yy_try_NUL_trans	parser/lex.yy.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:	signature:(yy_state_type yy_current_state )
yy_try_NUL_trans	parser/lex.yy.c	/^static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );$/;"	p	file:	signature:(yy_state_type current_state )
yy_verify	parser/lex.yy.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:	access:public
yyalloc	parser/lex.yy.c	/^void *yyalloc (yy_size_t  );$/;"	p	file:
yyalloc	parser/lex.yy.c	/^void *yyalloc (yy_size_t  size )$/;"	f	signature:(yy_size_t size )
yyconst	parser/lex.yy.c	106;"	d	file:
yyconst	parser/lex.yy.c	108;"	d	file:
yyensure_buffer_stack	parser/lex.yy.c	/^static void yyensure_buffer_stack (void );$/;"	p	file:	signature:(void )
yyensure_buffer_stack	parser/lex.yy.c	/^static void yyensure_buffer_stack (void)$/;"	f	file:	signature:(void)
yyfree	parser/lex.yy.c	/^void yyfree (void *  );$/;"	p	file:	signature:(void * )
yyfree	parser/lex.yy.c	/^void yyfree (void * ptr )$/;"	f	signature:(void * ptr )
yyget_debug	parser/lex.yy.c	/^int yyget_debug  (void)$/;"	f	signature:(void)
yyget_debug	parser/lex.yy.c	/^int yyget_debug (void );$/;"	p	file:	signature:(void )
yyget_extra	parser/lex.yy.c	/^YY_EXTRA_TYPE yyget_extra (void );$/;"	p	file:	signature:(void )
yyget_in	parser/lex.yy.c	/^FILE *yyget_in  (void)$/;"	f	signature:(void)
yyget_in	parser/lex.yy.c	/^FILE *yyget_in (void );$/;"	p	file:	signature:(void )
yyget_leng	parser/lex.yy.c	/^int yyget_leng  (void)$/;"	f	signature:(void)
yyget_leng	parser/lex.yy.c	/^int yyget_leng (void );$/;"	p	file:	signature:(void )
yyget_lineno	parser/lex.yy.c	/^int yyget_lineno  (void)$/;"	f	signature:(void)
yyget_lineno	parser/lex.yy.c	/^int yyget_lineno (void );$/;"	p	file:	signature:(void )
yyget_out	parser/lex.yy.c	/^FILE *yyget_out  (void)$/;"	f	signature:(void)
yyget_out	parser/lex.yy.c	/^FILE *yyget_out (void );$/;"	p	file:	signature:(void )
yyget_text	parser/lex.yy.c	/^char *yyget_text  (void)$/;"	f	signature:(void)
yyget_text	parser/lex.yy.c	/^char *yyget_text (void );$/;"	p	file:	signature:(void )
yyin	parser/lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyinput	parser/lex.yy.c	/^    static int yyinput (void)$/;"	f	file:	signature:(void)
yyinput	parser/lex.yy.c	/^static int yyinput (void );$/;"	p	file:	signature:(void )
yyleng	parser/lex.yy.c	/^int yyleng;$/;"	v
yyless	parser/lex.yy.c	1562;"	d	file:
yyless	parser/lex.yy.c	1563;"	d	file:
yyless	parser/lex.yy.c	175;"	d	file:
yylex	parser/lex.yy.c	/^extern int yylex (void);$/;"	p	file:	signature:(void)
yylex_destroy	parser/lex.yy.c	/^int yylex_destroy  (void)$/;"	f	signature:(void)
yylex_destroy	parser/lex.yy.c	/^int yylex_destroy (void );$/;"	p	file:	signature:(void )
yylineno	parser/lex.yy.c	/^int yylineno = 1;$/;"	v
yymore	parser/lex.yy.c	457;"	d	file:
yyout	parser/lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yypop_buffer_state	parser/lex.yy.c	/^void yypop_buffer_state (void );$/;"	p	file:	signature:(void )
yypop_buffer_state	parser/lex.yy.c	/^void yypop_buffer_state (void)$/;"	f	signature:(void)
yypush_buffer_state	parser/lex.yy.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );$/;"	p	file:	signature:(YY_BUFFER_STATE new_buffer )
yypush_buffer_state	parser/lex.yy.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f	signature:(YY_BUFFER_STATE new_buffer )
yyrealloc	parser/lex.yy.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f	signature:(void * ptr, yy_size_t size )
yyrealloc	parser/lex.yy.c	/^void *yyrealloc (void *,yy_size_t  );$/;"	p	file:	signature:(void *,yy_size_t )
yyrestart	parser/lex.yy.c	/^    void yyrestart  (FILE * input_file )$/;"	f	signature:(FILE * input_file )
yyrestart	parser/lex.yy.c	/^void yyrestart (FILE *input_file  );$/;"	p	file:	signature:(FILE *input_file )
yyset_debug	parser/lex.yy.c	/^void yyset_debug (int  bdebug )$/;"	f	signature:(int bdebug )
yyset_debug	parser/lex.yy.c	/^void yyset_debug (int debug_flag  );$/;"	p	file:	signature:(int debug_flag )
yyset_extra	parser/lex.yy.c	/^void yyset_extra (YY_EXTRA_TYPE user_defined  );$/;"	p	file:	signature:(YY_EXTRA_TYPE user_defined )
yyset_in	parser/lex.yy.c	/^void yyset_in  (FILE * in_str  );$/;"	p	file:	signature:(FILE * in_str )
yyset_in	parser/lex.yy.c	/^void yyset_in (FILE *  in_str )$/;"	f	signature:(FILE * in_str )
yyset_lineno	parser/lex.yy.c	/^void yyset_lineno (int  line_number )$/;"	f	signature:(int line_number )
yyset_lineno	parser/lex.yy.c	/^void yyset_lineno (int line_number  );$/;"	p	file:	signature:(int line_number )
yyset_out	parser/lex.yy.c	/^void yyset_out  (FILE * out_str  );$/;"	p	file:	signature:(FILE * out_str )
yyset_out	parser/lex.yy.c	/^void yyset_out (FILE *  out_str )$/;"	f	signature:(FILE * out_str )
yyterminate	parser/lex.yy.c	602;"	d	file:
yytext	parser/lex.yy.c	/^char *yytext;$/;"	v
yytext_ptr	parser/lex.yy.c	354;"	d	file:
yyunput	parser/lex.yy.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	file:	signature:(int c, register char * yy_bp )
yyunput	parser/lex.yy.c	/^    static void yyunput (int c,char *buf_ptr  );$/;"	p	file:	signature:(int c,char *buf_ptr )
yywrap	parser/lex.yy.c	/^extern "C" int yywrap (void );$/;"	p	file:	signature:(void )
yywrap	parser/lex.yy.c	/^extern int yywrap (void );$/;"	p	file:	signature:(void )
yywrap	parser/lex.yy.c	/^int yywrap()$/;"	f
~CvAPCluster	lib/mlapcluster.cpp	/^CvAPCluster::~CvAPCluster()$/;"	f	class:CvAPCluster	signature:()
~CvAPCluster	lib/mlapcluster.h	/^		virtual ~CvAPCluster();$/;"	p	class:CvAPCluster	access:public	signature:()
